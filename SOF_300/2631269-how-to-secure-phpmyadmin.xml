<?xml version="1.0" encoding="utf-8"?>
<post><title>php - How to secure phpMyAdmin - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I have noticed that there are strange requests to my website trying to find phpmyadmin, like</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="str">/phpmyadmin/</span><span class="pln">
</span><span class="pun">/</span><span class="pln">pma</span><span class="pun">/</span></code></pre>
<p>etc.</p>
<p>Now I have installed PMA on Ubuntu via apt and would like to access it via webaddress different from /phpmyadmin/. What can I do to change it?</p>
<p>Thanks</p>
<hr/>
<p><strong>Update</strong></p>
<p>For Ubuntu 9.10 and Apache2, the corresponding setting is located in the file <code>/etc/apache2/conf.d/phpmyadmin.conf</code> which is a link to <code>/etc/phpmyadmin/apache.conf</code>. The file contains</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">Alias</span><span class="pln"> </span><span class="pun">/</span><span class="pln">phpmyadmin </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="pln">share</span><span class="pun">/</span><span class="pln">phpmyadmin</span></code></pre>
<p>where the first <code>/phpmyadmin</code> should be changed to something different if one wants to avoid the unnecessary activity, e.g.:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">Alias</span><span class="pln"> </span><span class="pun">/</span><span class="pln">secret </span><span class="pun">/</span><span class="pln">usr</span><span class="pun">/</span><span class="pln">share</span><span class="pun">/</span><span class="pln">phpmyadmin</span></code></pre>
</div></text><author><a href="/users/183528/rook">rook</a></author><comments><comment><text><span class="comment-copy">Shouldn't the title have been "how to move phpMyAdmin"? Changing the url is not really securing...</span></text><author><a class="comment-user" href="/users/723090/mark" title="4,755 reputation">Mark</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>The biggest threat is that an attacker could leverage a vulnerability such as; directory traversal,  or using SQL Injection to call <code>load_file()</code> to read the plain text username/password in the configuration file and then Login using phpmyadmin or over tcp  port 3306.  As a pentester I have used this attack pattern to compromise a system.</p>
<p>Here is a great way to lock down phpmyadmin:</p>
<ul>
<li><strong>DO NOT ALLOW REMOTE ROOT LOGINS!</strong> Instead phpmyadmin can be configured to use <a href="http://wiki.phpmyadmin.net/pma/Auth_types#cookie" rel="noreferrer">"Cookie Auth"</a> to limit what user can access the system.  If you need some root privileges,  create a custom account that can add/drop/create but doesn't have <code>grant</code> or <code>file_priv</code>.   </li>
<li>Remove <code>file_priv</code> permissions from every account. <code>file_priv</code> is one of the most dangerous privileges in MySQL because it allows an attacker to read files or upload a backdoor. </li>
<li>Whitelist IP address who have access to the phpmyadmin interface.  Here is an example .htaccess reulset:</li>
</ul>
<blockquote>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">Order</span><span class="pln"> deny</span><span class="pun">,</span><span class="pln">allow
</span><span class="typ">Deny</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> all
allow </span><span class="kwd">from</span><span class="pln"> </span><span class="lit">199.166</span><span class="pun">.</span><span class="lit">210.1</span></code></pre>
</blockquote>
<ul>
<li><p>Do not have a predictable file location like: <code>http://127.0.0.1/phpmyadmin</code>.  Vulnerability scanners like Nessus/Nikto/Acunetix/w3af will scan for this. </p></li>
<li><p>Firewall off tcp port 3306 so that it cannot be accessed by an attacker.  </p></li>
<li>Use HTTPS,  otherwise data and passwords can be leaked to an
attacker.  If you don't want to fork out the $30 for a cert,  then
use a self-signed.  You'll accept it once,  and even if it was
changed due to a MITM you'll be notified.</li>
</ul>
</div></text><author><a href="/users/183528/rook">rook</a></author><comments><comment><text><span class="comment-copy">I don't mean to be critical, but funny how you don't address the 'biggest threat' until the last step. The biggest threat for most people is being brute forced- which your other steps address.  Using a decent password is also a good idea.</span></text><author><a class="comment-user" href="/users/129198/therealsix" title="502 reputation">therealsix</a></author></comment><comment><text><span class="comment-copy">@therealsix  your right,  but i assumed that was obvious.  Brute force for mysql is less common than mssql becuase you have xp_cmdshell() which calls cmd.exe. In mysql wormable code execution isn't straight forward.</span></text><author><a class="comment-user" href="/users/183528/rook" title="43,765 reputation">rook</a></author></comment><comment><text><span class="comment-copy">We also toggle AllowRoot to false in the phpMyAdmin config.</span></text><author><a class="comment-user" href="/users/186782/zmonteca" title="1,465 reputation">zmonteca</a></author></comment><comment><text><span class="comment-copy">@Rook Thanks for these recommendations! I'm a little confused though. At the end of the day, if a user has DELETE privileges, they can empty your whole database. So how does disabling "grant" or "file_priv" help protect my database?</span></text><author><a class="comment-user" href="/users/297015/jonathan" title="8,197 reputation">Jonathan</a></author></comment><comment><text><span class="comment-copy">@Rook what do you mean in passage 4 exactly?</span></text><author><a class="comment-user" href="/users/1047713/elect" title="1,954 reputation">elect</a></author></comment><comment><text><span class="comment-copy">@elect port 3306 is used by mysql.</span></text><author><a class="comment-user" href="/users/183528/rook" title="43,765 reputation">rook</a></author></comment><comment><text><span class="comment-copy">@Rook Ok, I know. But what you mean by "firewall it off"? Close it/open it/other?</span></text><author><a class="comment-user" href="/users/1047713/elect" title="1,954 reputation">elect</a></author></comment><comment><text><span class="comment-copy">@elect If you notice the OP's question has a "security" tag,  which means that this post is dealing with attacks against software.</span></text><author><a class="comment-user" href="/users/183528/rook" title="43,765 reputation">rook</a></author></comment><comment><text><span class="comment-copy">@Rook Yep, I noticed. I have already implemented the 'Cookie Auth' and I moved pma on a custom port. Right now I am implementing also your point 5. What I didnt get its just your point 4. What did you mean <i>technically</i>?</span></text><author><a class="comment-user" href="/users/1047713/elect" title="1,954 reputation">elect</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>One of my concerns with phpMyAdmin was that by default, all MySQL users can access the db. If DB's root password is compromised, someone can wreck havoc on the db. I wanted to find a way to avoid that by restricting which MySQL user can login to phpMyAdmin.</p>
<p>I have found using AllowDeny configuration in PhpMyAdmin to be very useful. 
<a href="http://wiki.phpmyadmin.net/pma/Config#AllowDeny_.28rules.29">http://wiki.phpmyadmin.net/pma/Config#AllowDeny_.28rules.29</a></p>
<p>AllowDeny lets you configure access to phpMyAdmin in a similar way to Apache. If you set the 'order' to explicit, it will only grant access to users defined in 'rules' section. In the rules, section you restrict MySql users who can access use the phpMyAdmin. </p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">$cfg</span><span class="pun">[</span><span class="str">'Servers'</span><span class="pun">][</span><span class="pln">$i</span><span class="pun">][</span><span class="str">'AllowDeny'</span><span class="pun">][</span><span class="str">'order'</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">'explicit'</span><span class="pln">
$cfg</span><span class="pun">[</span><span class="str">'Servers'</span><span class="pun">][</span><span class="pln">$i</span><span class="pun">][</span><span class="str">'AllowDeny'</span><span class="pun">][</span><span class="str">'rules'</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> array</span><span class="pun">(</span><span class="str">'pma-user from all'</span><span class="pun">)</span></code></pre>
<p>Now you have limited access to the user named pma-user in MySQL, you can grant limited privilege to that user.</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">grant </span><span class="kwd">select</span><span class="pln"> on db_name</span><span class="pun">.</span><span class="pln">some_table to </span><span class="str">'pma-user'</span><span class="pun">@</span><span class="str">'app-server'</span></code></pre>
</div></text><author><a href="/users/559009/jae-cho">Jae Cho</a></author><comments><comment><text><span class="comment-copy">Nice tip! Just a small bug in your code, the rules should look like this: <code>$cfg['Servers'][$i]['AllowDeny']['rules'] = array('allow pma-user from all');</code></span></text><author><a class="comment-user" href="/users/297015/jonathan" title="8,197 reputation">Jonathan</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Another solution is to use the config file without any settings. The first time you might have to include your mysql root login/password so it can install all its stuff but then remove it.</p>
<blockquote>
<p>$cfg['Servers'][$i]['auth_type'] = 'cookie';</p>
<p>$cfg['Servers'][$i]['host'] = 'localhost';</p>
<p>$cfg['Servers'][$i]['connect_type'] = 'tcp';</p>
<p>$cfg['Servers'][$i]['compress'] = false;</p>
<p>$cfg['Servers'][$i]['extension'] = 'mysql';</p>
</blockquote>
<p>Leaving it like that without any apache/lighhtpd aliases will just present to you a log in screen.
<img alt="enter image description here" src="https://i.stack.imgur.com/npDTz.png"/></p>
<p>You can log in with root but it is advised to create other users and only allow root for local access. Also remember to use string passwords, even if short but with a capital, and number of special character. for example <code>!34sy2rmbr!</code> aka "easy 2 remember"</p>
<p>-EDIT: A good password now a days is actually something like words that <a href="https://tech.dropbox.com/2012/04/zxcvbn-realistic-password-strength-estimation/" rel="nofollow noreferrer">make no grammatical sense but you can remember because they funny</a>. Or use keepass to generate strong randoms an have easy access to them</p>
</div></text><author><a href="/users/706363/ppumkin">ppumkin</a></author><comments><comment><text><span class="comment-copy">Lastpass is also another great password management system</span></text><author><a class="comment-user" href="/users/4871483/ytpillai" title="1,280 reputation">ytpillai</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>In newer versions of phpMyAdmin access permissions for user-names + ip-addresses can be set up inside the phpMyAdmin's config.inc.php file. This is a much better and more robust method of restricting access (over hard-coding URLs and IP addresses into Apache's httpd.conf).</p>
<p>Here is a full example of how to switch to white-listing all users (no one outside this list will be allowed access), and also how to restrict user root to the local system and network only.</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">$cfg</span><span class="pun">[</span><span class="str">'Servers'</span><span class="pun">][</span><span class="pln">$i</span><span class="pun">][</span><span class="str">'AllowDeny'</span><span class="pun">][</span><span class="str">'order'</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">'deny,allow'</span><span class="pun">;</span><span class="pln">
$cfg</span><span class="pun">[</span><span class="str">'Servers'</span><span class="pun">][</span><span class="pln">$i</span><span class="pun">][</span><span class="str">'AllowDeny'</span><span class="pun">][</span><span class="str">'rules'</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> array</span><span class="pun">(</span><span class="pln">
    </span><span class="str">'deny % from all'</span><span class="pun">,</span><span class="pln"> </span><span class="com">// deny everyone by default, then -</span><span class="pln">

    </span><span class="str">'allow % from 127.0.0.1'</span><span class="pun">,</span><span class="pln"> </span><span class="com">// allow all local users</span><span class="pln">
    </span><span class="str">'allow % from ::1'</span><span class="pun">,</span><span class="pln">

    </span><span class="com">//'allow % from SERVER_ADDRESS', // allow all from server IP</span><span class="pln">

    </span><span class="com">// allow user:root access from these locations (local network)</span><span class="pln">
    </span><span class="str">'allow root from localhost'</span><span class="pun">,</span><span class="pln">
    </span><span class="str">'allow root from 127.0.0.1'</span><span class="pun">,</span><span class="pln">
    </span><span class="str">'allow root from 10.0.0.0/8'</span><span class="pun">,</span><span class="pln">
    </span><span class="str">'allow root from 172.16.0.0/12'</span><span class="pun">,</span><span class="pln">
    </span><span class="str">'allow root from 192.168.0.0/16'</span><span class="pun">,</span><span class="pln">

    </span><span class="str">'allow root from ::1'</span><span class="pun">,</span><span class="pln">

    </span><span class="com">// add more usernames and their IP (or IP ranges) here -    </span><span class="pln">
    </span><span class="pun">);</span></code></pre>
<p>Source: <a href="http://www.devside.net/guides/windows/phpmyadmin" rel="nofollow">How to Install and Secure phpMyAdmin on localhost for Windows</a></p>
<p>This gives you much more fine-grained access restrictions than Apache's URL permissions or an .htaccess file can provide, at the MySQL user name level.</p>
<p><em>Make sure that the user you are login in with, has its MySQL <code>Host:</code> field set to <code>127.0.0.1</code> or <code>::1</code>, as phpMyAdmin and MySQL are on the same system.</em></p>
</div></text><author><a href="/users/766152/rightstuff">rightstuff</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Most likely, somewhere on your webserver will be an Alias directive like this;</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">Alias</span><span class="pln"> </span><span class="pun">/</span><span class="pln">phpmyadmin </span><span class="str">"c:/wamp/apps/phpmyadmin3.1.3.1/"</span></code></pre>
<p>In my wampserver / localhost setup, it was in c:/wamp/alias/phpmyadmin.conf.</p>
<p>Just change the alias directive and you should be good to go.</p>
</div></text><author><a href="/users/108147/mathew">Mathew</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>The simplest approach would be to edit the webserver, most likely an Apache2 installation, configuration and give phpmyadmin a different name.</p>
<p>A second approach would be to limit the IP addresses from where phpmyadmin may be accessed (e.g. only local lan or localhost).</p>
</div></text><author><a href="/users/31472/lexu">lexu</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>If you are running a linux server:</p>
<ul>
<li>Using SSH you can forbid the user/password loging and only accept a public key in the authorized_keys file</li>
<li>Use putty to connect to your server and open a remote terminal</li>
<li>Forward X11 and brings localhost firefox/iceweasel to your desktop (in windows you need Xming software installed)</li>
<li>Now you secured your phpMyAdmin throught ssh</li>
</ul>
<p>This system is quite secure/handy for homeservers -usually with all ports blocked by default-. You only have to forward the SSH port (don't use number 22).</p>
<p>If you like Microsoft Terminal Server you can even set a SSH Tunneling to your computer and connect securely to your web server throught it. </p>
<p>With <strong>ssh tunneling</strong> you even can forward the 3306 port of your remote server to a local port and connect using local phpMyAdmin or MySQL Workbench. </p>
<p>I understand that this option is an overkill, but is as secure as the access of your private key. </p>
</div></text><author><a href="/users/2318531/jjfs">JJFS</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>You can use the following command :</p>
<p>$ grep "phpmyadmin" $path_to_access.log | grep -Po "^\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}" | sort | uniq | xargs -I% sudo iptables -A INPUT -s % -j DROP </p>
<p>Explanation :</p>
<p>Make sure your IP isn't listed before piping through iptables drop!!</p>
<p>This will first find all lines in $path_to_access.log that have phpmyadmin in them,</p>
<p>then grep out the ip address from the start of the line,</p>
<p>then sort and unique them,</p>
<p>then add a rule to drop them in iptables</p>
<p>Again, just edit in echo % at the end instead of the iptables command to make sure your IP isn't in there. Don't inadvertently ban your access to the server!</p>
<p>Limitations</p>
<p>You may need to change the grep part of the command if you're on mac or any system that doesn't have grep -P. I'm not sure if all systems start with xargs, so that might need to be installed too. It's super useful anyway if you do a lot of bash.</p>
</div></text><author><a href="/users/7239692/technical-blood">Technical Blood</a></author><comments/></answer></answers></post>