<?xml version="1.0" encoding="utf-8"?>
<post><title>browser - Finding All Insecure Content on a Secure Page - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>What's the most efficient way to find a list of all non-HTTPS URLs requested by an HTTPS page? If this kind of security violation happens, every browser alerts the user, but I can't find an easy way to find what exact URLs cause the violation.</p>
<p>The easiest way I've found so far is to use Firefox, but even then it's still not very convenient. First, I can right-click, select View Page Info, click the Media tab, and scroll through a list of URLs. However, this seems to only list image files, not CSS or JS includes that can also cause the error. For those, I have to use the Firebug extension, select the Net tab, and manually hover my mouse over each item to see the entire URL. Unfortunately, this can take a while if you have dozens of media files. Is there a better way?</p>
</div></text><author><a href="/users/247542/cerin">Cerin</a></author><comments><comment><text><span class="comment-copy">You might look into the <a href="https://addons.mozilla.org/en-US/firefox/addon/tamper-data/" rel="nofollow noreferrer">TamperData plugin</a> for Firefox.</span></text><author><a class="comment-user" href="/users/182668/pointy" title="271,802 reputation">Pointy</a></author></comment><comment><text><span class="comment-copy">I know this is an old post but maybe this will help someone, there's a Desktop app you can use to scan and report on mixed content issues on an entire site: <a href="https://www.ecommerce.co.uk/httpschecker" rel="nofollow noreferrer">ecommerce.co.uk/httpschecker</a>. You can also request scan results through email too :)</span></text><author><a class="comment-user" href="/users/1634183/stilliard" title="309 reputation">stilliard</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>Note, in recent versions of Chrome, these errors will be displayed in the Javascript Console.</p>
<p>e.g.</p>
<pre><code>The page at https://mysecuresite.com displayed insecure content from http://unsecuresite.com/some.jpg.
</code></pre>
</div></text><author><a href="/users/247542/cerin">Cerin</a></author><comments><comment><text><span class="comment-copy">this is the best way</span></text><author><a class="comment-user" href="/users/626048/obie" title="537 reputation">Obie</a></author></comment><comment><text><span class="comment-copy">On Firefox, HTTP requests sent from a HTTPS connection can be seen in red on the Web Console (<code>Tools</code>&gt;<code>Web Developer</code>&gt;<code>Web Console</code> or <code>Ctrl</code>+<code>Shift</code>+<code>K</code>).</span></text><author><a class="comment-user" href="/users/372899/axeeffect" title="826 reputation">AxeEffect</a></author></comment><comment><text><span class="comment-copy">If using Chrome or Firefox consoles you still don't see the HTTP insecure request you will have to use Fiddler or WhyNoPadlock.com as suggested below.</span></text><author><a class="comment-user" href="/users/372899/axeeffect" title="826 reputation">AxeEffect</a></author></comment><comment><text><span class="comment-copy">Watch out for browser plugins causing the problem</span></text><author><a class="comment-user" href="/users/884742/matt-watson" title="622 reputation">Matt Watson</a></author></comment><comment><text><span class="comment-copy">this is cool...</span></text><author><a class="comment-user" href="/users/77121/stacktrace" title="4,349 reputation">StackTrace</a></author></comment><comment><text><span class="comment-copy">I found Chrome <i>much</i> more reliable than anything else for this. It was the only way I could track down a resource loaded quite far down a chain of loaded JS resources. Firefox and two online checkers (SSLcheck and Why No Padlock) couldn't identify it, although Firefox did complain it was there and block that particular content, it just wasn't reporting it in the console.</span></text><author><a class="comment-user" href="/users/2493235/superduperapps" title="3,241 reputation">SuperDuperApps</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Try: <a href="http://www.WhyNoPadlock.com/">www.WhyNoPadlock.com</a> It will give you a report of all insecure content on any https web page.</p>
</div></text><author><a href="/users/668258/rob-mangiafico">Rob Mangiafico</a></author><comments><comment><text><span class="comment-copy">Doesn't help for content that requires authentication</span></text><author><a class="comment-user" href="/users/626048/obie" title="537 reputation">Obie</a></author></comment><comment><text><span class="comment-copy">I like @Rob's answer better. The site he shared tells you exactly which items are insecure.  My issue was that Google fonts was being requested without https and the site saved me a lot of time going through my files so check for https in all my includes.</span></text><author><a class="comment-user" href="/users/3095992/pmalbu" title="456 reputation">pmalbu</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>You can use <a href="http://jitbit.com/sslcheck/">SslCheck</a></p>
<p>It's a free online tool that crawls a website recursively (following all internal links) and scans for unsecure content - images, scripts and CSS.</p>
<p>(disclaimer: I'm one of the developers)</p>
</div></text><author><a href="/users/56621/jitbit">jitbit</a></author><comments><comment><text><span class="comment-copy">While this link may answer the question, it is better to include the essential parts of the answer here and provide the link for reference.  Link-only answers can become invalid if the linked page changes.</span></text><author><a class="comment-user" href="/users/545127/raedwald" title="19,372 reputation">Raedwald</a></author></comment><comment><text><span class="comment-copy">@Raedwald It's an online tool. How do you include the essential parts of that here?</span></text><author><a class="comment-user" href="/users/811240/mike" title="11,571 reputation">Mike</a></author></comment><comment><text><span class="comment-copy">Nice tool, but it's not checking <code>&lt;form&gt;</code> elements. In my case, a site was implementing their search with <code>&lt;form method="get" action="http://www.google.com/search"&gt;</code> which triggered the Chrome warning.</span></text><author><a class="comment-user" href="/users/215168/abe-voelker" title="14,344 reputation">Abe Voelker</a></author></comment><comment><text><span class="comment-copy">@AbeVoelker Thanks, I'll contact the team to update it.</span></text><author><a class="comment-user" href="/users/56621/jitbit" title="20,873 reputation">jitbit</a></author></comment><comment><text><span class="comment-copy">@jitbit The comment at the bottom of the page that - This page accepts hash-parameters like this: <a href="https://www.jitbit.com/sslcheck/#url=https://www.google.com/" rel="nofollow noreferrer">jitbit.com/sslcheck/#url=https://www.google.com</a>, feel free to use. Seems that functionality is broken now</span></text><author><a class="comment-user" href="/users/805923/pal4life" title="1,229 reputation">pal4life</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Use Fiddler.</p>
<p>Secure requests won't show up at all (except as HTTPS CONNECTs, which can be hidden), so everything you'll see is bad.</p>
</div></text><author><a href="/users/34397/slaks">SLaks</a></author><comments><comment><text><span class="comment-copy">Alas, I'm on Linux and it says it requires Windows. Does it work at all under Mono?</span></text><author><a class="comment-user owner" href="/users/247542/cerin" title="18,311 reputation">Cerin</a></author></comment><comment><text><span class="comment-copy">I would guess not, but I don't know.</span></text><author><a class="comment-user" href="/users/34397/slaks" title="576,191 reputation">SLaks</a></author></comment><comment><text><span class="comment-copy">requires windows :(</span></text><author><a class="comment-user" href="/users/626048/obie" title="537 reputation">Obie</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I had this problem which occurred in a javascript:</p>
<pre><code>/* for Internet Explorer */
/*@cc_on @*/
/*@if (@_win32)
    document.write("&lt;script id=__ie_onload defer src=javascript:void(0)&gt;&lt;\/script&gt;");
(.....)
</code></pre>
<p>The src=javascript:void(0) should be avoided.</p>
<p>You can not find this problem using Fiddler or Chrome.</p>
</div></text><author><a href="/users/2590993/giso-stallenberg">Giso Stallenberg</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Recently had the same issue, using chrome developer tool it was easier to find.. In developer tool go to <strong>Security</strong> tab, you can find all non-https request</p>
<p><a href="https://i.stack.imgur.com/Vb0D8.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Vb0D8.jpg"/></a></p>
</div></text><author><a href="/users/2238873/vinayak-hegde">vinayak hegde</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Use <a href="http://portswigger.net/burp/" rel="nofollow">Burp Suite</a>, set up the scope as your website, browse to the secure page and check which request are made to HTTP version of your website.</p>
</div></text><author><a href="/users/248020/pedro-laguna">Pedro Laguna</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>If you own the website, you should look into <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP" rel="nofollow noreferrer">the <code>Content-Security-Policy</code> header options.</a> These can include <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/block-all-mixed-content" rel="nofollow noreferrer">forcing HTTPS on resources,</a> or automatically attempting to <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/upgrade-insecure-requests" rel="nofollow noreferrer">redirect HTTP resources to HTTPS,</a> among other things.</p>
<p>Notably, there is also a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/report-uri" rel="nofollow noreferrer"><code>report-uri</code></a> directive that reports any infractions of your CSP to a uri of your choosing. This means that any browser with support<sup>1</sup> for <code>report-uri</code> will send you reports of pages on your site with problematic HTTPS <em>on an ongoing basis.</em> Mozilla Developer Network has a PHP example of handling the reports.</p>
<hr/>
<p><sup>1</sup> Note that if you can reasonably expect <em>any</em> browser with full CSP support to hit the pages in question, it doesn't matter that some browsers do not have support for it.</p>
</div></text><author><a href="/users/241211/michael">Michael</a></author><comments/></answer></answers></post>