<?xml version="1.0" encoding="utf-8"?>
<post><title>security - How do I get the entity that represents the current user in Symfony2? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I am using the Symfony security setup. Everything works fine, but I don't know how to do one important thing:</p>
<p>In twig, I can reach the current user's info by doing:</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="typ">Welcome</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{{</span><span class="pln"> app</span><span class="pun">.</span><span class="pln">user</span><span class="pun">.</span><span class="pln">username </span><span class="pun">}}</span></code></pre>
<p>or similar</p>
<p>How do I access this same information in the Controller? Specifically, I want to get the current user entity so I can store it relationally in another entity (one-to-one mapping).</p>
<p>I was really hoping it'd be</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">$this</span><span class="pun">-&gt;</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'security.context'</span><span class="pun">)-&gt;</span><span class="pln">getToken</span><span class="pun">()-&gt;</span><span class="pln">getUser</span><span class="pun">()</span></code></pre>
<p>but that doesn't work. It gives me a class of type</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="typ">Symfony</span><span class="pln">\Component\Security\Core\User\User</span></code></pre>
<p>and I want one of type</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="typ">Acme</span><span class="pln">\AuctionBundle\Entity\User</span></code></pre>
<p>which is my entity....</p>
</div></text><author><a href="/users/569101/j0k">j0k</a></author><comments><comment><text><span class="comment-copy"><a href="http://symfony.com/doc/master/book/security.html#retrieving-the-user-object" rel="nofollow noreferrer">The Symfony Book: Retrieving the user object</a></span></text><author><a class="comment-user" href="/users/388916/hubro" title="21,272 reputation">Hubro</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>As ktolis says, you first have to configure your <code>/app/config/security.yml</code>.</p>
<p>Then with</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">$usr</span><span class="pun">=</span><span class="pln"> $this</span><span class="pun">-&gt;</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'security.context'</span><span class="pun">)-&gt;</span><span class="pln">getToken</span><span class="pun">()-&gt;</span><span class="pln">getUser</span><span class="pun">();</span><span class="pln">
$usr</span><span class="pun">-&gt;</span><span class="pln">getUsername</span><span class="pun">();</span></code></pre>
<p>should be enougth!</p>
<p><strong>$usr</strong> is your User Object! You don't need to query it again.</p>
<p>Find out the way to set up your providers in <code>security.yml</code> from <a href="http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers" rel="noreferrer">Sf2 Documentation</a> and try again.</p>
<p>Best luck!</p>
<hr/>
<p><strong>EDIT:</strong> from symfony 2.6, <code>security.context</code> service is deprecated, use <code>security.token_storage</code> service as:</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">$this</span><span class="pun">-&gt;</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'security.token_storage'</span><span class="pun">)-&gt;</span><span class="pln">getToken</span><span class="pun">()-&gt;</span><span class="pln">getUser</span><span class="pun">()</span></code></pre>
</div></text><author><a href="/users/964340/cristian-douce">Cristian Douce</a></author><comments><comment><text><span class="comment-copy">For me, $this-&gt;getUser() also works to get the user object.</span></text><author><a class="comment-user" href="/users/709769/madc" title="856 reputation">madc</a></author></comment><comment><text><span class="comment-copy">@madc Nice finding</span></text><author><a class="comment-user" href="/users/1502830/chocodeveloper" title="5,145 reputation">ChocoDeveloper</a></author></comment><comment><text><span class="comment-copy">What if i need the user entity on a PHP template?</span></text><author><a class="comment-user" href="/users/310648/domingosl" title="4,773 reputation">DomingoSL</a></author></comment><comment><text><span class="comment-copy">@DomingoSL Check the following link from the official documentation: <a href="http://symfony.com/doc/master/book/security.html#retrieving-the-user-object" rel="nofollow noreferrer">symfony.com/doc/master/book/…</a></span></text><author><a class="comment-user" href="/users/964340/cristian-douce" title="2,017 reputation">Cristian Douce</a></author></comment><comment><text><span class="comment-copy">Since Symfony 2.6, the security.context service has been deprecated and split into two new services: security.authorization_checker and security.token_storage. You can check the correct way to fetch current user here : <a href="http://symfony.com/blog/new-in-symfony-2-6-security-component-improvements" rel="nofollow noreferrer">symfony.com/blog/…</a></span></text><author><a class="comment-user" href="/users/3262676/jmleroux" title="867 reputation">jmleroux</a></author></comment><comment><text><span class="comment-copy">nice @jmleroux!</span></text><author><a class="comment-user" href="/users/964340/cristian-douce" title="2,017 reputation">Cristian Douce</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<h1>Best practice</h1>
<p>According to <a href="http://symfony.com/doc/current/book/security.html#retrieving-the-user-object" rel="nofollow noreferrer">the relevant passage in the documentation</a> since Symfony 2.1 simply use this shortcut :</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">$user </span><span class="pun">=</span><span class="pln"> $this</span><span class="pun">-&gt;</span><span class="pln">getUser</span><span class="pun">();</span></code></pre>
<p>The above is <strong>still working on Symfony 3.2</strong> and is a shortcut for this :</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">$user </span><span class="pun">=</span><span class="pln"> $this</span><span class="pun">-&gt;</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'security.token_storage'</span><span class="pun">)-&gt;</span><span class="pln">getToken</span><span class="pun">()-&gt;</span><span class="pln">getUser</span><span class="pun">();</span></code></pre>
<blockquote>
<p>The <code>security.token_storage</code> service was introduced in Symfony 2.6. Prior to Symfony 2.6, you had to use the <code>getToken()</code> method of the <code>security.context</code> service.</p>
</blockquote>
<p><strong>Example</strong> : And if you want directly the username :</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">$username </span><span class="pun">=</span><span class="pln"> $this</span><span class="pun">-&gt;</span><span class="pln">getUser</span><span class="pun">()-&gt;</span><span class="pln">getUsername</span><span class="pun">();</span></code></pre>
<h1>If wrong user class type</h1>
<p>The user will be an object and the class of that object will depend on your <a href="http://symfony.com/doc/current/book/security.html#security-user-providers%22Configuring%20how%20Users%20are%20Loaded%22" rel="nofollow noreferrer">user provider</a>.</p>
</div></text><author><a href="/users/2790959/antoine-subit">Antoine Subit</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>The thread is a bit old but i think this could probably save someone's time ...</p>
<p>I ran into the same problem as the original question, that the type is showed as
Symfony\Component\Security\Core\User\User</p>
<p>It eventually turned out that i was logged in using an in memory user</p>
<p>my security.yml looks something like this</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">security</span><span class="pun">:</span><span class="pln">
    providers</span><span class="pun">:</span><span class="pln">
        chain_provider</span><span class="pun">:</span><span class="pln">
            chain</span><span class="pun">:</span><span class="pln">
                providers</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">in_memory</span><span class="pun">,</span><span class="pln"> fos_userbundle</span><span class="pun">]</span><span class="pln">
        fos_userbundle</span><span class="pun">:</span><span class="pln">
            id</span><span class="pun">:</span><span class="pln"> fos_user</span><span class="pun">.</span><span class="pln">user_manager
        in_memory</span><span class="pun">:</span><span class="pln">
            memory</span><span class="pun">:</span><span class="pln">
                users</span><span class="pun">:</span><span class="pln">
                    user</span><span class="pun">:</span><span class="pln">  </span><span class="pun">{</span><span class="pln"> password</span><span class="pun">:</span><span class="pln"> userpass</span><span class="pun">,</span><span class="pln"> roles</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="str">'ROLE_USER'</span><span class="pln"> </span><span class="pun">]</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
                    admin</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> password</span><span class="pun">:</span><span class="pln"> adminpass</span><span class="pun">,</span><span class="pln"> roles</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="str">'ROLE_ADMIN'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'ROLE_SONATA_ADMIN'</span><span class="pln"> </span><span class="pun">]</span><span class="pln"> </span><span class="pun">}</span></code></pre>
<p>the in_memory user type is always Symfony\Component\Security\Core\User\User if you want to use your own entity, log in using that provider's user.</p>
<p>Thanks,
hj</p>
</div></text><author><a href="/users/1122692/hj">hj'</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">$this</span><span class="pun">-&gt;</span><span class="pln">container</span><span class="pun">-&gt;</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'security.token_storage'</span><span class="pun">)-&gt;</span><span class="pln">getToken</span><span class="pun">()-&gt;</span><span class="pln">getUser</span><span class="pun">();</span></code></pre>
</div></text><author><a href="/users/6643991/alenko-verzina">Alenko Verzina</a></author><comments><comment><text><span class="comment-copy">Welcome to stackoverflow. Please explain about answer. stackoverflow.com/help/how-to-answer</span></text><author><a class="comment-user" href="/users/4635388/rohan-khude" title="1,855 reputation">Rohan Khude</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Well, first you need to request the username of the user from the session in your controller action like this:</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">$username</span><span class="pun">=</span><span class="pln">$this</span><span class="pun">-&gt;</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'security.context'</span><span class="pun">)-&gt;</span><span class="pln">getToken</span><span class="pun">()-&gt;</span><span class="pln">getUser</span><span class="pun">()-&gt;</span><span class="pln">getUserName</span><span class="pun">();</span></code></pre>
<p>then do a query to the db and get your object with regular dql like</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">$em </span><span class="pun">=</span><span class="pln"> $this</span><span class="pun">-&gt;</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'doctrine.orm.entity_manager'</span><span class="pun">);</span><span class="pln">    
</span><span class="str">"SELECT u FROM Acme\AuctionBundle\Entity\User u where u.username="</span><span class="pun">.</span><span class="pln">$username</span><span class="pun">;</span><span class="pln">
$q</span><span class="pun">=</span><span class="pln">$em</span><span class="pun">-&gt;</span><span class="pln">createQuery</span><span class="pun">(</span><span class="pln">$query</span><span class="pun">);</span><span class="pln">
$user</span><span class="pun">=</span><span class="pln">$q</span><span class="pun">-&gt;</span><span class="pln">getResult</span><span class="pun">();</span></code></pre>
<p>the $user should now hold the user with this username ( you could also use other fields of course)</p>
<p>...but you will have to first configure your /app/config/security.yml configuration to use the appropriate field for your security provider like so:</p>
<pre class="lang-php prettyprint prettyprinted" style=""><code><span class="pln">security</span><span class="pun">:</span><span class="pln">
 provider</span><span class="pun">:</span><span class="pln">
  example</span><span class="pun">:</span><span class="pln">
   entity</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Acme</span><span class="pln">\AuctionBundle\Entity\User</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">property</span><span class="pun">:</span><span class="pln"> username</span><span class="pun">}</span></code></pre>
<p>hope this helps!</p>
</div></text><author><a href="/users/263907/ktolis">ktolis</a></author><comments><comment><text><span class="comment-copy">Well Martin you either want the user OR the username. The choice is yours. It's your responsibility to get the object you need. And as you said you don't want the regular user but the Acme namespace user.</span></text><author><a class="comment-user" href="/users/263907/ktolis" title="311 reputation">ktolis</a></author></comment><comment><text><span class="comment-copy">"SELECT u FROM Acme\AuctionBundle\Entity\User u where u.username=".$username; = YOU SHOULD USE PARAMETRIZED QUERIES!</span></text><author><a class="comment-user" href="/users/615053/cappy" title="661 reputation">CappY</a></author></comment><comment><text><span class="comment-copy"><code>$this-&gt;get('security.context')-&gt;getToken()-&gt;getUser()</code> itself gets you the logged in user object. You don't have to query it back again. In fact, which version were you using ?</span></text><author><a class="comment-user" href="/users/1140358/jeet" title="1,152 reputation">Jeet</a></author></comment></comments></answer></answers></post>