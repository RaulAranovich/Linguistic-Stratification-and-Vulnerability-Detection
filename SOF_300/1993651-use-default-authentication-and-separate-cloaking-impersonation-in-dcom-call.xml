<?xml version="1.0" encoding="utf-8"?>
<post><title>security - Use default authentication and separate cloaking/impersonation in DCOM call - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I'm trying achieve two things with DCOM (Out of process)</p>
<ol>
<li>Set the process wide authentication using CoInitializeSecurity and its parameter pAuthList.</li>
<li>Using cloaking to change the caller's identity in special situations (COM calls)</li>
</ol>
<p>My thoughts:</p>
<ol>
<li><p>AFAIK the auth info structure contains the default authentication information (like username and password for RPC_C_AUTHN_WINNT) for all new COM calls. So instead of the process token the information in the auth structure should be used by COM.
However, all COM calls/connections are always using the process' identity instead of the applied default one.</p></li>
<li><p>Usually, one can use CoSetProxyBlanket to change the auth info for a proxy. This works for me. My question here is whether it must or must not work if I impersonate the token myself and call the COM function. I've read in various MSDN articles that applying EOAC_DYNAMIC_CLOAKING to CoInitializeSecurity should make it working. However, my manually "impersonated COM calls always shows the process identity on the server side.</p></li>
</ol>
<p>The client looks like this (Delphi)</p>
<pre class="lang-pascal prettyprint prettyprinted" style=""><code><span class="kwd">var</span><span class="pln">
authList </span><span class="pun">:</span><span class="pln"> SOLE</span><span class="pun">_</span><span class="pln">AUTHENTICATION</span><span class="pun">_</span><span class="pln">LIST</span><span class="pun">;</span><span class="pln">
authidentity </span><span class="pun">:</span><span class="pln"> SEC</span><span class="pun">_</span><span class="pln">WINNT</span><span class="pun">_</span><span class="pln">AUTH</span><span class="pun">_</span><span class="pln">IDENTITY</span><span class="pun">_</span><span class="pln">W</span><span class="pun">;</span><span class="pln">
authInfo </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">array</span><span class="pun">[</span><span class="lit">0..1</span><span class="pun">]</span><span class="pln"> </span><span class="kwd">of</span><span class="pln"> SOLE</span><span class="pun">_</span><span class="pln">AUTHENTICATION</span><span class="pun">_</span><span class="pln">INFO</span><span class="pun">;</span><span class="pln">

pcAuthSvc </span><span class="pun">:</span><span class="pln"> DWORD</span><span class="pun">;</span><span class="pln">
asAuthSvc </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">array</span><span class="pun">[</span><span class="lit">0..0</span><span class="pun">]</span><span class="pln"> </span><span class="kwd">of</span><span class="pln"> SOLE</span><span class="pun">_</span><span class="pln">AUTHENTICATION</span><span class="pun">_</span><span class="pln">SERVICE</span><span class="pun">;</span><span class="pln">
Token </span><span class="pun">:</span><span class="pln"> TJwSecurityToken</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">begin</span><span class="pln">
ZeroMemory</span><span class="pun">(</span><span class="pln"> </span><span class="pun">@</span><span class="pln">authidentity</span><span class="pun">,</span><span class="pln"> sizeof</span><span class="pun">(</span><span class="pln">authidentity</span><span class="pun">)</span><span class="pln"> </span><span class="pun">);</span><span class="pln">

authidentity</span><span class="pun">.</span><span class="pln">User </span><span class="pun">:=</span><span class="pln"> </span><span class="str">'Testbenutzer'</span><span class="pun">;</span><span class="pln">
authidentity</span><span class="pun">.</span><span class="pln">UserLength </span><span class="pun">:=</span><span class="pln"> Length</span><span class="pun">(</span><span class="str">'Testbenutzer'</span><span class="pun">);</span><span class="pln">
authidentity</span><span class="pun">.</span><span class="pln">Domain </span><span class="pun">:=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span><span class="pln">
authidentity</span><span class="pun">.</span><span class="pln">DomainLength </span><span class="pun">:=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
authidentity</span><span class="pun">.</span><span class="pln">Password </span><span class="pun">:=</span><span class="pln"> </span><span class="str">'test'</span><span class="pun">;</span><span class="pln">
authidentity</span><span class="pun">.</span><span class="pln">PasswordLength </span><span class="pun">:=</span><span class="pln"> </span><span class="lit">4</span><span class="pun">;</span><span class="pln">
authidentity</span><span class="pun">.</span><span class="pln">Flags </span><span class="pun">:=</span><span class="pln"> SEC</span><span class="pun">_</span><span class="pln">WINNT</span><span class="pun">_</span><span class="pln">AUTH</span><span class="pun">_</span><span class="pln">IDENTITY</span><span class="pun">_</span><span class="pln">UNICODE</span><span class="pun">;</span><span class="pln">


ZeroMemory</span><span class="pun">(</span><span class="pln"> </span><span class="pun">@</span><span class="pln">authInfo</span><span class="pun">,</span><span class="pln"> sizeof</span><span class="pun">(</span><span class="pln"> authInfo </span><span class="pun">)</span><span class="pln"> </span><span class="pun">);</span><span class="pln">

</span><span class="pun">//</span><span class="pln"> NTLM Settings
authInfo</span><span class="pun">[</span><span class="lit">0</span><span class="pun">].</span><span class="pln">dwAuthnSvc </span><span class="pun">:=</span><span class="pln"> RPC</span><span class="pun">_</span><span class="pln">C</span><span class="pun">_</span><span class="pln">AUTHN</span><span class="pun">_</span><span class="pln">WINNT</span><span class="pun">;</span><span class="pln">
authInfo</span><span class="pun">[</span><span class="lit">0</span><span class="pun">].</span><span class="pln">dwAuthzSvc </span><span class="pun">:=</span><span class="pln"> RPC</span><span class="pun">_</span><span class="pln">C</span><span class="pun">_</span><span class="pln">AUTHZ</span><span class="pun">_</span><span class="pln">NONE</span><span class="pun">;</span><span class="pln">
authInfo</span><span class="pun">[</span><span class="lit">0</span><span class="pun">].</span><span class="pln">pAuthInfo </span><span class="pun">:=</span><span class="pln"> </span><span class="pun">@</span><span class="pln">authidentity</span><span class="pun">;</span><span class="pln">



authList</span><span class="pun">.</span><span class="pln">cAuthInfo </span><span class="pun">:=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
authList</span><span class="pun">.</span><span class="pln">aAuthInfo </span><span class="pun">:=</span><span class="pln"> </span><span class="pun">@</span><span class="pln">authInfo</span><span class="pun">;</span><span class="pln">

OleCheck</span><span class="pun">(</span><span class="pln">CoInitializeSecurity</span><span class="pun">(</span><span class="pln">
  NULL</span><span class="pun">,</span><span class="pln">                            </span><span class="pun">//</span><span class="pln"> Security descriptor
  </span><span class="pun">-</span><span class="lit">1</span><span class="pun">,</span><span class="pln">                              </span><span class="pun">//</span><span class="pln"> Count </span><span class="kwd">of</span><span class="pln"> entries </span><span class="kwd">in</span><span class="pln"> asAuthSvc
  NULL</span><span class="pun">,</span><span class="pln">                            </span><span class="pun">//</span><span class="pln"> asAuthSvc </span><span class="kwd">array</span><span class="pln">
  NULL</span><span class="pun">,</span><span class="pln">                            </span><span class="pun">//</span><span class="pln"> Reserved </span><span class="kwd">for</span><span class="pln"> future use
  RPC</span><span class="pun">_</span><span class="pln">C</span><span class="pun">_</span><span class="pln">AUTHN</span><span class="pun">_</span><span class="pln">LEVEL</span><span class="pun">_</span><span class="pln">CONNECT</span><span class="pun">,</span><span class="pln">       </span><span class="pun">//</span><span class="pln"> Authentication level
  RPC</span><span class="pun">_</span><span class="pln">C</span><span class="pun">_</span><span class="pln">IMP</span><span class="pun">_</span><span class="pln">LEVEL</span><span class="pun">_</span><span class="pln">IMPERSONATE</span><span class="pun">,</span><span class="pln">     </span><span class="pun">//</span><span class="pln"> Impersonation level
  </span><span class="pun">@</span><span class="pln">authList</span><span class="pun">,</span><span class="pln">                       </span><span class="pun">//</span><span class="pln"> Authentication Information
  DWORd</span><span class="pun">(</span><span class="pln">EOAC</span><span class="pun">_</span><span class="pln">DYNAMIC</span><span class="pun">_</span><span class="pln">CLOAKING</span><span class="pun">),</span><span class="pln">                       </span><span class="pun">//</span><span class="pln"> Additional capabilities
  NULL                             </span><span class="pun">//</span><span class="pln"> Reserved
  </span><span class="pun">));</span><span class="pln">
</span><span class="pun">//</span><span class="pln">create COM </span><span class="kwd">object</span><span class="pln">
int </span><span class="pun">:=</span><span class="pln"> CoSecurityTestObj</span><span class="pun">.</span><span class="pln">Create</span><span class="pun">;</span><span class="pln">
int</span><span class="pun">.</span><span class="pln">TestCall</span><span class="pun">;</span></code></pre>
<p>The server also has set the flag EOAC_DYNAMIC_CLOAKING. It uses CoImpersonateClient to get the thread token and the username. It also uses CoQueryClientBlanket to get the authInfo (as SEC_WINNT_AUTH_IDENTITY_W structure). However both calls always return the process identity of the client.</p>
<p>Also impersonating manually doesn't work (2.):</p>
<pre class="lang-pascal prettyprint prettyprinted" style=""><code><span class="pln">Token </span><span class="pun">:=</span><span class="pln"> TJwSecurityToken</span><span class="pun">.</span><span class="pln">CreateLogonUser</span><span class="pun">(</span><span class="pln">authidentity</span><span class="pun">.</span><span class="pln">User</span><span class="pun">,</span><span class="pln"> </span><span class="str">''</span><span class="pun">,</span><span class="pln"> authidentity</span><span class="pun">.</span><span class="pln">Password</span><span class="pun">,</span><span class="pln"> LOGON32</span><span class="pun">_</span><span class="pln">LOGON</span><span class="pun">_</span><span class="pln">INTERACTIVE</span><span class="pun">,</span><span class="pln"> LOGON32</span><span class="pun">_</span><span class="pln">PROVIDER</span><span class="pun">_</span><span class="pln">DEFAULT</span><span class="pun">);</span><span class="pln">
 Token</span><span class="pun">.</span><span class="pln">ImpersonateLoggedOnUser</span><span class="pun">;</span><span class="pln">
 int </span><span class="pun">:=</span><span class="pln"> CoSecurityTestObj</span><span class="pun">.</span><span class="pln">Create</span><span class="pun">;</span><span class="pln">
 int</span><span class="pun">.</span><span class="pln">TestCall</span><span class="pun">;</span></code></pre>
<p>Questions again:</p>
<ol>
<li><p>Am I wrong or why is the default auth info structure (WinNT with username and password) not used as default authentication in each COM connection/call ?</p></li>
<li><p>Am I wrong or why doesn't manual impersonation work? Be aware that I tested number 2. separately so number 1. cannot interfere.</p></li>
</ol>
<p>This is basic work for the JEDI Windows Security Code Library which I extend to support COM security. So your help will go GPL/MPL.</p>
<p>References:</p>
<p>Cloaking: </p>
<ol>
<li><a href="http://msdn.microsoft.com/en-us/library/ms683778%28VS.85%29.aspx" rel="nofollow noreferrer">http://msdn.microsoft.com/en-us/library/ms683778%28VS.85%29.aspx</a></li>
<li><a href="http://msdn.microsoft.com/en-us/library/cc246058%28PROT.10%29.aspx" rel="nofollow noreferrer">http://msdn.microsoft.com/en-us/library/cc246058%28PROT.10%29.aspx</a></li>
<li><a href="http://alt.pluralsight.com/wiki/default.aspx/Keith.GuideBook/WhatIsCoInitializeSecurity.html" rel="nofollow noreferrer">http://alt.pluralsight.com/wiki/default.aspx/Keith.GuideBook/WhatIsCoInitializeSecurity.html</a></li>
</ol>
<p>CoInitializeSecurity and pAuthInfo</p>
<ol>
<li><a href="http://www.codeguru.cn/vc&amp;mfc/apracticalguideusingvisualcandatl/93.htm" rel="nofollow noreferrer">http://www.codeguru.cn/vc&amp;mfc/apracticalguideusingvisualcandatl/93.htm</a></li>
</ol>
<p>Getting security blanket (server side)</p>
<ol>
<li><a href="http://www.codeguru.cn/vc&amp;mfc/apracticalguideusingvisualcandatl/92.htm" rel="nofollow noreferrer">http://www.codeguru.cn/vc&amp;mfc/apracticalguideusingvisualcandatl/92.htm</a></li>
</ol>
</div></text><author><a href="/users/1288/bill-the-lizard">Bill the Lizard</a></author><comments><comment><text><span class="comment-copy">Solved number #2. The constant EOAC_DYNAMIC_CLOAKING was defined wrong. <i>stupidme</i></span></text><author><a class="comment-user owner" href="/users/117262/christianwimmer" title="781 reputation">ChristianWimmer</a></author></comment><comment><text><span class="comment-copy">In case 1. it should use the current identity but only if it is able to delegate it, which is only in a Kerberos i.e. domain environment. Also the process identity must be "trusted for delegation". If there is a remote client and you are trying to call on to another server (2 hops) legacy NTLM authentication will not allow that.</span></text><author><a class="comment-user" href="/users/587803/ben" title="24,485 reputation">Ben</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>Have you tried calling CoInitializeSecurity() with RPC_C_AUTHN_LEVEL_CALL instead of RPC_C_AUTHN_LEVEL_CONNECT?</p>
<p>Usually when I create DCOM clients I create COSERVERINFO and pass to CoCreateInstanceEx() with security credentials, remembering to call CoSetProxyBlanket() on all interfaces.</p>
</div></text><author><a href="/users/698349/geekboyuk">geekboyUK</a></author><comments/></answer></answers></post>