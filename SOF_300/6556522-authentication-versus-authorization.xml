<?xml version="1.0" encoding="utf-8"?>
<post><title>security - Authentication versus Authorization - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>What's the difference in web applications? In short, please.</p>
<p>I see the abbreviation "auth" a lot. Does it stand for <strong>auth</strong>-entication or <strong>auth</strong>-orization? Or both?</p>
</div></text><author><a href="/users/1681451/geo">Geo</a></author><comments><comment><text><span class="comment-copy">remember this: authentication checks credentials, authorization checks permissions.</span></text><author><a class="comment-user" href="/users/112731/onur-y%c4%b1ld%c4%b1r%c4%b1m" title="14,273 reputation">Onur Yıldırım</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<blockquote>
<p><strong>Authentication</strong> is the process of ascertaining that somebody really is who he claims to be.</p>
<p><strong>Authorization</strong> refers to rules that determine who is allowed to do what. E.g. Adam may be authorized to create and delete databases,
  while Usama is only authorised to read.</p>
</blockquote>
<p>The two concepts are completely orthogonal and independent, but <em>both</em> are central to security design, and the failure to get either one correct opens up the avenue to compromise.</p>
<p>In terms of web apps, very crudely speaking, authentication is when you check login credentials to see if you recognize a user as logged in, and authorization is when you look up in your access control whether you allow the user to view, edit, delete or create content.</p>
</div></text><author><a href="/users/596781/kerrek-sb">Kerrek SB</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>In short, please. :-)</p>
<blockquote>
<p><strong>Authentication</strong> = login + password <em>(who you are)</em></p>
<p><strong>Authorization</strong> = permissions <em>(what you are allowed to do)</em></p>
</blockquote>
<p>Short "auth" is most likely to refer either to the first one or to both.</p>
</div></text><author><a href="/users/1681451/geo">Geo</a></author><comments><comment><text><span class="comment-copy">shorter and clear!</span></text><author><a class="comment-user" href="/users/1735756/haifeng-zhang" title="6,545 reputation">Haifeng Zhang</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>As <a href="http://web.archive.org/web/20121014105355/http://www.duke.edu/%7Erob/kerberos/authvauth.html">Authentication vs Authorization</a> puts it:</p>
<blockquote>
<p><strong>Authentication</strong> is the mechanism
  whereby systems may securely identify
  their users. Authentication systems
  provide an answers to the questions:</p>
<ul>
<li>Who is the user?</li>
<li>Is the user really who he/she represents himself to be?</li>
</ul>
<p><strong>Authorization</strong>, by contrast, is the
  mechanism by which a system determines
  what level of access a particular
  authenticated user should have to
  secured resources controlled by the
  system. For example, a database
  management system might be designed so
  as to provide certain specified
  individuals with the ability to
  retrieve information from a database
  but not the ability to change data
  stored in the datbase, while giving
  other individuals the ability to
  change data. Authorization systems
  provide answers to the questions:</p>
<ul>
<li>Is user X authorized to access
  resource R?</li>
<li>Is user X authorized to
  perform operation P?</li>
<li>Is user X
  authorized to perform operation P on
  resource R?</li>
</ul>
</blockquote>
<h3>See also:</h3>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Authentication#Authorization">Authentication vs. authorization</a> on Wikipedia</li>
</ul>
</div></text><author><a href="/users/79061/sebastian-paaske-t%c3%b8rholm">Sebastian Paaske Tørholm</a></author><comments><comment><text><span class="comment-copy">No. They are two separate things. Authentication makes sure the user is who they say they are, while authentication ensures that the user has access. If you do authorization without authentication, anyone can just say they're an administrator, and they'd get administrator powers, no questions asked.</span></text><author><a class="comment-user" href="/users/79061/sebastian-paaske-t%c3%b8rholm" title="34,151 reputation">Sebastian Paaske Tørholm</a></author></comment><comment><text><span class="comment-copy">@daGrevis: No, and please please please, if you aren't 100% comfortable and conversational with those concepts, please don't make a public web app.</span></text><author><a class="comment-user" href="/users/596781/kerrek-sb" title="310,295 reputation">Kerrek SB</a></author></comment><comment><text><span class="comment-copy">@daGrevis: Your comment is completely wrong! Please reconsider what you wrote. It might lead newbies in a completly wrong direction.</span></text><author><a class="comment-user" href="/users/2623089/user619" title="109 reputation">user619</a></author></comment><comment><text><span class="comment-copy">Yep, I know... now. Removed the comment to avoid confusion for newbies.</span></text><author><a class="comment-user owner" href="/users/458610/dagrevis" title="7,008 reputation">daGrevis</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I prefer <strong>Verification</strong> and <strong>Permissions</strong> to Authentication and Authorization.</p>
<p>It is easier in my head and in my code to think of "verification" and "permissions" because the two words </p>
<ul>
<li>don't sound alike</li>
<li>don't have the same abbreviation</li>
</ul>
<p>Authentication is verification and Authorization is checking permission(s).  Auth can mean either, but is used more often as "User Auth" i.e. "User Authentication"</p>
</div></text><author><a href="/users/2184747/aditya-mittal">Aditya Mittal</a></author><comments><comment><text><span class="comment-copy">IMHO verification seems to have a slightly more open scope than authentication, even though authentication seems to be some kind of verification, not every verification is a authentication... so I would say a context is always needed: user access verification etc., authentication seems always to happen in the field of "is he really the guy/machine?" (hit me if I'm wrong, not a native speaker, but: "verify" the INFORMATION provided is accurate vs. authentications seems to have  something to do with knowing the person/machine is the one he/it pretends to be)</span></text><author><a class="comment-user" href="/users/555374/beachwalker" title="3,262 reputation">Beachwalker</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Adding to @Kerrek's answer;</p>
<p>Authentication is Generalized form (All employees can login in to the machine )</p>
<p>Authorization is Specialized form (But admin only can install/uninstall the application in Machine)</p>
</div></text><author><a href="/users/998483/boobalan">Boobalan</a></author><comments><comment><text><span class="comment-copy">The word "can" only applies to Authorization.  Authentication has little or nothing to do with logging in.  I could very well Authenticate that you are Boobalan in many ways (Not just username/password).  Once I authenticate and know who you are, I could very well NOT Authorize you to log in, or do anything on my site.  You are Authenticated, but you can't do diddley-squat.  It's confusing and incorrect to use the word "can" when talking about Authentication.</span></text><author><a class="comment-user" href="/users/1831054/suamere" title="1,221 reputation">Suamere</a></author></comment></comments></answer></answers></post>