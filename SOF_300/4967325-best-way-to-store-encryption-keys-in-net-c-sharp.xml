<?xml version="1.0" encoding="utf-8"?>
<post><title>Best way to store encryption keys in .NET C# - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>In our application we have a lot of sensitive configuration settings, which we are storing in a xml file which is again encrypted.</p>
<p>This secure file has to be decrypted in runtime and the configuration values read. but an issue arises that the key and initialization vector is hardcoded in the code and hence anyone can read it using Reflector. </p>
<p>What is the best way to store encryption keys in .NET so no one can read them  using Reflector?</p>
</div></text><author><a href="/users/465341/ganeshran">ganeshran</a></author><comments><comment><text><span class="comment-copy">Is this a desktop application, or a web based one?  If it's web based, is it distributed, or do you control the server?</span></text><author><a class="comment-user" href="/users/117215/paddy" title="24,145 reputation">Paddy</a></author></comment><comment><text><span class="comment-copy">You should also point the level of security you want. There are lots of ways to hide something and no less ways to get that from the hidden corner .)</span></text><author><a class="comment-user" href="/users/604753/ilya-dvorovoy" title="319 reputation">Ilya Dvorovoy</a></author></comment><comment><text><span class="comment-copy">Maybe now RedGate are charging for Reflector it doesn't matter anymore.. ;-)</span></text><author><a class="comment-user" href="/users/368134/grant-crofton" title="4,299 reputation">Grant Crofton</a></author></comment><comment><text><span class="comment-copy">@Paddy: Its a desktop application.</span></text><author><a class="comment-user owner" href="/users/465341/ganeshran" title="1,494 reputation">ganeshran</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>If you want to protect your data from other users. Take a look at the <a href="http://msdn.microsoft.com/en-us/library/system.security.cryptography.protecteddata.aspx" rel="noreferrer">ProtectedData</a> class.</p>
<p>(Disclaimer: Protecting your data to create a copy protection scheme is not covered in this answer).</p>
<p>This classes uses the DPAPI from Windows, to encrypt and decrypt data on user or machine level.</p>
<p>Using ProtectedData/DPAPI frees you from handling keys and securing the data yourself. And you can choose to protect the data for the current user. The data can be read from different computers, by the same domain users.</p>
<p>If you want create your own key. You can create a key per user/machine, and store this key in the registry. Because the registry can be secured, only the current user can read the key back. I know the registry has bad karma, but is actually very good at storing data like this.</p>
<p>PS: Do not put the IV in your code. Create a new IV every time, and put it in front of the data.</p>
</div></text><author><a href="/users/11492/gvs">GvS</a></author><comments><comment><text><span class="comment-copy">DPAPI can also easy hacked after decompiling</span></text><author><a class="comment-user" href="/users/533413/wowa" title="1,236 reputation">Wowa</a></author></comment><comment><text><span class="comment-copy">@Wowa: decompiling of what: your program? And then you can see that the application uses the DPAPI. This still does not allow to decrypt when you do not have the keys from the user.</span></text><author><a class="comment-user" href="/users/11492/gvs" title="39,836 reputation">GvS</a></author></comment><comment><text><span class="comment-copy">I thought the key and IV had to be constant for decryption and encryption. Can the iv change and the text is still decryptable? I guess I need to do more reading into this.</span></text><author><a class="comment-user owner" href="/users/465341/ganeshran" title="1,494 reputation">ganeshran</a></author></comment><comment><text><span class="comment-copy">You need to same IV to encrypt and decrypt, but it is not a secret like the key. So you can generate a different IV with every encryption run, and give the IV to the receiver. The easiest is to put the IV before the encrypted content. Creating a new IV with every run, will make it more difficult to find your key.</span></text><author><a class="comment-user" href="/users/11492/gvs" title="39,836 reputation">GvS</a></author></comment><comment><text><span class="comment-copy">What if we have predefined configurations? (like connectionString) do we have to encrypt the config file on the target machine?</span></text><author><a class="comment-user" href="/users/1209230/hossein-shahdoost" title="759 reputation">Hossein Shahdoost</a></author></comment><comment><text><span class="comment-copy">@HosseinShahdoost If you use dpapi, and you have active directory setup, you can protect the config with that user and that user can decrypt it on any machine they sign into.</span></text><author><a class="comment-user" href="/users/1387186/wjdavis5" title="1,694 reputation">Wjdavis5</a></author></comment><comment><text><span class="comment-copy">@Wjdavis5 Thankx for your info but what if they don't have AD?</span></text><author><a class="comment-user" href="/users/1209230/hossein-shahdoost" title="759 reputation">Hossein Shahdoost</a></author></comment><comment><text><span class="comment-copy">@hossein what if they don't? You can still use dpapi.</span></text><author><a class="comment-user" href="/users/1387186/wjdavis5" title="1,694 reputation">Wjdavis5</a></author></comment><comment><text><span class="comment-copy">@Wowa how does decompiling the code help you hack dpapi?</span></text><author><a class="comment-user" href="/users/1387186/wjdavis5" title="1,694 reputation">Wjdavis5</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>If you can't read them in reflector, how do you expect the program to read them? You could obfuscate them by breaking them up and storing the parts all over the place, but (AFAIK) once you require your program to be able to read them, then anyone with access to your code can read them too.</p>
<p>Don't forget values in memory can be accessed as well (<em>cough</em> SecureString).</p>
</div></text><author><a href="/users/41296/massif">Massif</a></author><comments><comment><text><span class="comment-copy">+1 for your SecureString suggestion.</span></text><author><a class="comment-user" href="/users/2237075/avantprime" title="384 reputation">avantprime</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>You should use the Machine Keystore, it's a secure storage especially for this purpose. For example:</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="typ">CspParameters</span><span class="pln"> cspParams </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">CspParameters</span><span class="pun">(</span><span class="pln">PROV_RSA_FULL</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"> KEYNAME</span><span class="pun">);</span><span class="pln">

cspParams</span><span class="pun">.</span><span class="typ">Flags</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CspProviderFlags</span><span class="pun">.</span><span class="typ">UseMachineKeyStore</span><span class="pun">;</span><span class="pln">

</span><span class="typ">RSACryptoServiceProvider</span><span class="pln"> rsa </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">RSACryptoServiceProvider</span><span class="pun">(</span><span class="pln">cspParams</span><span class="pun">);</span></code></pre>
<p>Where KEYNAME is a custom string that can be used to retrieve the key later on. </p>
<p>For more examples, see this question: <a href="http://stackoverflow.com/questions/2274596/how-to-store-a-public-key-in-a-machine-level-rsa-key-container">How to store a public key in a machine-level RSA key container</a></p>
</div></text><author><a href="/users/435733/muis">Muis</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Generally, a new key and IV should be created for every session, and neither the key nor IV should be stored for use in a later session.</p>
<p>To communicate a symmetric key and IV to a remote party, you would usually encrypt the symmetric key and IV using asymmetric encryption. Sending these values across an insecure network without encrypting them is extremely unsafe, as anyone that intercepts these values can then decrypt your data. For more information on this process of encrypting and transferring the key and IV, see <a href="http://msdn.microsoft.com/en-us/library/0cwc0x23.aspx" rel="nofollow">Creating a Cryptographic Scheme</a>.</p>
</div></text><author><a href="/users/157666/apros">apros</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>When you install the application make a new set of RSA keys, then encrypt the data with AES using the private key as the password. that way the data can only be decrypted by the computer that <strong>created</strong> the data because the private key will be different.</p>
</div></text><author><a href="/users/3549636/aleksandur-murfitt">Aleksandur Murfitt</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>What about storing the file encryption/decryption key on a remote server, getting it though a web service that would transfer it though https to the application? that way the key stay in the memory of the computer but is not into a source code file.</p>
<p>This requires to have connection to the key server by whoever runs the application though.</p>
</div></text><author><a href="/users/1892410/user1892410">user1892410</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>I belive that's nealy impossible.
Write an C++ library and let it do all the sensitive things.</p>
</div></text><author><a href="/users/533413/wowa">Wowa</a></author><comments><comment><text><span class="comment-copy">C++ libraries can be decompiled too...</span></text><author><a class="comment-user" href="/users/41296/massif" title="2,966 reputation">Massif</a></author></comment><comment><text><span class="comment-copy">i know, but it's a little more difficult. like i wrote, it's nearly impossible :)</span></text><author><a class="comment-user" href="/users/533413/wowa" title="1,236 reputation">Wowa</a></author></comment><comment><text><span class="comment-copy">It all depends on the value of the protected data, and the number of "hackers" wanting that data (ask Sony, Apple, Microsoft, ...).</span></text><author><a class="comment-user" href="/users/11492/gvs" title="39,836 reputation">GvS</a></author></comment><comment><text><span class="comment-copy">Will including unmanaged code cause any issues? Our application is almost entirely in .NET. Would there be any security Exceptions thrown?</span></text><author><a class="comment-user owner" href="/users/465341/ganeshran" title="1,494 reputation">ganeshran</a></author></comment></comments></answer></answers></post>