<?xml version="1.0" encoding="utf-8"?>
<post><title>oracle - How can I test my web site for SQL injection attacks? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>What automated tools are there?</p>
</div></text><author><a href="/users/116/mark-harrison">Mark Harrison</a></author><comments/></question><answers><answer><text><div class="post-text" itemprop="text">
<p><strong>sqlmap: an SQL injection tool</strong></p>
<blockquote>
<p>sqlmap is an automatic SQL injection
  tool developed in Python. Its goal is
  to detect and take advantage of SQL
  injection vulnerabilities on web
  applications. Once it detects one or
  more SQL injections on the target
  host, the user can choose among a
  variety of options to perform an
  extensive back-end database management
  system fingerprint, retrieve DBMS
  session user and database, enumerate
  users, password hashes, privileges,
  databases, dump entire or user's
  specific DBMS tables/columns, run his
  own SQL SELECT statement, read
  specific files on the file system and
  much more.</p>
</blockquote>
<p><a href="http://sqlmap.org" rel="nofollow noreferrer">http://sqlmap.org</a></p>
</div></text><author><a href="/users/116/mark-harrison">Mark Harrison</a></author><comments><comment><text><span class="comment-copy">sqlmap is an exploitation tool, it cannot scan a website for possible sql injection vulnerabilities.</span></text><author><a class="comment-user" href="/users/936182/silver-moon" title="899 reputation">Silver Moon</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Here's one, not linked since there's good reason to suspect it contains malware...</p>
<pre class="lang-sql prettyprint prettyprinted" style=""><code><span class="pln">http</span><span class="pun">://</span><span class="pln">www</span><span class="pun">.</span><span class="pln">darknet</span><span class="pun">.</span><span class="pln">org</span><span class="pun">.</span><span class="pln">uk</span><span class="pun">/</span><span class="lit">2008</span><span class="pun">/</span><span class="lit">09</span><span class="pun">/</span><span class="pln">bsql-hacker-automated-sql-injection-framework</span><span class="pun">/</span></code></pre>
<p>You can also find a script kiddy app and aim it at your site, they like to use SQL injection.</p>
<p>But rather than doing all that, isn't it simpler and easier to use a library that prevents SQL injection?</p>
</div></text><author><a href="/users/3560/john-millikin">John Millikin</a></author><comments><comment><text><span class="comment-copy">I find it very sound to check it anyway, even if the library says to prevent them. How do you know there's no bug (or backdoor) in the library, besides a thorough code review and testing?</span></text><author><a class="comment-user" href="/users/5190/vinko-vrsalovic" title="175,840 reputation">Vinko Vrsalovic</a></author></comment><comment><text><span class="comment-copy">@Vinko: because a proper library will simply call the database layer's escape function (mysql_real_escape_string) on all inputs. Such functions are extensively vetted for security.</span></text><author><a class="comment-user" href="/users/3560/john-millikin" title="132,585 reputation">John Millikin</a></author></comment><comment><text><span class="comment-copy">And how do you know a library is "proper" without checking it first? A certain degree of paranoia is healthy.</span></text><author><a class="comment-user" href="/users/5190/vinko-vrsalovic" title="175,840 reputation">Vinko Vrsalovic</a></author></comment><comment><text><span class="comment-copy">It is not guaranteed that an application will even <i>have</i> a distinct data layer (i.e., crappily-written legacy apps).</span></text><author><a class="comment-user" href="/users/164901/jon-seigel" title="9,648 reputation">Jon Seigel</a></author></comment><comment><text><span class="comment-copy">mysql_real_escape_string is not a panacea against sql injection.</span></text><author><a class="comment-user" href="/users/408966/gabe" title="393 reputation">gabe.</a></author></comment><comment><text><span class="comment-copy">I've got an easy answer to that question: A lot of your code was outsourced and you don't necessarily trust the overseas developers to have used the abstraction layer 100% of the time.  You can review every single line of code to make sure they never composed any SQL queries by hand.... or you can use an automated tool.</span></text><author><a class="comment-user" href="/users/435779/user435779" title="180 reputation">user435779</a></author></comment><comment><text><span class="comment-copy">WARNING!! Speaking of backdoor; both chrome malware protection and AVG identifies a trojan: backdoor.generic15.BLVC in the download linked on this answer</span></text><author><a class="comment-user" href="/users/1363613/mschr" title="6,767 reputation">mschr</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>There are several plugins for Firefox:  <a href="https://addons.mozilla.org/en-US/firefox/addon/hackbar/" rel="nofollow noreferrer">HackBar</a>, <a href="https://addons.mozilla.org/en-US/firefox/addon/sql-injection/" rel="nofollow noreferrer">SQL Injection 1.2</a></p>
</div></text><author><a href="/users/19799/david-robbins">David Robbins</a></author><comments><comment><text><span class="comment-copy">HackBar no longer exists</span></text><author><a class="comment-user" href="/users/298389/om-nom-nom" title="48,182 reputation">om-nom-nom</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p><a href="http://www.securitycompass.com/" rel="nofollow noreferrer">Security Compass</a></p>
<p>I've not really used their Firefox plug-in, but one of them is meant to find SQL injection problems.</p>
</div></text><author><a href="/users/26778/jeff-porter">jeff porter</a></author><comments><comment><text><span class="comment-copy"><a href="https://addons.mozilla.org/en-US/firefox/addon/7597/" rel="nofollow noreferrer">addons.mozilla.org/en-US/firefox/addon/7597</a> is the link for the Firefox plugin.  IMHO, it's the easiest tool I've found for testing SQL Injections.</span></text><author><a class="comment-user" href="/users/271976/axeva" title="2,177 reputation">Axeva</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>A commercial automated tool is <a href="http://www.scanalert.com/" rel="nofollow noreferrer">Scan Alert</a> from McAfee.  They spider your site daily and report any vulnerabilities - not just SQL injection, but also things like ports that should not be open or insecure versions of software running on the server.</p>
</div></text><author><a href="/users/17440/mrzebra">MrZebra</a></author><comments><comment><text><span class="comment-copy">Sounds like a dead link (it redirects to the homepage).</span></text><author><a class="comment-user" href="/users/55075/kenorb" title="32,173 reputation">kenorb</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>How about simply avoiding the use of techniques that allow SQL injection attaks in the first place?<br/>
If you use Prepared Statements instead of Dynamic SQL, you're golden - SQL injection attacks become impossible, and you get better performance to boot! Never use a user-provided string in dynamic SQL! This is the only way to be <em>certain</em> that your DB is safe from injection attacks. Even automated tools have blind spots - they're created by humans after all...  </p>
<p>Useful resource: <a href="http://st-curriculum.oracle.com/tutorial/SQLInjection/index.htm" rel="nofollow noreferrer">Oracle Tutorial on Defending against SQL Injection Attacks</a></p>
</div></text><author><a href="/users/26511/galghamon">Galghamon</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p><a href="http://sec4app.com" rel="nofollow noreferrer">WebCruiser</a> - Web vulnerability scanner, is not only a web security scanning tool, but also an automatic SQL injection tool, an <a href="http://en.wikipedia.org/wiki/XPath" rel="nofollow noreferrer">XPath</a> injection tool, and a <a href="https://en.wikipedia.org/wiki/Cross-site_scripting" rel="nofollow noreferrer">cross-site scripting</a> tool!</p>
</div></text><author><a href="/users/417923/yale">Yale</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>The <a href="http://findbugs.sourceforge.net/" rel="nofollow noreferrer">findbugs</a> tool has some support for detecting potential SQL injection attacks in Java code, using static analysis.  Essentially it will look for cases where input parameters are used to construct SQL queries rather than used as prepared statement parameters.</p>
</div></text><author><a href="/users/6365/michael-barker">Michael Barker</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>We have more than just BSQL :) Check them out here - </p>
<p><a href="http://www.darknet.org.uk/tag/sql-injection-tool/" rel="nofollow">http://www.darknet.org.uk/tag/sql-injection-tool/</a></p>
</div></text><author><a href="/users/990627/darknet">Darknet</a></author><comments/></answer></answers></post>