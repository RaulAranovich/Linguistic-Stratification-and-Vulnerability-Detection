<?xml version="1.0" encoding="utf-8"?>
<post><title>security - Default SecurityProtocol in .NET 4.5 - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>What is the default security protocol for communicating with servers that support up to <code>TLS 1.2</code>? Will <code>.NET</code> by default, choose the highest security protocol supported on the server side or do I have to explicitly add this line of code:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">System</span><span class="pun">.</span><span class="typ">Net</span><span class="pun">.</span><span class="typ">ServicePointManager</span><span class="pun">.</span><span class="typ">SecurityProtocol</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> 
</span><span class="typ">SecurityProtocolType</span><span class="pun">.</span><span class="typ">Tls</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">SecurityProtocolType</span><span class="pun">.</span><span class="typ">Tls11</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">SecurityProtocolType</span><span class="pun">.</span><span class="typ">Tls12</span><span class="pun">;</span></code></pre>
<p>Is there a way to change this default, besides a code change?</p>
<p>Lastly, does <code>.NET 4.0</code> only support up to <code>TLS 1.0</code>? i.e. I have to upgrade client projects to 4.5 to support <code>TLS 1.2</code>.</p>
<p>My motivation is to remove support for <code>SSLv3</code> on the client side even if server supports it (I already have a powershell script to disable this in the machine registry) and to support the highest TLS protocol that the server supports.</p>
<p><strong>Update:</strong>
Looking at the <code>ServicePointManager</code> class in <code>.NET 4.0</code> I see no enumerated values for <code>TLS 1.0</code> and <code>1.1</code>. In both <code>.NET 4.0/4.5</code>, the default is <code>SecurityProtocolType.Tls|SecurityProtocolType.Ssl3</code>. Hopefully this default won't break by disabling <code>SSLv3</code> in the registry.</p>
<p>However, I've decided I have to upgrade all apps to <code>.NET 4.5</code> and to explicitly add <code>SecurityProtocolType.Tls | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;</code> anyway to all bootstrapping code of all applications.</p>
<p>This will make outbound requests to various apis and services to not downgrade to <code>SSLv3</code> and should select the highest level of <code>TLS</code>.</p>
<p>Does this approach sound reasonable or overkill? I have many applications to update, and I want to future proof them since I hear even <code>TLS 1.0</code> may be deprecated in the near future by some providers.</p>
<p>As a client making outbound requests to APIs, does disabling SSL3 in the registry even have an effect in the .NET framework? I see by default, TLS 1.1 and 1.2 are not enabled, do we have to enable it via the registry? RE <a href="http://support.microsoft.com/kb/245030" rel="noreferrer">http://support.microsoft.com/kb/245030</a>. </p>
<p>After a bit of investigation, I believe the registry settings will have no affect since they apply to IIS (server subkey) and browsers (client subkey).</p>
<p>Sorry this post turned into multiple questions, followed up with "maybe" answers.</p>
</div></text><author><a href="/users/368552/luke-hutton">Luke Hutton</a></author><comments/></question><answers><answer><text><div class="post-text" itemprop="text">
<p>The default <code>System.Net.ServicePointManager.SecurityProtocol</code> in both .NET <code>4.0/4.5</code> is <code>SecurityProtocolType.Tls|SecurityProtocolType.Ssl3</code>.</p>
<p><code>.NET 4.0</code> supports up to <code>TLS 1.0</code> while <code>.NET 4.5</code> supports up to <code>TLS 1.2</code></p>
<p>However, an application targeting <code>.NET 4.0</code> can still support up to <code>TLS 1.2</code> if <code>.NET 4.5</code> is installed in the same environment. <code>.NET 4.5</code> installs on top of <code>.NET 4.0</code>, replacing <code>System.dll</code>. </p>
<p>I've verified this by observing the correct security protocol set in traffic with <code>fiddler4</code> and by manually setting the enumerated values in a <code>.NET 4.0</code> project:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">ServicePointManager</span><span class="pun">.</span><span class="typ">SecurityProtocol</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">SecurityProtocolType</span><span class="pun">)</span><span class="lit">192</span><span class="pln"> </span><span class="pun">|</span><span class="pln">
</span><span class="pun">(</span><span class="typ">SecurityProtocolType</span><span class="pun">)</span><span class="lit">768</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="pun">(</span><span class="typ">SecurityProtocolType</span><span class="pun">)</span><span class="lit">3072</span><span class="pun">;</span></code></pre>
<p>Reference:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">namespace</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Net</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="pun">[</span><span class="typ">System</span><span class="pun">.</span><span class="typ">Flags</span><span class="pun">]</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">enum</span><span class="pln"> </span><span class="typ">SecurityProtocolType</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
       </span><span class="typ">Ssl3</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">48</span><span class="pun">,</span><span class="pln">
       </span><span class="typ">Tls</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">192</span><span class="pun">,</span><span class="pln">
       </span><span class="typ">Tls11</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">768</span><span class="pun">,</span><span class="pln">
       </span><span class="typ">Tls12</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">3072</span><span class="pun">,</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>If you attempt the hack on an environment with ONLY <code>.NET 4.0</code> installed, you will get the exception:</p>
<blockquote>
<p>Unhandled Exception: System.NotSupportedException: The requested security protocol is not supported.
     at System.Net.ServicePointManager.set_SecurityProtocol(SecurityProtocolType v
  alue)</p>
</blockquote>
<p>However, I wouldn't recommend this "hack" since a future patch, etc. may break it.*</p>
<p>Therefore, I've decided the best route to remove support for <code>SSLv3</code> is to:</p>
<ol>
<li>Upgrade all applications to <code>.NET 4.5</code></li>
<li><p>Add the following to boostrapping code to override the default and future proof it:</p>
<p><code>System.Net.ServicePointManager.SecurityProtocol = 
SecurityProtocolType.Tls | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;</code></p></li>
</ol>
<p>*Someone correct me if this hack is wrong, but initial tests I see it works</p>
</div></text><author><a href="/users/368552/luke-hutton">Luke Hutton</a></author><comments><comment><text><span class="comment-copy">Please see <a href="https://www.imperialviolet.org/2014/12/08/poodleagain.html" rel="nofollow noreferrer">imperialviolet.org/2014/12/08/poodleagain.html</a> "This seems like a good moment to reiterate that everything less than TLS 1.2 with an AEAD cipher suite is cryptographically broken."</span></text><author><a class="comment-user" href="/users/24315/neil-whitaker" title="4,333 reputation">Neil Whitaker</a></author></comment><comment><text><span class="comment-copy">Where did you find that default value/where is it documented?</span></text><author><a class="comment-user" href="/users/295686/mlhdev" title="870 reputation">mlhDev</a></author></comment><comment><text><span class="comment-copy">@Mathew, by viewing the source code of <code>ServicePointManager.cs</code> see <a href="http://referencesource.microsoft.com/#System/net/System/Net/ServicePointManager.cs,d22ab7c467e5a788,references" rel="nofollow noreferrer">referencesource.microsoft.com/#System/net/System/Net/â€¦</a></span></text><author><a class="comment-user owner" href="/users/368552/luke-hutton" title="4,889 reputation">Luke Hutton</a></author></comment><comment><text><span class="comment-copy">Thanks for sharing. For people reading the answer: to reiterate: The line of code in point 2 is necessary if you upgrade from 4.0 to 4.5 and if the server your code is trying to connect to restricts the min version of TLS to 1.1</span></text><author><a class="comment-user" href="/users/190476/dotnetguy" title="2,432 reputation">dotnetguy</a></author></comment><comment><text><span class="comment-copy">I keep seeing people claim the <code>.NET 4.5</code> defaults to Tls12 - but as you've put here, it does not. It gives you the option to use it for <code>SecurityProtocol</code></span></text><author><a class="comment-user" href="/users/1985648/mmcrae" title="1,382 reputation">mmcrae</a></author></comment><comment><text><span class="comment-copy">I won't downvote this answer since it does provide a lot of helpful information, but implementing a hardcoded protocol version is not a good idea as it will restrict the application from using best available encryption and may result in security issues down the road.  The registry changes to change the default behavior of .Net to actually support modern protocols is very much preferable. (It is, however, worth noting the registry change also disables SSL v3.)</span></text><author><a class="comment-user" href="/users/1623508/aj-henderson" title="673 reputation">AJ Henderson</a></author></comment><comment><text><span class="comment-copy">This worked perfectly in my .NET 4.5 ASP.NET web app connecting to Elavon/Converge.</span></text><author><a class="comment-user" href="/users/1136267/herrimancoder" title="658 reputation">HerrimanCoder</a></author></comment><comment><text><span class="comment-copy">+1 for <i>The default System.Net.ServicePointManager.SecurityProtocol in both .NET 4.0/4.5 is SecurityProtocolType.Tls|SecurityProtocolType.Ssl3</i></span></text><author><a class="comment-user" href="/users/1294318/outstandingbill" title="346 reputation">OutstandingBill</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Some of the those leaving comments have noted that setting <code>System.Net.ServicePointManager.SecurityProtocol</code> to specific values means that your app won't be able to take advantage of future TLS versions that may become the default values in future updates to .NET.  Instead of specifying a fixed list of protocols, you can instead turn on or off protocols you know and care about, leaving any others as they are.</p>
<p>To turn on TLS 1.1 and 1.2 without affecting other protocols:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">System</span><span class="pun">.</span><span class="typ">Net</span><span class="pun">.</span><span class="typ">ServicePointManager</span><span class="pun">.</span><span class="typ">SecurityProtocol</span><span class="pln"> </span><span class="pun">|=</span><span class="pln"> </span><span class="typ">SecurityProtocolType</span><span class="pun">.</span><span class="typ">Tls11</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">SecurityProtocolType</span><span class="pun">.</span><span class="typ">Tls12</span><span class="pun">;</span></code></pre>
<p>Notice the use of <code>|=</code> to turn on these flags without turning others off.</p>
<p>To turn off SSL3 without affecting other protocols:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">System</span><span class="pun">.</span><span class="typ">Net</span><span class="pun">.</span><span class="typ">ServicePointManager</span><span class="pun">.</span><span class="typ">SecurityProtocol</span><span class="pln"> </span><span class="pun">&amp;=</span><span class="pln"> </span><span class="pun">~</span><span class="typ">SecurityProtocolType</span><span class="pun">.</span><span class="typ">Ssl3</span><span class="pun">;</span></code></pre>
</div></text><author><a href="/users/1410606/scott">Scott</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>You can override the default behavior in following registry:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">Key</span><span class="pun">:</span><span class="pln"> HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.</span><span class="typ">NETFramework</span><span class="pln">\v</span><span class="lit">4.0</span><span class="pun">.</span><span class="lit">30319</span><span class="pln"> 
</span><span class="typ">Value</span><span class="pun">:</span><span class="pln"> </span><span class="typ">SchUseStrongCrypto</span><span class="pln"> </span></code></pre>
<p>For details, please see implementation of ServicePointManager at:
<a href="http://referencesource.microsoft.com/#System/net/System/Net/ServicePointManager.cs.html%2cbcb6e5c0502bfce6%2creferences">http://referencesource.microsoft.com/#System/net/System/Net/ServicePointManager.cs.html%2cbcb6e5c0502bfce6%2creferences</a></p>
</div></text><author><a href="/users/4563995/jiri-mares">Jiri Mares</a></author><comments><comment><text><span class="comment-copy">Thanks, I didn't know about this. I will test it. I created a powershel script to set it: <a href="https://gist.github.com/lukehutton/ab80d207172a923401b1" rel="nofollow noreferrer">gist.github.com/lukehutton/ab80d207172a923401b1</a></span></text><author><a class="comment-user owner" href="/users/368552/luke-hutton" title="4,889 reputation">Luke Hutton</a></author></comment><comment><text><span class="comment-copy">I was not able to see this actually work yet. I tried .net 4.5.2 and set this in registry. However, <code>sslv3</code> and <code>tls 1.0</code> was still the default.</span></text><author><a class="comment-user owner" href="/users/368552/luke-hutton" title="4,889 reputation">Luke Hutton</a></author></comment><comment><text><span class="comment-copy">Changing registry does not look like a good solution. If application wants to support TLS1 then the application should take cate about it. Not the running environment. Otherwise it could harm other applications or make a hell from deploying and upgrading your application.</span></text><author><a class="comment-user" href="/users/283508/mikhail-g" title="158 reputation">Mikhail G</a></author></comment><comment><text><span class="comment-copy">@MikhailG quite the opposite.  The registry change is the preferable method.  SChannel provides an abstraction of the underlying negotiation and you want your application to use whatever the highest supported security level is.  Artificially limiting it in software results in future problems when new protocols are released and your software is unable to use them.  It would be nice if there was an option to say use only better than a given protocol in software, but there is no option for that without also preventing future versions from working.  The did disable SSL v3 with that change though..</span></text><author><a class="comment-user" href="/users/1623508/aj-henderson" title="673 reputation">AJ Henderson</a></author></comment><comment><text><span class="comment-copy">Command-line: <code>reg add HKLM\SOFTWARE\Microsoft\.NETFramework\v4.0.30319 /v SchUseStrongCrypto /t REG_DWORD /d 1 /reg:64</code> (and/or <code>/reg:32</code>)</span></text><author><a class="comment-user" href="/users/280534/kevin-smyth" title="1,219 reputation">Kevin Smyth</a></author></comment><comment><text><span class="comment-copy">@MikhailG: Setting the registry does not prevent applications from supporting older protocols.  It only changes the defaults (which include tls 1.0 as of now).  Further, the default behavior in .Net 4.6+ is to use strong crypto; in that case this registry entry would only be useful as a means to disable strong crypto.</span></text><author><a class="comment-user" href="/users/18192/brian" title="17,091 reputation">Brian</a></author></comment><comment><text><span class="comment-copy">Beware that if you are deploying to Azure this won't work as you don't have access to registry.</span></text><author><a class="comment-user" href="/users/1506710/dhanuka777" title="3,188 reputation">Dhanuka777</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Create a text file with a <code>.reg</code> extension and the following contents:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">Windows</span><span class="pln"> </span><span class="typ">Registry</span><span class="pln"> </span><span class="typ">Editor</span><span class="pln"> </span><span class="typ">Version</span><span class="pln"> </span><span class="lit">5.00</span><span class="pln">

</span><span class="pun">[</span><span class="pln">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.</span><span class="typ">NETFramework</span><span class="pln">\v</span><span class="lit">4.0</span><span class="pun">.</span><span class="lit">30319</span><span class="pun">]</span><span class="pln">
</span><span class="str">"SchUseStrongCrypto"</span><span class="pun">=</span><span class="pln">dword</span><span class="pun">:</span><span class="lit">00000001</span><span class="pln">

</span><span class="pun">[</span><span class="pln">HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\.</span><span class="typ">NETFramework</span><span class="pln">\v</span><span class="lit">4.0</span><span class="pun">.</span><span class="lit">30319</span><span class="pun">]</span><span class="pln">
</span><span class="str">"SchUseStrongCrypto"</span><span class="pun">=</span><span class="pln">dword</span><span class="pun">:</span><span class="lit">00000001</span></code></pre>
<p>Or download it from the following source:</p>
<p><a href="https://tls1test.salesforce.com/s/NET40-Enable-TLS-1_2.reg">https://tls1test.salesforce.com/s/NET40-Enable-TLS-1_2.reg</a></p>
<p>Double-click to install...</p>
</div></text><author><a href="/users/315689/dana">dana</a></author><comments><comment><text><span class="comment-copy">The link you provided seems to have SSL certificate issues.</span></text><author><a class="comment-user" href="/users/959558/nathanaldensr" title="5,072 reputation">NathanAldenSr</a></author></comment><comment><text><span class="comment-copy">@NathanAldenSr - Link has been updated :)</span></text><author><a class="comment-user" href="/users/315689/dana" title="10,118 reputation">dana</a></author></comment><comment><text><span class="comment-copy">Even when I add these registry key, I still have that issue. Any idea ?</span></text><author><a class="comment-user" href="/users/526622/samidjo" title="1,438 reputation">Samidjo</a></author></comment><comment><text><span class="comment-copy">@Samidjo - What .NET version are you using?  Luke's answer goes into a lot more detail than mine, but it looks like you need to at least have .NET 4.5 installed.  Also, if you just made the change, you may have to recycle the app pool.  These are kind of guesses, so without more detail I might be able to help much further :)</span></text><author><a class="comment-user" href="/users/315689/dana" title="10,118 reputation">dana</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>The registry change mechanism worked for me after a struggle. Actually my application was running as 32bit. So I had to change the value under path.</p>
<p>HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft.NETFramework\v4.0.30319</p>
<p>The value type needs to be DWORD and value above 0 .Better use 1.<img alt="Registry settings to get .Net 4.0 app use TLS 1.2 provided .Net 4.5 is installed in the machine." src="https://i.stack.imgur.com/NGeTH.png"/></p>
</div></text><author><a href="/users/181832/joy-george-kunjikkuru">Joy George Kunjikkuru</a></author><comments><comment><text><span class="comment-copy">It's not accurate.  For .NET 4.5.2, this needs to be set to 1 (or above); but for .NET 4.6, it suffices not to be set to 0 (that is, it can be unset).</span></text><author><a class="comment-user" href="/users/1235565/jirka-hanika" title="10,068 reputation">Jirka Hanika</a></author></comment><comment><text><span class="comment-copy">Oh I didnt test in .Net 4.6. My findings are there in blogpost <a href="http://joymonscode.blogspot.com/2015/08/how-to-make-net-40-45-use-tls-12.html" rel="nofollow noreferrer">joymonscode.blogspot.com/2015/08/â€¦</a></span></text><author><a class="comment-user" href="/users/181832/joy-george-kunjikkuru" title="1,110 reputation">Joy George Kunjikkuru</a></author></comment><comment><text><span class="comment-copy">The registry key you mention should read "Wow6432Node".  You omitted the "Node" part for some reason.  I tried to edit your response but my change was only 4 letters so it wouldn't let me. :\</span></text><author><a class="comment-user" href="/users/18051/jeffrey-lecours" title="630 reputation">Jeffrey LeCours</a></author></comment><comment><text><span class="comment-copy">I had to bounce IIS to have this setting active itself as the default.</span></text><author><a class="comment-user" href="/users/684428/jeff-mitchell" title="883 reputation">Jeff Mitchell</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I have found that when I specify only TLS 1.2 that it will still down negotiate to 1.1.
<code>System.Net.ServicePointManager.SecurityProtocol =  SecurityProtocolType.Tls12;</code></p>
<p>I have specified this in the Global.asax startup method for my .net 4.5 web app.</p>
</div></text><author><a href="/users/5662164/jim">Jim</a></author><comments><comment><text><span class="comment-copy">What is the supported security protocol on the server? I believe that is factor here too and may be 1.1 is the latest on the server. www.passionatecoder.ca</span></text><author><a class="comment-user" href="/users/2977568/ehsan" title="72 reputation">Ehsan</a></author></comment><comment><text><span class="comment-copy">Upvoted because this is the only answer that states WHERE to put the line of code that is the solution.</span></text><author><a class="comment-user" href="/users/2324941/jgerman" title="488 reputation">jgerman</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I got the problem when my customer upgraded TLS from 1.0 to 1.2.
My application is using .net framework 3.5 and run on server. So i fixed it by this way:</p>
<ol>
<li>Fix the program</li>
</ol>
<p>Before call HttpWebRequest.GetResponse() add this command:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">ServicePointManager</span><span class="pun">.</span><span class="typ">SecurityProtocol</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">SecurityProtocolType</span><span class="pun">.</span><span class="typ">Ssl3</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">SecurityProtocolType</span><span class="pun">.</span><span class="typ">Tls</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">SecurityProtocolTypeExtensions</span><span class="pun">.</span><span class="typ">Tls11</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">SecurityProtocolTypeExtensions</span><span class="pun">.</span><span class="typ">Tls12</span><span class="pun">;</span></code></pre>
<p>Extensions 2 DLLs by adding 2 new classes: System.Net and System.Security.Authentication</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">    </span><span class="kwd">namespace</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Net</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Security</span><span class="pun">.</span><span class="typ">Authentication</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">SecurityProtocolTypeExtensions</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">SecurityProtocolType</span><span class="pln"> </span><span class="typ">Tls12</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">SecurityProtocolType</span><span class="pun">)</span><span class="typ">SslProtocolsExtensions</span><span class="pun">.</span><span class="typ">Tls12</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">SecurityProtocolType</span><span class="pln"> </span><span class="typ">Tls11</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">SecurityProtocolType</span><span class="pun">)</span><span class="typ">SslProtocolsExtensions</span><span class="pun">.</span><span class="typ">Tls11</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">SecurityProtocolType</span><span class="pln"> </span><span class="typ">SystemDefault</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">SecurityProtocolType</span><span class="pun">)</span><span class="lit">0</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> 

    </span><span class="kwd">namespace</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Security</span><span class="pun">.</span><span class="typ">Authentication</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">SslProtocolsExtensions</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">SslProtocols</span><span class="pln"> </span><span class="typ">Tls12</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">SslProtocols</span><span class="pun">)</span><span class="lit">0x00000C00</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">SslProtocols</span><span class="pln"> </span><span class="typ">Tls11</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">SslProtocols</span><span class="pun">)</span><span class="lit">0x00000300</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span></code></pre>
<ol start="2">
<li>Update Microsoft batch</li>
</ol>
<p>Download batch: </p>
<ul>
<li>For windows 2008 R2: windows6.1-kb3154518-x64.msu</li>
<li>For windows 2012
R2: windows8.1-kb3154520-x64.msu</li>
</ul>
<p>For download batch and more details you can see here:</p>
<p><a href="https://support.microsoft.com/en-us/help/3154518/support-for-tls-system-default-versions-included-in-the-.net-framework-3.5.1-on-windows-7-sp1-and-server-2008-r2-sp1" rel="nofollow noreferrer">https://support.microsoft.com/en-us/help/3154518/support-for-tls-system-default-versions-included-in-the-.net-framework-3.5.1-on-windows-7-sp1-and-server-2008-r2-sp1</a></p>
</div></text><author><a href="/users/6412326/hieu">Hieu</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>For completeness, here is a Powershell script that sets aforementioned registry keys:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">new</span><span class="pun">-</span><span class="pln">itemproperty </span><span class="pun">-</span><span class="pln">path </span><span class="str">"HKLM:\SOFTWARE\Microsoft\.NETFramework\v4.0.30319"</span><span class="pln"> </span><span class="pun">-</span><span class="pln">name </span><span class="str">"SchUseStrongCrypto"</span><span class="pln"> </span><span class="pun">-</span><span class="typ">Value</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">-</span><span class="typ">PropertyType</span><span class="pln"> </span><span class="str">"DWord"</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">new</span><span class="pun">-</span><span class="pln">itemproperty </span><span class="pun">-</span><span class="pln">path </span><span class="str">"HKLM:\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\v4.0.30319"</span><span class="pln"> </span><span class="pun">-</span><span class="pln">name </span><span class="str">"SchUseStrongCrypto"</span><span class="pln"> </span><span class="pun">-</span><span class="typ">Value</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">-</span><span class="typ">PropertyType</span><span class="pln"> </span><span class="str">"DWord"</span></code></pre>
</div></text><author><a href="/users/1829045/qbik">qbik</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>An alternative to hard-coding <code>ServicePointManager.SecurityProtocol</code> or the explicit <strong>SchUseStrongCrypto</strong> key as mentioned above:<br/>
You can tell .NET to use the default SCHANNEL settings with the SystemDefaultTlsVersions key,<br/>
e.g.:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pun">[</span><span class="pln">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.</span><span class="typ">NETFramework</span><span class="pln">\v</span><span class="lit">4.0</span><span class="pun">.</span><span class="lit">30319</span><span class="pun">]</span><span class="pln"> </span><span class="str">"SystemDefaultTlsVersions"</span><span class="pun">=</span><span class="pln">dword</span><span class="pun">:</span><span class="lit">00000001</span><span class="pln">
</span><span class="pun">[</span><span class="pln">HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\.</span><span class="typ">NETFramework</span><span class="pln">\v</span><span class="lit">4.0</span><span class="pun">.</span><span class="lit">30319</span><span class="pun">]</span><span class="pln"> </span><span class="str">"SystemDefaultTlsVersions"</span><span class="pun">=</span><span class="pln">dword</span><span class="pun">:</span><span class="lit">00000001</span></code></pre>
</div></text><author><a href="/users/564630/alfred">Alfred</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>For Key: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft.NETFramework\v4.0.30319 
Value: SchUseStrongCrypto </p>
<p>You have to set the value to 1.</p>
</div></text><author><a href="/users/5041041/kgw">kgw</a></author><comments><comment><text><span class="comment-copy">I think you're getting downvoted because its the same answer @Jira Mares offered, but with less detail</span></text><author><a class="comment-user" href="/users/664479/stuart-siegler" title="1,295 reputation">Stuart Siegler</a></author></comment></comments></answer></answers></post>