<?xml version="1.0" encoding="utf-8"?>
<post><title>In .NET/C# test if process has administrative privileges - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>Is there a canonical way to test to see if the process has administrative privileges on a machine?  </p>
<p>I'm going to be starting a long running process, and much later in the process' lifetime it's going to attempt some things that require admin privileges.</p>
<p>I'd like to be able to test up front if the process has those rights rather than later on.</p>
</div></text><author><a href="/users/886887/harry-johnston">Harry Johnston</a></author><comments><comment><text><span class="comment-copy">What OS version?</span></text><author><a class="comment-user" href="/users/76337/john-saunders" title="141,017 reputation">John Saunders</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>This will check if user is in the local Administrators group (assuming you're not checking for domain admin permissions)</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pln">using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Security</span><span class="pun">.</span><span class="typ">Principal</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsUserAdministrator</span><span class="pun">()</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="com">//bool value to hold our return value</span><span class="pln">
    </span><span class="kwd">bool</span><span class="pln"> isAdmin</span><span class="pun">;</span><span class="pln">
    </span><span class="typ">WindowsIdentity</span><span class="pln"> user </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">try</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="com">//get the currently logged in user</span><span class="pln">
        user </span><span class="pun">=</span><span class="pln"> </span><span class="typ">WindowsIdentity</span><span class="pun">.</span><span class="typ">GetCurrent</span><span class="pun">();</span><span class="pln">
        </span><span class="typ">WindowsPrincipal</span><span class="pln"> principal </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">(</span><span class="pln">user</span><span class="pun">);</span><span class="pln">
        isAdmin </span><span class="pun">=</span><span class="pln"> principal</span><span class="pun">.</span><span class="typ">IsInRole</span><span class="pun">(</span><span class="typ">WindowsBuiltInRole</span><span class="pun">.</span><span class="typ">Administrator</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">UnauthorizedAccessException</span><span class="pln"> ex</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        isAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Exception</span><span class="pln"> ex</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        isAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">finally</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">user </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln">
            user</span><span class="pun">.</span><span class="typ">Dispose</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> isAdmin</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/76673/wadih-m">Wadih M.</a></author><comments><comment><text><span class="comment-copy">This will determine if the user is in the BUILTIN\Administrators group, but will it show if the user is elevated on Vista?</span></text><author><a class="comment-user" href="/users/76337/john-saunders" title="141,017 reputation">John Saunders</a></author></comment><comment><text><span class="comment-copy">Is catching every exception really necessary?</span></text><author><a class="comment-user" href="/users/2361/jakub-%c5%a0turc" title="18,987 reputation">Jakub Šturc</a></author></comment><comment><text><span class="comment-copy">If anyone can test this on Vista, it would be great.</span></text><author><a class="comment-user" href="/users/76673/wadih-m" title="7,516 reputation">Wadih M.</a></author></comment><comment><text><span class="comment-copy">necessary no, but sure saves you the trouble down the road of having runtime errors if something odd happens</span></text><author><a class="comment-user" href="/users/391122/jared" title="573 reputation">Jared</a></author></comment><comment><text><span class="comment-copy">@Jared: it also hides any serious errors that may happen in that block. It should be removed.</span></text><author><a class="comment-user" href="/users/76337/john-saunders" title="141,017 reputation">John Saunders</a></author></comment><comment><text><span class="comment-copy">This won't work in Vista if UAC is enabled. The reason is that UAC creates a "split token" for users with admin priveleges and the "split token" explicitly excludes all admin roles (including things like "Domain Admin").</span></text><author><a class="comment-user" href="/users/1336/jacob-proffitt" title="10,366 reputation">Jacob Proffitt</a></author></comment><comment><text><span class="comment-copy">I tested this on Windows Server 2008 with UAC enabled. It works like this: elevated administrator -&gt; true, non-elevated administrator -&gt; false, standard user -&gt; false</span></text><author><a class="comment-user" href="/users/31563/joe-daley" title="22,284 reputation">Joe Daley</a></author></comment><comment><text><span class="comment-copy">@Jacob Proffitt If you are non elevated admin <code>principal.IsInRole(WindowsBuiltInRole.Administrator);</code> will return false, it only returns true if you are a elevated admin.</span></text><author><a class="comment-user" href="/users/80274/scott-chamberlain" title="81,204 reputation">Scott Chamberlain</a></author></comment><comment><text><span class="comment-copy">how to check for specific user instead of current logged user?</span></text><author><a class="comment-user" href="/users/317255/sunil-agarwal" title="1,983 reputation">Sunil Agarwal</a></author></comment><comment><text><span class="comment-copy">It does not work unless run as administrator.So it's not of much use.</span></text><author><a class="comment-user" href="/users/1997066/it-researcher" title="1,087 reputation">IT researcher</a></author></comment><comment><text><span class="comment-copy">@ITresearcher: the OP wants to know whether the process is running with administrator privileges or not.  This code does just that.</span></text><author><a class="comment-user" href="/users/886887/harry-johnston" title="25,538 reputation">Harry Johnston</a></author></comment><comment><text><span class="comment-copy">Modified the code to properly dispose the <code>user</code> object; it's not good practice to rely upon the GC to clean up for you. I should also point out that catching <code>UnauthorizedAccessException</code> and then catching <code>Exception</code> in the same way is redundant, and you shouldn't really be doing the latter.</span></text><author><a class="comment-user" href="/users/978756/polynomial" title="18,116 reputation">Polynomial</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Starting with Wadih M's code, I've got some additional P/Invoke code to try and handle the case of when UAC is on.</p>
<p><a href="http://www.davidmoore.info/blog/2011/06/20/how-to-check-if-the-current-user-is-an-administrator-even-if-uac-is-on/">http://www.davidmoore.info/blog/2011/06/20/how-to-check-if-the-current-user-is-an-administrator-even-if-uac-is-on/</a></p>
<p>First, we’ll need some code to support the GetTokenInformation API call:</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pun">[</span><span class="typ">DllImport</span><span class="pun">(</span><span class="str">"advapi32.dll"</span><span class="pun">,</span><span class="pln"> </span><span class="typ">SetLastError</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">)]</span><span class="pln">
</span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">extern</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">GetTokenInformation</span><span class="pun">(</span><span class="typ">IntPtr</span><span class="pln"> tokenHandle</span><span class="pun">,</span><span class="pln"> </span><span class="typ">TokenInformationClass</span><span class="pln"> tokenInformationClass</span><span class="pun">,</span><span class="pln"> </span><span class="typ">IntPtr</span><span class="pln"> tokenInformation</span><span class="pun">,</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> tokenInformationLength</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">out</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> returnLength</span><span class="pun">);</span><span class="pln">

</span><span class="com">/// &lt;summary&gt;</span><span class="pln">
</span><span class="com">/// Passed to &lt;see cref="GetTokenInformation"/&gt; to specify what</span><span class="pln">
</span><span class="com">/// information about the token to return.</span><span class="pln">
</span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
</span><span class="kwd">enum</span><span class="pln"> </span><span class="typ">TokenInformationClass</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
     </span><span class="typ">TokenUser</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenGroups</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenPrivileges</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenOwner</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenPrimaryGroup</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenDefaultDacl</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenSource</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenType</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenImpersonationLevel</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenStatistics</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenRestrictedSids</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenSessionId</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenGroupsAndPrivileges</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenSessionReference</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenSandBoxInert</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenAuditPolicy</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenOrigin</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenElevationType</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenLinkedToken</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenElevation</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenHasRestrictions</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenAccessInformation</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenVirtualizationAllowed</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenVirtualizationEnabled</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenIntegrityLevel</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenUiAccess</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenMandatoryPolicy</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">TokenLogonSid</span><span class="pun">,</span><span class="pln">
     </span><span class="typ">MaxTokenInfoClass</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="com">/// &lt;summary&gt;</span><span class="pln">
</span><span class="com">/// The elevation type for a user token.</span><span class="pln">
</span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
</span><span class="kwd">enum</span><span class="pln"> </span><span class="typ">TokenElevationType</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="typ">TokenElevationTypeDefault</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln">
    </span><span class="typ">TokenElevationTypeFull</span><span class="pun">,</span><span class="pln">
    </span><span class="typ">TokenElevationTypeLimited</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Then, the actual code to detect if the user is an Administrator (returning true if they are, otherwise false).</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="kwd">var</span><span class="pln"> identity </span><span class="pun">=</span><span class="pln"> </span><span class="typ">WindowsIdentity</span><span class="pun">.</span><span class="typ">GetCurrent</span><span class="pun">();</span><span class="pln">
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">identity </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">InvalidOperationException</span><span class="pun">(</span><span class="str">"Couldn't get the current user identity"</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">var</span><span class="pln"> principal </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">(</span><span class="pln">identity</span><span class="pun">);</span><span class="pln">

</span><span class="com">// Check if this user has the Administrator role. If they do, return immediately.</span><span class="pln">
</span><span class="com">// If UAC is on, and the process is not elevated, then this will actually return false.</span><span class="pln">
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">principal</span><span class="pun">.</span><span class="typ">IsInRole</span><span class="pun">(</span><span class="typ">WindowsBuiltInRole</span><span class="pun">.</span><span class="typ">Administrator</span><span class="pun">))</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">

</span><span class="com">// If we're not running in Vista onwards, we don't have to worry about checking for UAC.</span><span class="pln">
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Environment</span><span class="pun">.</span><span class="typ">OSVersion</span><span class="pun">.</span><span class="typ">Platform</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> </span><span class="typ">PlatformID</span><span class="pun">.</span><span class="typ">Win32NT</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> </span><span class="typ">Environment</span><span class="pun">.</span><span class="typ">OSVersion</span><span class="pun">.</span><span class="typ">Version</span><span class="pun">.</span><span class="typ">Major</span><span class="pln"> </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">6</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
     </span><span class="com">// Operating system does not support UAC; skipping elevation check.</span><span class="pln">
     </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="typ">int</span><span class="pln"> tokenInfLength </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Marshal</span><span class="pun">.</span><span class="typ">SizeOf</span><span class="pun">(</span><span class="kwd">typeof</span><span class="pun">(</span><span class="typ">int</span><span class="pun">));</span><span class="pln">
</span><span class="typ">IntPtr</span><span class="pln"> tokenInformation </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Marshal</span><span class="pun">.</span><span class="typ">AllocHGlobal</span><span class="pun">(</span><span class="pln">tokenInfLength</span><span class="pun">);</span><span class="pln">

</span><span class="kwd">try</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">var</span><span class="pln"> token </span><span class="pun">=</span><span class="pln"> identity</span><span class="pun">.</span><span class="typ">Token</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">var</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GetTokenInformation</span><span class="pun">(</span><span class="pln">token</span><span class="pun">,</span><span class="pln"> </span><span class="typ">TokenInformationClass</span><span class="pun">.</span><span class="typ">TokenElevationType</span><span class="pun">,</span><span class="pln"> tokenInformation</span><span class="pun">,</span><span class="pln"> tokenInfLength</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">out</span><span class="pln"> tokenInfLength</span><span class="pun">);</span><span class="pln">

    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">result</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">var</span><span class="pln"> exception </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Marshal</span><span class="pun">.</span><span class="typ">GetExceptionForHR</span><span class="pun">(</span><span class="pln"> </span><span class="typ">Marshal</span><span class="pun">.</span><span class="typ">GetHRForLastWin32Error</span><span class="pun">()</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">InvalidOperationException</span><span class="pun">(</span><span class="str">"Couldn't get token information"</span><span class="pun">,</span><span class="pln"> exception</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">var</span><span class="pln"> elevationType </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">TokenElevationType</span><span class="pun">)</span><span class="typ">Marshal</span><span class="pun">.</span><span class="typ">ReadInt32</span><span class="pun">(</span><span class="pln">tokenInformation</span><span class="pun">);</span><span class="pln">

    </span><span class="kwd">switch</span><span class="pln"> </span><span class="pun">(</span><span class="pln">elevationType</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">case</span><span class="pln"> </span><span class="typ">TokenElevationType</span><span class="pun">.</span><span class="typ">TokenElevationTypeDefault</span><span class="pun">:</span><span class="pln">
            </span><span class="com">// TokenElevationTypeDefault - User is not using a split token, so they cannot elevate.</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">case</span><span class="pln"> </span><span class="typ">TokenElevationType</span><span class="pun">.</span><span class="typ">TokenElevationTypeFull</span><span class="pun">:</span><span class="pln">
            </span><span class="com">// TokenElevationTypeFull - User has a split token, and the process is running elevated. Assuming they're an administrator.</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">case</span><span class="pln"> </span><span class="typ">TokenElevationType</span><span class="pun">.</span><span class="typ">TokenElevationTypeLimited</span><span class="pun">:</span><span class="pln">
            </span><span class="com">// TokenElevationTypeLimited - User has a split token, but the process is not running elevated. Assuming they're an administrator.</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">default</span><span class="pun">:</span><span class="pln">
            </span><span class="com">// Unknown token elevation type.</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
     </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">finally</span><span class="pln">
</span><span class="pun">{</span><span class="pln">    
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">tokenInformation </span><span class="pun">!=</span><span class="pln"> </span><span class="typ">IntPtr</span><span class="pun">.</span><span class="typ">Zero</span><span class="pun">)</span><span class="pln"> </span><span class="typ">Marshal</span><span class="pun">.</span><span class="typ">FreeHGlobal</span><span class="pun">(</span><span class="pln">tokenInformation</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/175208/david-moore">David Moore</a></author><comments><comment><text><span class="comment-copy">works great on Vista - thank you!</span></text><author><a class="comment-user" href="/users/1246870/avs099" title="6,425 reputation">avs099</a></author></comment><comment><text><span class="comment-copy">This is the most complete answer, and addresses issues where the call to IsInRole(WindowsBuiltInRole.Administrator) returns false because UAC is blocking. Confirmed to work properly on Windows 8.</span></text><author><a class="comment-user" href="/users/877007/david-chen" title="101 reputation">David Chen</a></author></comment><comment><text><span class="comment-copy">This is a great answer, but not to this question!</span></text><author><a class="comment-user" href="/users/886887/harry-johnston" title="25,538 reputation">Harry Johnston</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>If you want to make sure your solution works in Vista UAC, and have .Net Framework 3.5 or better, you might want to use the System.DirectoryServices.AccountManagement namespace. Your code would look something like:</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="kwd">bool</span><span class="pln"> isAllowed </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
using </span><span class="pun">(</span><span class="typ">PrincipalContext</span><span class="pln"> pc </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pun">(</span><span class="typ">ContextType</span><span class="pun">.</span><span class="typ">Machine</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">))</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="typ">UserPrincipal</span><span class="pln"> up </span><span class="pun">=</span><span class="pln"> </span><span class="typ">UserPrincipal</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">;</span><span class="pln">
    </span><span class="typ">GroupPrincipal</span><span class="pln"> gp </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GroupPrincipal</span><span class="pun">.</span><span class="typ">FindByIdentity</span><span class="pun">(</span><span class="pln">pc</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Administrators"</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">up</span><span class="pun">.</span><span class="typ">IsMemberOf</span><span class="pun">(</span><span class="pln">gp</span><span class="pun">))</span><span class="pln">
        isAllowed </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/1336/jacob-proffitt">Jacob Proffitt</a></author><comments><comment><text><span class="comment-copy">will it show if the user is elevated on Vista?</span></text><author><a class="comment-user" href="/users/98970/kay-one" title="4,728 reputation">kay.one</a></author></comment><comment><text><span class="comment-copy">It <i>should</i>. I haven't tested it against the builtin.Administrators account. My application was testing against a domain. <a href="http://theruntime.com/blogs/jacob/archive/2009/02/13/so-you-think-youre-an-admin.aspx" rel="nofollow noreferrer">theruntime.com/blogs/jacob/archive/2009/02/13/…</a></span></text><author><a class="comment-user" href="/users/1336/jacob-proffitt" title="10,366 reputation">Jacob Proffitt</a></author></comment><comment><text><span class="comment-copy">PLEASE Dont hardcode Administrators (pretty sure this is the localisable string, not BUILTIN\ADministrators well known string)</span></text><author><a class="comment-user" href="/users/11635/ruben-bartelink" title="35,279 reputation">Ruben Bartelink</a></author></comment><comment><text><span class="comment-copy">So what would you use, Ruben?</span></text><author><a class="comment-user" href="/users/1336/jacob-proffitt" title="10,366 reputation">Jacob Proffitt</a></author></comment><comment><text><span class="comment-copy">According to the MSDN page you can use the SID, which I believe is "S-1-5-32-544".  <a href="http://msdn.microsoft.com/en-us/library/bb359434.aspx" rel="nofollow noreferrer">msdn.microsoft.com/en-us/library/bb359434.aspx</a></span></text><author><a class="comment-user" href="/users/132034/matt" title="3,324 reputation">Matt</a></author></comment><comment><text><span class="comment-copy">Will the code mentioned by Jacob work on Windows XP?  So long as it has the required .Net framework 3.5+?</span></text><author><a class="comment-user" href="/users/527620/rob-k" title="265 reputation">Rob K.</a></author></comment><comment><text><span class="comment-copy">It should, but I haven't done so myself, Rob.</span></text><author><a class="comment-user" href="/users/1336/jacob-proffitt" title="10,366 reputation">Jacob Proffitt</a></author></comment><comment><text><span class="comment-copy">Just a note: This code did not properly indicate my process was running as elevated. Granted, I have a slightly strange setup where my account isn't in the Administrators group but can be elevated to include the necessary admin tokens on the process. The code from Wadih did provide the correct answer for my situation.</span></text><author><a class="comment-user" href="/users/243/goyuix" title="14,534 reputation">Goyuix</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Using the .NET Framework 4.5, it seems to be easier to check if a user is in the administrators group:</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="typ">WindowsPrincipal</span><span class="pln"> principal </span><span class="pun">=</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">bool</span><span class="pln"> canBeAdmin </span><span class="pun">=</span><span class="pln"> principal</span><span class="pun">.</span><span class="typ">Claims</span><span class="pun">.</span><span class="typ">Any</span><span class="pun">((</span><span class="pln">c</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> c</span><span class="pun">.</span><span class="typ">Value</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="str">"S-1-5-32-544"</span><span class="pun">);</span></code></pre>
</div></text><author><a href="/users/276070/jens">Jens</a></author><comments><comment><text><span class="comment-copy">Watch out - there is a big difference beween the claims list that is returned between WindowsPrincipal.Current.Claims and  (new WindowsPrincipal(WindowsIdentity.GetCurrent())).Claims see my answer below</span></text><author><a class="comment-user" href="/users/1586498/ozbob" title="1,364 reputation">OzBob</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Tried Erwin's code but it didn't compile.</p>
<p>Got it to work like this:</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pun">[</span><span class="typ">DllImport</span><span class="pun">(</span><span class="str">"shell32.dll"</span><span class="pun">)]</span><span class="pln"> </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">extern</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsUserAnAdmin</span><span class="pun">();</span></code></pre>
</div></text><author><a href="/users/1975110/alex-g">Alex G.</a></author><comments><comment><text><span class="comment-copy">of course you need <code>using System.Runtime.InteropServices;</code></span></text><author><a class="comment-user" href="/users/1975110/alex-g" title="37 reputation">Alex G.</a></author></comment><comment><text><span class="comment-copy">This worked like a champ for me - anyone have an idea what the code inside the IsUserAnAdmin function actually looks like?</span></text><author><a class="comment-user" href="/users/243/goyuix" title="14,534 reputation">Goyuix</a></author></comment><comment><text><span class="comment-copy">+1: This is the <i>canonical way</i> as requested by OP.</span></text><author><a class="comment-user" href="/users/1083663/goto-0" title="10,884 reputation">GOTO 0</a></author></comment><comment><text><span class="comment-copy">-1: The MSDN page for IsUserAnAdmin <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb776463%28v=vs.85%29.aspx" rel="nofollow noreferrer">link</a> states: "End of client support: Windows Vista". This function might be unavailble for future versions of Windows, so it definitely isn't the "canonical" way.</span></text><author><a class="comment-user" href="/users/2280602/jeyk" title="380 reputation">jeyk</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Use can use WMI with something like this to find out if the account is an admin, and just about anything else you want to know about there account</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pln">using </span><span class="typ">System</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Management</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Windows</span><span class="pun">.</span><span class="typ">Forms</span><span class="pun">;</span><span class="pln">

namespace </span><span class="typ">WMISample</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyWMIQuery</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Main</span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">try</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">ManagementObjectSearcher</span><span class="pln"> searcher </span><span class="pun">=</span><span class="pln"> 
                    </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ManagementObjectSearcher</span><span class="pun">(</span><span class="str">"root\\CIMV2"</span><span class="pun">,</span><span class="pln"> 
                    </span><span class="str">"SELECT * FROM Win32_UserAccount"</span><span class="pun">);</span><span class="pln"> 

                </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="typ">ManagementObject</span><span class="pln"> queryObj </span><span class="kwd">in</span><span class="pln"> searcher</span><span class="pun">.</span><span class="typ">Get</span><span class="pun">())</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"-----------------------------------"</span><span class="pun">);</span><span class="pln">
                    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Win32_UserAccount instance"</span><span class="pun">);</span><span class="pln">
                    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"-----------------------------------"</span><span class="pun">);</span><span class="pln">
                    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"AccountType: {0}"</span><span class="pun">,</span><span class="pln"> queryObj</span><span class="pun">[</span><span class="str">"AccountType"</span><span class="pun">]);</span><span class="pln">
                    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"FullName: {0}"</span><span class="pun">,</span><span class="pln"> queryObj</span><span class="pun">[</span><span class="str">"FullName"</span><span class="pun">]);</span><span class="pln">
                    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Name: {0}"</span><span class="pun">,</span><span class="pln"> queryObj</span><span class="pun">[</span><span class="str">"Name"</span><span class="pun">]);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
            </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">ManagementException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">MessageBox</span><span class="pun">.</span><span class="typ">Show</span><span class="pun">(</span><span class="str">"An error occurred while querying for WMI data: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> e</span><span class="pun">.</span><span class="typ">Message</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>To make it easier to get started download <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=2cc30a64-ea15-4661-8da4-55bbc145c30e&amp;displaylang=en" rel="nofollow noreferrer">WMI Creator</a> </p>
<p>you can also use this it access active directory (LDAP) or anything else on you computer/network </p>
</div></text><author><a href="/users/55102/bob-the-janitor">Bob The Janitor</a></author><comments><comment><text><span class="comment-copy">On my quad core i7 this hung the machine for 7 seconds until the call returned.</span></text><author><a class="comment-user" href="/users/521342/tripleantigen" title="1,261 reputation">TripleAntigen</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Other answers leveraging the IsInRole method only return true if the user is running with an elevated token, as others have commented. Here is a potential alternative for checking just for local Administrators group membership in both a standard and elevated context:</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="kwd">bool</span><span class="pln"> isAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
using </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> user </span><span class="pun">=</span><span class="pln"> </span><span class="typ">WindowsIdentity</span><span class="pun">.</span><span class="typ">GetCurrent</span><span class="pun">())</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">var</span><span class="pln"> principal </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">(</span><span class="pln">user</span><span class="pun">);</span><span class="pln">
    </span><span class="com">// Check for token claim with well-known Administrators group SID</span><span class="pln">
    </span><span class="kwd">const</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> LOCAL_ADMININSTRATORS_GROUP_SID </span><span class="pun">=</span><span class="pln"> </span><span class="str">"S-1-5-32-544"</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">principal</span><span class="pun">.</span><span class="typ">Claims</span><span class="pun">.</span><span class="typ">SingleOrDefault</span><span class="pun">(</span><span class="pln">x </span><span class="pun">=&gt;</span><span class="pln"> x</span><span class="pun">.</span><span class="typ">Value</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> LOCAL_ADMININSTRATORS_GROUP_SID</span><span class="pun">)</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        isAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">return</span><span class="pln"> isAdmin</span><span class="pun">;</span></code></pre>
</div></text><author><a href="/users/2411713/noah-stahl">Noah Stahl</a></author><comments><comment><text><span class="comment-copy">should be answer</span></text><author><a class="comment-user" href="/users/330680/mahdi" title="150 reputation">Mahdi</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>What about:</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pln">using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Runtime</span><span class="pun">.</span><span class="typ">InteropServices</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">internal</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Useful</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="pun">[</span><span class="typ">DllImport</span><span class="pun">(</span><span class="str">"shell32.dll"</span><span class="pun">,</span><span class="pln"> </span><span class="typ">EntryPoint</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">"IsUserAnAdmin"</span><span class="pun">)]</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">extern</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsUserAnAdministrator</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/541420/erwin-mayer">Erwin Mayer</a></author><comments><comment><text><span class="comment-copy">This isn't supported beyond Vista according to the API docs: <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb776463%28v=vs.85%29.aspx?f=255&amp;MSPPError=-2147217396" rel="nofollow noreferrer">msdn.microsoft.com/en-us/library/windows/desktop/…</a></span></text><author><a class="comment-user" href="/users/230899/bart" title="846 reputation">bart</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>There are 4 possible Methods - I prefer:</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">(</span><span class="typ">WindowsIdentity</span><span class="pun">.</span><span class="typ">GetCurrent</span><span class="pun">())).</span><span class="typ">IsInRole</span><span class="pun">(</span><span class="typ">WindowsBuiltInRole</span><span class="pun">.</span><span class="typ">Administrator</span><span class="pun">);</span></code></pre>
<p>Here is code to give you a list of all the relevant claim data for your current user's Identity.</p>
<p><strong>NOTE:</strong> there is a big difference beween the claims list that is returned between <strong>WindowsPrincipal.Current</strong>.Claims and <strong>(new WindowsPrincipal(WindowsIdentity.GetCurrent()))</strong>.Claims </p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"press the ENTER key to start listing user claims:"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">ReadLine</span><span class="pun">();</span><span class="pln">

</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">bool</span><span class="pln"> canBeAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">(</span><span class="typ">WindowsIdentity</span><span class="pun">.</span><span class="typ">GetCurrent</span><span class="pun">())).</span><span class="typ">IsInRole</span><span class="pun">(</span><span class="typ">WindowsBuiltInRole</span><span class="pun">.</span><span class="typ">Administrator</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"GetCurrent IsInRole: canBeAdmin:{0}"</span><span class="pun">,</span><span class="pln"> canBeAdmin</span><span class="pun">);</span><span class="pln">

</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
canBeAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">(</span><span class="typ">WindowsIdentity</span><span class="pun">.</span><span class="typ">GetCurrent</span><span class="pun">())).</span><span class="typ">Claims</span><span class="pun">.</span><span class="typ">Any</span><span class="pun">((</span><span class="pln">c</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> c</span><span class="pun">.</span><span class="typ">Value</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="str">"S-1-5-32-544"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"GetCurrent Claim: canBeAdmin?:{0}"</span><span class="pun">,</span><span class="pln"> canBeAdmin</span><span class="pun">);</span><span class="pln">

</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
canBeAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">(</span><span class="typ">WindowsIdentity</span><span class="pun">.</span><span class="typ">GetCurrent</span><span class="pun">())).</span><span class="typ">IsInRole</span><span class="pun">(</span><span class="str">"Administrator"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"GetCurrent IsInRole \"Administrator\": canBeAdmin?:{0}"</span><span class="pun">,</span><span class="pln"> canBeAdmin</span><span class="pun">);</span><span class="pln">

</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
canBeAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">(</span><span class="typ">WindowsIdentity</span><span class="pun">.</span><span class="typ">GetCurrent</span><span class="pun">())).</span><span class="typ">IsInRole</span><span class="pun">(</span><span class="str">"Admin"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"GetCurrent IsInRole \"Admin\": canBeAdmin?:{0}"</span><span class="pun">,</span><span class="pln"> canBeAdmin</span><span class="pun">);</span><span class="pln">

</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
canBeAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">.</span><span class="typ">IsInRole</span><span class="pun">(</span><span class="str">"Admin"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Current IsInRole \"Admin\": canBeAdmin:{0}"</span><span class="pun">,</span><span class="pln"> canBeAdmin</span><span class="pun">);</span><span class="pln">


</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
canBeAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">.</span><span class="typ">IsInRole</span><span class="pun">(</span><span class="str">"Administrator"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Current IsInRole \"Administrator\": canBeAdmin:{0}"</span><span class="pun">,</span><span class="pln"> canBeAdmin</span><span class="pun">);</span><span class="pln">

</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
canBeAdmin </span><span class="pun">=</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">.</span><span class="typ">Claims</span><span class="pun">.</span><span class="typ">Any</span><span class="pun">((</span><span class="pln">c</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> c</span><span class="pun">.</span><span class="typ">Value</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="str">"S-1-5-32-544"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Current Claim: canBeAdmin?:{0}"</span><span class="pun">,</span><span class="pln"> canBeAdmin</span><span class="pun">);</span><span class="pln">

</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"WindowsPrincipal Claims:"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">

</span><span class="kwd">var</span><span class="pln"> propertyCount </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> claim </span><span class="kwd">in</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">.</span><span class="typ">Claims</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"{0}"</span><span class="pun">,</span><span class="pln"> propertyCount</span><span class="pun">++);</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">ToString</span><span class="pun">());</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Issuer:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Issuer</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Subject:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Subject</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Type:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Type</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Value:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Value</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"ValueType:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">ValueType</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"WindowsPrincipal Identities Claims"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">

propertyCount </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> identity </span><span class="kwd">in</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">.</span><span class="typ">Identities</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="typ">int</span><span class="pln"> subPropertyCount </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> claim </span><span class="kwd">in</span><span class="pln"> identity</span><span class="pun">.</span><span class="typ">Claims</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"{0} {1}"</span><span class="pun">,</span><span class="pln"> propertyCount</span><span class="pun">,</span><span class="pln"> subPropertyCount</span><span class="pun">++);</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">ToString</span><span class="pun">());</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Issuer:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Issuer</span><span class="pun">);</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Subject:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Subject</span><span class="pun">);</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Type:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Type</span><span class="pun">);</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Value:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Value</span><span class="pun">);</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"ValueType:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">ValueType</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">();</span><span class="pln">
    propertyCount</span><span class="pun">++;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Principal Id Claims"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"---------------------"</span><span class="pun">);</span><span class="pln">

</span><span class="kwd">var</span><span class="pln"> p </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">(</span><span class="typ">WindowsIdentity</span><span class="pun">.</span><span class="typ">GetCurrent</span><span class="pun">());</span><span class="pln">
</span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> claim </span><span class="kwd">in</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WindowsPrincipal</span><span class="pun">(</span><span class="typ">WindowsIdentity</span><span class="pun">.</span><span class="typ">GetCurrent</span><span class="pun">())).</span><span class="typ">Claims</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"{0}"</span><span class="pun">,</span><span class="pln"> propertyCount</span><span class="pun">++);</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">ToString</span><span class="pun">());</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Issuer:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Issuer</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Subject:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Subject</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Type:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Type</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"Value:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">Value</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"ValueType:{0}"</span><span class="pun">,</span><span class="pln"> claim</span><span class="pun">.</span><span class="typ">ValueType</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"press the ENTER key to end"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">ReadLine</span><span class="pun">();</span></code></pre>
</div></text><author><a href="/users/1586498/ozbob">OzBob</a></author><comments><comment><text><span class="comment-copy">This would probably be more useful if you indicated what each of these results actually means, and what the difference is between <code>WindowsPrincipal</code> and <code>new WindowsPrincipal</code> and why.</span></text><author><a class="comment-user" href="/users/886887/harry-johnston" title="25,538 reputation">Harry Johnston</a></author></comment><comment><text><span class="comment-copy">@HarryJohnston thank you for the feedback. I don't actually now 'why' (like you I have no access to Microsoft internals), I just found the 'what', which is evident from running the experiment.  Good luck with yours.</span></text><author><a class="comment-user" href="/users/1586498/ozbob" title="1,364 reputation">OzBob</a></author></comment></comments></answer></answers></post>