<?xml version="1.0" encoding="utf-8"?>
<post><title>security - What are all the user accounts for IIS/ASP.NET and how do they differ? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>Under Windows Server 2008 with ASP.NET 4.0 installed there is a whole slew of related user accounts, and I can't understand which one is which, how to they differ, and which one is REALLY the one that my app runs under. Here's a list:</p>
<ul>
<li>IIS_IUSRS </li>
<li>IUSR </li>
<li>DefaultAppPool</li>
<li>ASP.NET v4.0 </li>
<li>NETWORK_SERVICE </li>
<li>LOCAL SERVICE.</li>
</ul>
<p>What is what?</p>
</div></text><author><a href="/users/419/the-anti-santa">The Anti-Santa</a></author><comments><comment><text><span class="comment-copy">And using Windows Server 2012 with ASP.NET 4.0 or above ?</span></text><author><a class="comment-user" href="/users/206730/kiquenet" title="5,657 reputation">Kiquenet</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>This is a very good question and sadly many developers don't ask enough questions about IIS/ASP.NET security in the context of being a web developer and setting up IIS. So here goes....</p>
<p>To cover the identities listed:</p>
<p><strong><code>IIS_IUSRS:</code></strong></p>
<p>This is analogous to the old IIS6 <code>IIS_WPG</code> group. It's a built-in group with it's security configured such that any member of this group can act as an application pool identity.</p>
<p><strong><code>IUSR:</code></strong></p>
<p>This account is analogous to the old <code>IUSR_&lt;MACHINE_NAME&gt;</code> local account that was the default anonymous user for IIS5 and IIS6 websites (i.e. the one configured via the Directory Security tab of a site's properties).</p>
<p>For more information about <code>IIS_IUSRS</code> and <code>IUSR</code> see:</p>
<blockquote>
<p><a href="http://learn.iis.net/page.aspx/140/understanding-built-in-user-and-group-accounts-in-iis-7/">Understanding Built-In User and Group Accounts in IIS 7</a></p>
</blockquote>
<p><strong><code>DefaultAppPool:</code></strong> </p>
<p>If an application pool is configured to run using the Application Pool Identity feature then a "synthesised" account called <code>IIS AppPool\&lt;pool name&gt;</code> will be created on the fly to used as the pool identity. In this case there will be a synthesised account called <code>IIS AppPool\DefaultAppPool</code> created for the life time of the pool. If you delete the pool then this account will no longer exist. When applying permissions to files and folders these must be added using <code>IIS AppPool\&lt;pool name&gt;</code>. You also won't see these pool accounts in your computers User Manager. See the following for more information:</p>
<blockquote>
<p><a href="http://learn.iis.net/page.aspx/624/application-pool-identities/">Application Pool Identities</a></p>
</blockquote>
<p><strong><code>ASP.NET v4.0:</code></strong> - </p>
<p>This will be the Application Pool Identity for the ASP.NET v4.0 Application Pool. See <code>DefaultAppPool</code> above.</p>
<p><strong><code>NETWORK SERVICE:</code></strong> - </p>
<p>The <code>NETWORK SERVICE</code> account is a built-in identity introduced on Windows 2003. <code>NETWORK SERVICE</code> is a low privileged account under which you can run your application pools and websites. A website running in a Windows 2003 pool can still impersonate the site's anonymous account (IUSR_ or whatever you configured as the anonymous identity).</p>
<p>In ASP.NET prior to Windows 2008 you could have ASP.NET execute requests under the Application Pool account (usually <code>NETWORK SERVICE</code>). Alternatively you could configure ASP.NET to impersonate the site's anonymous account via the <code>&lt;identity impersonate="true" /&gt;</code> setting in <code>web.config</code> file locally (if that setting is locked then it would need to be done by an admin in the <code>machine.config</code> file).</p>
<p>Setting <code>&lt;identity impersonate="true"&gt;</code> is common in shared hosting environments where shared application pools are used (in conjunction with partial trust settings to prevent unwinding of the impersonated account).</p>
<p>In IIS7.x/ASP.NET impersonation control is now configured via the Authentication configuration feature of a site. So you can configure to run as the pool identity, <code>IUSR</code> or a specific custom anonymous account.</p>
<p><strong><code>LOCAL SERVICE:</code></strong></p>
<p>The <code>LOCAL SERVICE</code> account is a built-in account used by the service control manager. It has a minimum set of privileges on the local computer. It has a fairly limited scope of use:</p>
<blockquote>
<p><a href="http://msdn.microsoft.com/en-us/library/ms684188%28v=vs.85%29.aspx">LocalService Account</a></p>
</blockquote>
<p><strong><code>LOCAL SYSTEM:</code></strong></p>
<p>You didn't ask about this one but I'm adding for completeness. This is a local built-in account. It has fairly extensive privileges and trust. You should never configure a website or application pool to run under this identity.</p>
<blockquote>
<p><a href="http://msdn.microsoft.com/en-us/library/ms684190%28v=VS.85%29.aspx">LocalSystem Account</a></p>
</blockquote>
<p><strong>In Practice:</strong></p>
<p>In practice the preferred approach to securing a website (if the site gets its own application pool - which is the default for a new site in IIS7's MMC) is to run under <code>Application Pool Identity</code>. This means setting the site's Identity in its Application Pool's Advanced Settings to <code>Application Pool Identity</code>:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/DdAM1.png"/></p>
<p>In the website you should then configure the Authentication feature:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/3GIYh.png"/></p>
<p>Right click and edit the Anonymous Authentication entry:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/K3MEK.png"/></p>
<p>Ensure that <em>"Application pool identity"</em> is selected:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/tKp20.png"/></p>
<p>When you come to apply file and folder permissions you grant the Application Pool identity whatever rights are required. For example if you are granting the application pool identity for the <code>ASP.NET v4.0</code> pool permissions then you can either do this via Explorer:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/cizx8.png"/></p>
<p>Click the "Check Names" button:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/nzAcu.png"/></p>
<p>Or you can do this using the <code>ICACLS.EXE</code> utility:</p>
<pre>icacls c:\wwwroot\mysite /grant "IIS AppPool\ASP.NET v4.0":(CI)(OI)(M)</pre>
<p>...or...if you site's application pool is called <code>BobsCatPicBlog</code>then:</p>
<pre>icacls c:\wwwroot\mysite /grant "IIS AppPool\BobsCatPicBlog":(CI)(OI)(M)</pre>
<p>I hope this helps clear things up.</p>
<p><strong>Update:</strong></p>
<p>I just bumped into this excellent answer from 2009 which contains a bunch of useful information, well worth a read:</p>
<blockquote>
<p><a href="http://stackoverflow.com/questions/510170/the-difference-between-the-local-system-account-and-the-network-service-acco/510225#510225">The difference between the 'Local System' account and the 'Network Service' account?</a></p>
</blockquote>
</div></text><author><a href="/users/419/the-anti-santa">The Anti-Santa</a></author><comments><comment><text><span class="comment-copy">Clear things up? This is the best explanation i've read on this topic!  --&gt; <b>Slow Clap</b> &lt;--</span></text><author><a class="comment-user" href="/users/524290/stare" title="860 reputation">stare</a></author></comment><comment><text><span class="comment-copy">The same user accounts in Windows Server 2012 R2 ?</span></text><author><a class="comment-user" href="/users/206730/kiquenet" title="5,657 reputation">Kiquenet</a></author></comment><comment><text><span class="comment-copy">@Kiquenet - yep, pretty much.</span></text><author><a class="comment-user" href="/users/419/the-anti-santa" title="87,415 reputation">The Anti-Santa</a></author></comment><comment><text><span class="comment-copy">don't agree in using same user for anonimous authentication and app pool identity... if you need to give to apppoolidentity write permission to a folder....</span></text><author><a class="comment-user" href="/users/921690/giammin" title="11,253 reputation">giammin</a></author></comment><comment><text><span class="comment-copy">@giammin - why not? Unless you have a special case, using application pool identities is the most secure approach provided each site is in its own application pool. Hate to do the "appeal to authority" but been a shared web host engineer and security guy for 15 years, this approach is a no-brainer on IIS7+.</span></text><author><a class="comment-user" href="/users/419/the-anti-santa" title="87,415 reputation">The Anti-Santa</a></author></comment><comment><text><span class="comment-copy">@Kev simply i don't like to give write permission on a site to the anonymous user</span></text><author><a class="comment-user" href="/users/921690/giammin" title="11,253 reputation">giammin</a></author></comment><comment><text><span class="comment-copy">Your application pools can be even more specific by using IIS AppPool\&lt;name_of_apppool&gt;.  On a related note, IIS Express will only work with IIS AppPool\ASP.NET v4.0 because the app pool virtual accounts are not created.</span></text><author><a class="comment-user" href="/users/27669/kevindaub" title="2,096 reputation">kevindaub</a></author></comment><comment><text><span class="comment-copy">@daub815 - IIS Express works differently because it was intended to run under your Windows login and startup and shut down as needed when developing and debugging. In reality it doesn't actually use or have any dependency on Full Fat IIS application pools or infrastructure. The intent of IIS Express was to give developers as much of the same behaviour, flavour and config as the real thing because VS's toy web server was severely limited...</span></text><author><a class="comment-user" href="/users/419/the-anti-santa" title="87,415 reputation">The Anti-Santa</a></author></comment><comment><text><span class="comment-copy">@daub815 - i.e. it doesn't know how to parse <code>&lt;system.webServer&gt;</code> and other IIS specific config; the result being that you never know if your stuff will work on IIS when you deploy. The problem with debugging in VS + Full Fat IIS is that it takes a reasonable amount of knowledge to get that working. Sure in an ideal world developers should know how to get that working, but many just want to write code and push to some hosted environment already managed for them.</span></text><author><a class="comment-user" href="/users/419/the-anti-santa" title="87,415 reputation">The Anti-Santa</a></author></comment><comment><text><span class="comment-copy">@daub815 - All of the answer is intended to be read with Full Fat IIS in mind, not IIS Express. You can actually get IIS Express to run different framework versions, you can even run PHP and Classic ASP (<a href="http://stackoverflow.com/a/7086364/419">stackoverflow.com/a/7086364/419</a>), but you need to dip into the command line and tweak its own app host config files....but that's a whole other topic.</span></text><author><a class="comment-user" href="/users/419/the-anti-santa" title="87,415 reputation">The Anti-Santa</a></author></comment><comment><text><span class="comment-copy">@Kev Understood.  But I wanted to add to this answer, so that if someone else was working with IIS Express and comes across this answer, they can get some help without me needing to post another question/answer.</span></text><author><a class="comment-user" href="/users/27669/kevindaub" title="2,096 reputation">kevindaub</a></author></comment><comment><text><span class="comment-copy">Can I get the <b><i>Process Model - Identity</i></b> value for any AppPool ? <code>WindowsIdentity.GetCurrent().Name</code> ?</span></text><author><a class="comment-user" href="/users/206730/kiquenet" title="5,657 reputation">Kiquenet</a></author></comment></comments></answer></answers></post>