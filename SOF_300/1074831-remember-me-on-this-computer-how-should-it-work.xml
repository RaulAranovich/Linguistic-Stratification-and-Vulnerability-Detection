<?xml version="1.0" encoding="utf-8"?>
<post><title>security - "Remember Me On This Computer" - How Should It Work? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>Looking at Gmail's cookies it's easy to see what's stored in the "remember me" cookie. The username/one-time-access-token. It could be implemented differently in cases where the username is secret, as well. But whatever... the thing is not very high security: you steal the cookie and you're ready to go.</p>
<p>My question is on the functional side, however: when do you wipe their access tokens? If a user logs in <strong>without</strong> clicking "remember me" on another machine, should it invalidate their access tokens on <strong>all machines</strong>? I'm asking about how this is traditionally implemented, and also how it should be implemented.</p>
</div></text><author><a href="/users/213269/jonas">Jonas</a></author><comments><comment><text><span class="comment-copy">how is this programming related?</span></text><author><a class="comment-user" href="/users/16076/mitch-wheat" title="225,410 reputation">Mitch Wheat</a></author></comment><comment><text><span class="comment-copy">I think how to set cookies for security is important when programming any web application - seems completely reasonable</span></text><author><a class="comment-user" href="/users/5346/nick-fortescue" title="27,615 reputation">Nick Fortescue</a></author></comment><comment><text><span class="comment-copy">How is this NOT programming related?</span></text><author><a class="comment-user" href="/users/9878/evan" title="400 reputation">Evan</a></author></comment><comment><text><span class="comment-copy">Definitely programming related.</span></text><author><a class="comment-user" href="/users/64878/kingnestor" title="18,909 reputation">KingNestor</a></author></comment><comment><text><span class="comment-copy">C.f. <a href="http://www.codinghorror.com/blog/archives/001256.html" rel="nofollow noreferrer">codinghorror.com/blog/archives/001256.html</a></span></text><author><a class="comment-user" href="/users/100988/lucas-b" title="5,640 reputation">Lucas B</a></author></comment><comment><text><span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/244882/what-is-the-best-way-to-implement-remember-me-for-a-website">What is the best way to implement "remember me" for a website?</a></span></text><author><a class="comment-user" href="/users/33987/joris-timmermans" title="9,049 reputation">Joris Timmermans</a></author></comment><comment><text><span class="comment-copy">@MadKeithV kind of, but I'm asking about a different aspect</span></text><author><a class="comment-user owner" href="/users/8047/dan-rosenstark" title="36,425 reputation">Dan Rosenstark</a></author></comment><comment><text><span class="comment-copy">This is not a duplicate, it is programming related although not necessarily related to code per se. Good question. I'd like to know good answers myself!</span></text><author><a class="comment-user" href="/users/1329652/kuba-ober" title="54,059 reputation">Kuba Ober</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>I regularly use 2 or 3 machines simultaneously, and have "remember me" on all of them. If one of them disconnected the others that would be very annoying, so I wouldn't recommend it.</p>
<p>Traditionally it would use a time-out, the cookie expires after a certain length of time (or when the user signs out).</p>
<p>It all depends on your security model. If you are writing an internal company application where you only ever expect one user to be on one computer then you might want to have tighter restrictions than gmail.</p>
<p>Also, bear in mind the possibility of Denial of Service - if an action on one machine can force another machine to be unusable this could be use to prevent a legitimate user from taking control back in certain scenarios.</p>
</div></text><author><a href="/users/5346/nick-fortescue">Nick Fortescue</a></author><comments><comment><text><span class="comment-copy">+1 I was about to write about the same answer, regularly using the same websites on 4..5 computers and on a mobile phone.</span></text><author><a class="comment-user" href="/users/101361/laalto" title="97,770 reputation">laalto</a></author></comment><comment><text><span class="comment-copy">Thanks for that. So on logout, I could kill all the persistent sessions? That wouldn't be annoying? It sounds fine to me.</span></text><author><a class="comment-user owner" href="/users/8047/dan-rosenstark" title="36,425 reputation">Dan Rosenstark</a></author></comment><comment><text><span class="comment-copy">@daniel: killing all persistent sessions on logout seems like a reasonable thing to do. Otherwise, you'd have to keep the session persistence per computer, as well as per user. This way it could also work as a security measure for the conscious user, who could make sure that he is kicking anyone connected to his account.</span></text><author><a class="comment-user" href="/users/34813/voyager" title="25,146 reputation">voyager</a></author></comment><comment><text><span class="comment-copy">@daniel: I think you need a mental model of what logout means. If it means "This computer should now be safe for anyone to sue, I don't have to worry" then it should not logout all sessions. For example, I might want to keep my phone logged in when I walk away from the internet cafe. However, if logout means "force anyone who tries to connect to authenticate again" then all users should be kicked off. I'd prefer the former, but a case could be made for the latter</span></text><author><a class="comment-user" href="/users/5346/nick-fortescue" title="27,615 reputation">Nick Fortescue</a></author></comment><comment><text><span class="comment-copy">Thanks for your comments, Nick. My concern is, security-wise, is zero, because this remember-me thing is quite risky. I'm just concerned about the gesture of logging off, if you will. Is there any reason for a user to assume that "logout" means "log me off of all remember-me'd sessions?" Anyway, now that my curiosity is piqued, I'll have to try this stuff in a few browsers to see what Google and their usability team have come up with.</span></text><author><a class="comment-user owner" href="/users/8047/dan-rosenstark" title="36,425 reputation">Dan Rosenstark</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>The articles <a href="http://fishbowl.pastiche.org/2004/01/19/persistent_login_cookie_best_practice/" rel="noreferrer">Persistent Login Best Practice</a> and <a href="http://jaspan.com/improved_persistent_login_cookie_best_practice" rel="noreferrer">Improved Persistent Login Best Practice</a> are great references on how to implement this sort of functionality.</p>
<p>See also these StackOverflow questions</p>
<ul>
<li><a href="http://stackoverflow.com/questions/244882/what-is-the-best-way-to-implement-remember-me-for-a-website">What is the best way to implement “remember me” for a website?</a></li>
<li><a href="http://stackoverflow.com/questions/549/the-definitive-guide-to-website-authentication-beta">The Definitive Guide To Website Authentication</a></li>
</ul>
</div></text><author><a href="/users/6521/paul-dixon">Paul Dixon</a></author><comments><comment><text><span class="comment-copy">Thanks for the links, especially for the dupe question one. I'm thinking of shutting down my own question :)</span></text><author><a class="comment-user owner" href="/users/8047/dan-rosenstark" title="36,425 reputation">Dan Rosenstark</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Logging on from another machine should not invalidate the login associated with a cookie on a different machine. However if the users logsout or "not you? login here" this should clear the cookie on which the user is working.</p>
<p>By the way stealing a cookie can be made hard, by insisting on https and making it not for scripting.</p>
<p>By adding "; HttpOnly" to the out put of your cookie this will make the cookie unavailable to javascript e.g.</p>
<pre><code>HTTP/1.1 200 OK
Cache-Control: private
Content-Type: text/html; charset=utf-8
Content-Encoding: gzip
Vary: Accept-Encoding
Server: Microsoft-IIS/7.0
Set-Cookie: ASP.NET_SessionId=ig2fac55; path=/; HttpOnly
X-AspNet-Version: 2.0.50727
Set-Cookie: user=t=bfabf0b1c1133a822; path=/; HttpOnly
X-Powered-By: ASP.NET
Date: Tue, 26 Aug 2008 10:51:08 GMT
Content-Length: 2838
</code></pre>
<p>you can read more about this </p>
<ul>
<li><a href="http://msdn.microsoft.com/en-us/library/system.web.httpcookie.httponly.aspx" rel="nofollow noreferrer">for .Net</a> </li>
<li><a href="http://blogs.securiteam.com/index.php/archives/849" rel="nofollow noreferrer">Firefox support</a></li>
<li><a href="http://www.codinghorror.com/blog/archives/001167.html" rel="nofollow noreferrer">Jeff - Codings hard, lets go shopping</a></li>
</ul>
</div></text><author><a href="/users/12148/david-waters">David Waters</a></author><comments><comment><text><span class="comment-copy">+1 for httpOnly cookie</span></text><author><a class="comment-user" href="/users/1316/jinsungy" title="5,463 reputation">jinsungy</a></author></comment><comment><text><span class="comment-copy">Thanks for that, David. Can you please give me some links or something on what we're talking about with a cookie "not for scripting?"</span></text><author><a class="comment-user owner" href="/users/8047/dan-rosenstark" title="36,425 reputation">Dan Rosenstark</a></author></comment><comment><text><span class="comment-copy">Edited as per request.</span></text><author><a class="comment-user" href="/users/12148/david-waters" title="9,227 reputation">David Waters</a></author></comment><comment><text><span class="comment-copy">Sorry for the formatting, the code block seems to be deciding on interesting colors</span></text><author><a class="comment-user" href="/users/12148/david-waters" title="9,227 reputation">David Waters</a></author></comment><comment><text><span class="comment-copy">Thanks for responding to my comment. I'll be checking out all the links.</span></text><author><a class="comment-user owner" href="/users/8047/dan-rosenstark" title="36,425 reputation">Dan Rosenstark</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>The remember me cookie should identify the machine as well. It should be related to the machine because there are places where you want to be remembered and other places where you don't (home vs work).</p>
<p>Expiration date is set usually to a reasonable period (two weeks) or after the user has explicitly logged off from the machine,</p>
</div></text><author><a href="/users/5190/vinko-vrsalovic">Vinko Vrsalovic</a></author><comments><comment><text><span class="comment-copy">What would identify the machine? I can't get the Mac address, the user agent is not unique, and the IP address changes?</span></text><author><a class="comment-user owner" href="/users/8047/dan-rosenstark" title="36,425 reputation">Dan Rosenstark</a></author></comment><comment><text><span class="comment-copy">there's no way to uniquely identify the machine but you can use the standard approximation techniques, combination of IP/UserAgent for exmaple. And fail on the safe side if they change, they change and it's a different machine (even when it's not)</span></text><author><a class="comment-user" href="/users/5190/vinko-vrsalovic" title="175,840 reputation">Vinko Vrsalovic</a></author></comment><comment><text><span class="comment-copy">Thanks Vinko. I just thought that maybe there was a magic browser key. But if there was, the hackers' sites would know it too... I'll vote you up even though I don't agree with IP-based IDing.</span></text><author><a class="comment-user owner" href="/users/8047/dan-rosenstark" title="36,425 reputation">Dan Rosenstark</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>What I would do is link each session to an IP address. If the a session token is sent from a different IP than you have for that, reject it.</p>
</div></text><author><a href="/users/111644/sionide21">Sionide21</a></author><comments><comment><text><span class="comment-copy">That wouldn't work for a user who potentially gets a different IP address every time they cycle the power on their modem. Furthermore, it would allow somebody on a corporate network where every machine in the company gets to the Internet through a single proxy server to steal the credentials of another user. IP addresses are no use whatsoever for identifying a user - not even across a single session, as some ISPs might route requests through different non-transparent proxies pretty much at random.</span></text><author><a class="comment-user" href="/users/16782/nickfitz" title="23,396 reputation">NickFitz</a></author></comment><comment><text><span class="comment-copy">ditto NickFitz: on SO questions of this type, people always reject IP-based security, since IP addresses change for many users.</span></text><author><a class="comment-user owner" href="/users/8047/dan-rosenstark" title="36,425 reputation">Dan Rosenstark</a></author></comment><comment><text><span class="comment-copy">"(...)since IP addresses change for <i>most</i> users."  There fixed that for you.</span></text><author><a class="comment-user" href="/users/34813/voyager" title="25,146 reputation">voyager</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Access tokens should be IP specific so that they can not easily be transferred across machines.</p>
<p>They should also be implemented in a way that allows users to see what machines they have active tokens on.</p>
<p>Sites that choose to kill off a token once a new one is created on another computer - make the choice that their users will not access their service on multiple computers - or if they do - that their usage justifies making them login again.</p>
<p>The policy you employ really depends on the data you are holding and the needs of the user.</p>
</div></text><author><a href="/users/125585/grouchal">Grouchal</a></author><comments/></answer></answers></post>