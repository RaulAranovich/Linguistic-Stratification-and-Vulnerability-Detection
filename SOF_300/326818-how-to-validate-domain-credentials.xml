<?xml version="1.0" encoding="utf-8"?>
<post><title>c# - How to validate domain credentials? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I want to validate a set of credentials against the domain controller. e.g.:</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="typ">Username</span><span class="pun">:</span><span class="pln"> STACKOVERFLOW\joel
</span><span class="typ">Password</span><span class="pun">:</span><span class="pln"> splotchy</span></code></pre>
<h2>Method 1. Query Active Directory with Impersonation</h2>
<p>A lot of people suggest querying the Active Directory for something. If an exception is thrown, then you know the credentials are not valid - as is suggested in <a href="http://stackoverflow.com/questions/290548/c-validate-a-username-and-password-against-active-directory">this stackoverflow question</a>.</p>
<p>There are some serious <a href="http://bytes.com/groups/net-c/249893-fyi-easy-way-validate-ad-credentials-win2k-using-c" rel="noreferrer">drawbacks to this approach</a> however:</p>
<ol>
<li><p>You are not only authenticating a domain account, but you are also doing an implicit authorization check. That is, you are reading properties from the AD using an impersonation token. What if the otherwise valid account has no rights to read from the AD? By default all users have read access, but domain policies can be set to disable access permissions for restricted accounts (and or groups).</p></li>
<li><p>Binding against the AD has a serious overhead, the AD schema cache has to be loaded at the client (ADSI cache in the ADSI provider used by DirectoryServices). This is both network, and AD server, resource consuming - and is too expensive for a simple operation like authenticating a user account.</p></li>
<li><p>You're relying on an exception failure for a non-exceptional case, and assuming that means invalid username and password. Other problems (e.g. network failure, AD connectivity failure, memory allocation error, etc) are then mis-intrepreted as authentication failure.</p></li>
</ol>
<h2>Method 2. LogonUser Win32 API</h2>
<p><a href="http://stackoverflow.com/questions/290548/c-validate-a-username-and-password-against-active-directory#290558">Others</a> have suggested using the <a href="http://msdn.microsoft.com/en-us/library/aa378184.aspx" rel="noreferrer"><code>LogonUser()</code></a> API function. This sounds nice, but unfortunately the calling user sometimes needs a permission usually only given to the operating system itself:</p>
<blockquote>
<p>The process calling LogonUser requires
  the SE_TCB_NAME privilege. If the
  calling process does not have this
  privilege, LogonUser fails and
  GetLastError returns
  ERROR_PRIVILEGE_NOT_HELD. </p>
<p>In some
  cases, the process that calls
  LogonUser must also have the
  SE_CHANGE_NOTIFY_NAME privilege
  enabled; otherwise, LogonUser fails
  and GetLastError returns
  ERROR_ACCESS_DENIED. This privilege is
  not required for the local system
  account or accounts that are members
  of the administrators group. By
  default, SE_CHANGE_NOTIFY_NAME is
  enabled for all users, but some
  administrators may disable it for
  everyone.</p>
</blockquote>
<p>Handing out the "<em>Act as a part of the operating system</em>" privilege is not something you want to do willy-nilly - as Microsoft points out in a <a href="http://support.microsoft.com/kb/180548" rel="noreferrer">knowledge base article</a>:</p>
<blockquote>
<p>...the process that is calling
  LogonUser must have the SE_TCB_NAME
  privilege (in User Manager, this is
  the "<em>Act as part of the Operating
  System</em>" right). The SE_TCB_NAME
  privilege is very powerful and
  <strong>should not be granted to any arbitrary user just so that they can
  run an application</strong> that needs to
  validate credentials.</p>
</blockquote>
<p>Additionally, a call to <code>LogonUser()</code> will fail if a blank password is specified.</p>
<hr/>
<p>What is the proper way to authenticate a set of domain credentials?</p>
<hr/>
<p>I <em>happen</em> to be calling from managed code, but this is a a general Windows question. It can be assumed that the customers have the .NET Framework 2.0 installed.</p>
</div></text><author><a href="/users/2630337/robert">Robert</a></author><comments><comment><text><span class="comment-copy">Readers should note that as of Windows XP, LogonUser no longer requires SE_TCB_NAME (unless you are logging onto a Passport account).</span></text><author><a class="comment-user" href="/users/886887/harry-johnston" title="25,538 reputation">Harry Johnston</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>C# in .NET 3.5 using <a href="http://msdn.microsoft.com/en-us/library/system.directoryservices.accountmanagement.aspx" rel="noreferrer">System.DirectoryServices.AccountManagement</a>.</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> valid </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
 using </span><span class="pun">(</span><span class="typ">PrincipalContext</span><span class="pln"> context </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pun">(</span><span class="typ">ContextType</span><span class="pun">.</span><span class="typ">Domain</span><span class="pun">))</span><span class="pln">
 </span><span class="pun">{</span><span class="pln">
     valid </span><span class="pun">=</span><span class="pln"> context</span><span class="pun">.</span><span class="typ">ValidateCredentials</span><span class="pun">(</span><span class="pln"> username</span><span class="pun">,</span><span class="pln"> password </span><span class="pun">);</span><span class="pln">
 </span><span class="pun">}</span></code></pre>
<p>This will validate against the current domain.  Check out the parameterized PrincipalContext constructor for other options.</p>
</div></text><author><a href="/users/12950/tvanfosson">tvanfosson</a></author><comments><comment><text><span class="comment-copy">@tvanfosson: doesn't DirectoryServices use AD?</span></text><author><a class="comment-user" href="/users/16076/mitch-wheat" title="225,410 reputation">Mitch Wheat</a></author></comment><comment><text><span class="comment-copy">Yes.  But the documentation indicates that this is a fast way to validate credentials.  It is also different than the binding method mentioned in the question since you aren't reading any properties from the object.  Note that the method is on the context, not a directory object.</span></text><author><a class="comment-user" href="/users/12950/tvanfosson" title="371,951 reputation">tvanfosson</a></author></comment><comment><text><span class="comment-copy">Correction: System.DirectoryServices.AccountManagement requires .NET 3.5. (<a href="http://msdn.microsoft.com/en-us/library/system.directoryservices.accountmanagement.principalcontext.aspx" rel="nofollow noreferrer">msdn.microsoft.com/en-us/library/…</a>)</span></text><author><a class="comment-user owner" href="/users/12597/ian-boyd" title="94,195 reputation">Ian Boyd</a></author></comment><comment><text><span class="comment-copy">It also works with local users if you used <code>new PrincipalContext(ContextType.Machine)</code> instead.</span></text><author><a class="comment-user" href="/users/68571/vansfannel" title="15,450 reputation">VansFannel</a></author></comment><comment><text><span class="comment-copy">Does anyone know if this works on cached credentials, or does it require connection to the DC? I need to know this for some implementation I'm working on now and I'm not currently on any domain to test</span></text><author><a class="comment-user" href="/users/68972/jcl" title="16,511 reputation">Jcl</a></author></comment><comment><text><span class="comment-copy">@Jcl I would hope so but I don't have any way to test right now</span></text><author><a class="comment-user" href="/users/12950/tvanfosson" title="371,951 reputation">tvanfosson</a></author></comment><comment><text><span class="comment-copy">@tvanfosson I will hope it does work, and go for it anyway, since I'm doing this implementation having in mind a laptop user who uses cached credentials many times. Thanks :-)</span></text><author><a class="comment-user" href="/users/68972/jcl" title="16,511 reputation">Jcl</a></author></comment><comment><text><span class="comment-copy">Does anyone know how we could do something similar in a UWP app? (with regular AD and not with Azure AD). I have asked a question here: <a href="http://stackoverflow.com/questions/42821447">stackoverflow.com/questions/42821447</a></span></text><author><a class="comment-user" href="/users/1710577/slayernoah" title="999 reputation">slayernoah</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pln">using </span><span class="typ">System</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">.</span><span class="typ">Generic</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Linq</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Text</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Security</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">DirectoryServices</span><span class="pun">.</span><span class="typ">AccountManagement</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">struct</span><span class="pln"> </span><span class="typ">Credentials</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">Username</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">Password</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Domain_Authentication</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Credentials</span><span class="pln"> </span><span class="typ">Credentials</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">Domain</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Domain_Authentication</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> </span><span class="typ">Username</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">Password</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">SDomain</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Credentials</span><span class="pun">.</span><span class="typ">Username</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Username</span><span class="pun">;</span><span class="pln">
        </span><span class="typ">Credentials</span><span class="pun">.</span><span class="typ">Password</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Password</span><span class="pun">;</span><span class="pln">
        </span><span class="typ">Domain</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">SDomain</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsValid</span><span class="pun">()</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        using </span><span class="pun">(</span><span class="typ">PrincipalContext</span><span class="pln"> pc </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pun">(</span><span class="typ">ContextType</span><span class="pun">.</span><span class="typ">Domain</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Domain</span><span class="pun">))</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="com">// validate the credentials</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> pc</span><span class="pun">.</span><span class="typ">ValidateCredentials</span><span class="pun">(</span><span class="typ">Credentials</span><span class="pun">.</span><span class="typ">Username</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Credentials</span><span class="pun">.</span><span class="typ">Password</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/877103/kantanomo">kantanomo</a></author><comments><comment><text><span class="comment-copy">does this contain any significant difference to @tvanfosson's answer 3 years earlier?</span></text><author><a class="comment-user" href="/users/13744/gbjbaanb" title="41,401 reputation">gbjbaanb</a></author></comment><comment><text><span class="comment-copy">@gbjbaanb Yes, as it contains the <code>Domain</code> parameter when creating the <code>PrincipalContext</code>, something that I was interested in knowing and found in this answer.</span></text><author><a class="comment-user" href="/users/698179/rudi-visser" title="14,787 reputation">Rudi Visser</a></author></comment><comment><text><span class="comment-copy">@RudiVisser tvanfosson did suggest you "Check out the parameterized PrincipalContext constructor for other options" - always read the docs, never take just the internet's word for anything! :)</span></text><author><a class="comment-user" href="/users/13744/gbjbaanb" title="41,401 reputation">gbjbaanb</a></author></comment><comment><text><span class="comment-copy">@gbjbaanb Yes of course, but providing a working example rather than a link and suggestion to read elsewhere is the StackOverflow mantra, that's why we accept multiple submissions of answers :D Simply saying that this <i>does</i> provide more.</span></text><author><a class="comment-user" href="/users/698179/rudi-visser" title="14,787 reputation">Rudi Visser</a></author></comment><comment><text><span class="comment-copy">Does anyone know how we could do something similar in a UWP app? (with regular AD and not with Azure AD). I have asked a question here: <a href="http://stackoverflow.com/questions/42821447">stackoverflow.com/questions/42821447</a></span></text><author><a class="comment-user" href="/users/1710577/slayernoah" title="999 reputation">slayernoah</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I`m using the following code to validate credentials.
The method shown below will confirm if the credentials are correct and if not wether the password is expired or needs change.</p>
<p>I`ve been looking for something like this for ages... So i hope this helps someone!</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pln">using </span><span class="typ">System</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">DirectoryServices</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">DirectoryServices</span><span class="pun">.</span><span class="typ">AccountManagement</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Runtime</span><span class="pun">.</span><span class="typ">InteropServices</span><span class="pun">;</span><span class="pln">

namespace </span><span class="typ">User</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">UserValidation</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="pun">[</span><span class="typ">DllImport</span><span class="pun">(</span><span class="str">"advapi32.dll"</span><span class="pun">,</span><span class="pln"> </span><span class="typ">SetLastError</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">)]</span><span class="pln">
        </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">extern</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">LogonUser</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> principal</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> authority</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> password</span><span class="pun">,</span><span class="pln"> </span><span class="typ">LogonTypes</span><span class="pln"> logonType</span><span class="pun">,</span><span class="pln"> </span><span class="typ">LogonProviders</span><span class="pln"> logonProvider</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">out</span><span class="pln"> </span><span class="typ">IntPtr</span><span class="pln"> token</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">[</span><span class="typ">DllImport</span><span class="pun">(</span><span class="str">"kernel32.dll"</span><span class="pun">,</span><span class="pln"> </span><span class="typ">SetLastError</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">)]</span><span class="pln">
        </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">extern</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">CloseHandle</span><span class="pun">(</span><span class="typ">IntPtr</span><span class="pln"> handle</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">enum</span><span class="pln"> </span><span class="typ">LogonProviders</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">uint</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">Default</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="com">// default for platform (use this!)</span><span class="pln">
            </span><span class="typ">WinNT35</span><span class="pun">,</span><span class="pln">     </span><span class="com">// sends smoke signals to authority</span><span class="pln">
            </span><span class="typ">WinNT40</span><span class="pun">,</span><span class="pln">     </span><span class="com">// uses NTLM</span><span class="pln">
            </span><span class="typ">WinNT50</span><span class="pln">      </span><span class="com">// negotiates Kerb or NTLM</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">enum</span><span class="pln"> </span><span class="typ">LogonTypes</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">uint</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">Interactive</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln">
            </span><span class="typ">Network</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">3</span><span class="pun">,</span><span class="pln">
            </span><span class="typ">Batch</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln">
            </span><span class="typ">Service</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">5</span><span class="pun">,</span><span class="pln">
            </span><span class="typ">Unlock</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">7</span><span class="pun">,</span><span class="pln">
            </span><span class="typ">NetworkCleartext</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">8</span><span class="pun">,</span><span class="pln">
            </span><span class="typ">NewCredentials</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">9</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln">  </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> ERROR_PASSWORD_MUST_CHANGE </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1907</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln">  </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> ERROR_LOGON_FAILURE </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1326</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln">  </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> ERROR_ACCOUNT_RESTRICTION </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1327</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln">  </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> ERROR_ACCOUNT_DISABLED </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1331</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln">  </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> ERROR_INVALID_LOGON_HOURS </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1328</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln">  </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> ERROR_NO_LOGON_SERVERS </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1311</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln">  </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> ERROR_INVALID_WORKSTATION </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1329</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln">  </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> ERROR_ACCOUNT_LOCKED_OUT </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1909</span><span class="pun">;</span><span class="pln">      </span><span class="com">//It gives this error if the account is locked, REGARDLESS OF WHETHER VALID CREDENTIALS WERE PROVIDED!!!</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln">  </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> ERROR_ACCOUNT_EXPIRED </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1793</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln">  </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> ERROR_PASSWORD_EXPIRED </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1330</span><span class="pun">;</span><span class="pln">

        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> </span><span class="typ">CheckUserLogon</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> username</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> password</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> domain_fqdn</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">int</span><span class="pln"> errorCode </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
            using </span><span class="pun">(</span><span class="typ">PrincipalContext</span><span class="pln"> pc </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pun">(</span><span class="typ">ContextType</span><span class="pun">.</span><span class="typ">Domain</span><span class="pun">,</span><span class="pln"> domain_fqdn</span><span class="pun">,</span><span class="pln"> </span><span class="str">"ADMIN_USER"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"PASSWORD"</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">pc</span><span class="pun">.</span><span class="typ">ValidateCredentials</span><span class="pun">(</span><span class="pln">username</span><span class="pun">,</span><span class="pln"> password</span><span class="pun">))</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">IntPtr</span><span class="pln"> token </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IntPtr</span><span class="pun">();</span><span class="pln">
                    </span><span class="kwd">try</span><span class="pln">
                    </span><span class="pun">{</span><span class="pln">
                        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="typ">LogonUser</span><span class="pun">(</span><span class="pln">username</span><span class="pun">,</span><span class="pln"> domain_fqdn</span><span class="pun">,</span><span class="pln"> password</span><span class="pun">,</span><span class="pln"> </span><span class="typ">LogonTypes</span><span class="pun">.</span><span class="typ">Network</span><span class="pun">,</span><span class="pln"> </span><span class="typ">LogonProviders</span><span class="pun">.</span><span class="typ">Default</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">out</span><span class="pln"> token</span><span class="pun">))</span><span class="pln">
                        </span><span class="pun">{</span><span class="pln">
                            errorCode </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Marshal</span><span class="pun">.</span><span class="typ">GetLastWin32Error</span><span class="pun">();</span><span class="pln">
                        </span><span class="pun">}</span><span class="pln">
                    </span><span class="pun">}</span><span class="pln">
                    </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Exception</span><span class="pun">)</span><span class="pln">
                    </span><span class="pun">{</span><span class="pln">
                        </span><span class="kwd">throw</span><span class="pun">;</span><span class="pln">
                    </span><span class="pun">}</span><span class="pln">
                    </span><span class="kwd">finally</span><span class="pln">
                    </span><span class="pun">{</span><span class="pln">
                        </span><span class="typ">CloseHandle</span><span class="pun">(</span><span class="pln">token</span><span class="pun">);</span><span class="pln">
                    </span><span class="pun">}</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> errorCode</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/4223946/kevinrr3">Kevinrr3</a></author><comments><comment><text><span class="comment-copy">this is "method 2" described in the question... so... not really answering the question</span></text><author><a class="comment-user" href="/users/518955/robert-levy" title="24,088 reputation">Robert Levy</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Here's how to determine a local user:</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsLocalUser</span><span class="pun">()</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> windowsIdentity</span><span class="pun">.</span><span class="typ">AuthenticationType</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="str">"NTLM"</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span></code></pre>
<hr/>
<h2>Edit by Ian Boyd</h2>
<p>You should not use NTLM anymore at all. It is so old, and so bad, that Microsoft's Application Verifier (which is used to catch common programming mistakes) will throw a warning if it detects you using NTLM.</p>
<p>Here's a chapter from the Application Verifier documentation about why they have a test if someone is mistakenly using NTLM:</p>
<blockquote>
<h2>Why the NTLM Plug-in is Needed</h2>
<p>NTLM is an outdated authentication protocol with flaws that
  potentially compromise the security of applications and the operating
  system. The most important shortcoming is the lack of server
  authentication, which could allow an attacker to trick users into
  connecting to a spoofed server. As a corollary of missing server
  authentication, applications using NTLM can also be vulnerable to a
  type of attack known as a “reflection” attack. This latter allows an
  attacker to hijack a user’s authentication conversation to a
  legitimate server and use it to authenticate the attacker to the
  user’s computer. NTLM’s vulnerabilities and ways of exploiting them
  are the target of increasing research activity in the security
  community.</p>
<p>Although Kerberos has been available for many years many applications
  are still written to use NTLM only. This needlessly reduces the
  security of applications. Kerberos cannot however replace NTLM in all
  scenarios – principally those where a client needs to authenticate to
  systems that are not joined to a domain (a home network perhaps being
  the most common of these). The Negotiate security package allows a
  backwards-compatible compromise that uses Kerberos whenever possible
  and only reverts to NTLM when there is no other option. Switching code
  to use Negotiate instead of NTLM will significantly increase the
  security for our customers while introducing few or no application
  compatibilities. Negotiate by itself is not a silver bullet – there
  are cases where an attacker can force downgrade to NTLM but these are
  significantly more difficult to exploit. However, one immediate
  improvement is that applications written to use Negotiate correctly
  are automatically immune to NTLM reflection attacks.</p>
<p>By way of a final word of caution against use of NTLM: <em>in future
  versions of Windows it will be possible to disable the use of NTLM at
  the operating system. If applications have a hard dependency on NTLM
  they will simply fail to authenticate when NTLM is disabled.</em></p>
<h2>How the Plug-in Works</h2>
<p>The Verifier plug detects the following errors:</p>
<ul>
<li><p>The NTLM package is directly specified in the call to AcquireCredentialsHandle (or higher level wrapper API).</p></li>
<li><p>The target name in the call to InitializeSecurityContext is NULL.</p></li>
<li><p>The target name in the call to InitializeSecurityContext is not a properly-formed SPN, UPN or NetBIOS-style domain name.</p></li>
</ul>
<p>The latter two cases will force Negotiate to fall back to NTLM either directly (the first case) or indirectly (the domain controller will return a “principal not found” error in the second case causing Negotiate to fall back).</p>
<p>The plug-in also logs warnings when it detects downgrades to NTLM; for example, when an SPN is not found by the Domain Controller. These are only logged as warnings since they are often legitimate cases – for example, when authenticating to a system that is not domain-joined.</p>
<h2>NTLM Stops</h2>
<p><strong>5000 – Application Has Explicitly Selected NTLM Package</strong></p>
<p>Severity – Error</p>
<p>The application or subsystem explicitly selects NTLM instead of Negotiate in the call to AcquireCredentialsHandle. Even though it may be possible for the client and server to authenticate using Kerberos this is prevented by the explicit selection of NTLM.</p>
<p><strong>How to Fix this Error</strong></p>
<p>The fix for this error is to select the Negotiate package in place of NTLM. How this is done will depend on the particular Network subsystem being used by the client or server. Some examples are given below. You should consult the documentation on the particular library or API set that you are using.</p>
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="typ">APIs</span><span class="pun">(</span><span class="pln">parameter</span><span class="pun">)</span><span class="pln"> </span><span class="typ">Used</span><span class="pln"> </span><span class="kwd">by</span><span class="pln"> </span><span class="typ">Application</span><span class="pln">    </span><span class="typ">Incorrect</span><span class="pln"> </span><span class="typ">Value</span><span class="pln">  </span><span class="typ">Correct</span><span class="pln"> </span><span class="typ">Value</span><span class="pln">  
</span><span class="pun">=====================================</span><span class="pln">  </span><span class="pun">===============</span><span class="pln">  </span><span class="pun">========================</span><span class="pln">
</span><span class="typ">AcquireCredentialsHandle</span><span class="pln"> </span><span class="pun">(</span><span class="pln">pszPackage</span><span class="pun">)</span><span class="pln">  </span><span class="pun">“</span><span class="pln">NTLM</span><span class="pun">”</span><span class="pln">           NEGOSSP_NAME </span><span class="pun">“</span><span class="typ">Negotiate</span><span class="pun">”</span></code></pre>
</blockquote>
</div></text><author><a href="/users/4524843/alan-nicholas">Alan Nicholas</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<pre class="lang-cs prettyprint prettyprinted" style=""><code><span class="pln">using </span><span class="typ">System</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">.</span><span class="typ">Generic</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Text</span><span class="pun">;</span><span class="pln">
using </span><span class="typ">System</span><span class="pun">.</span><span class="typ">DirectoryServices</span><span class="pun">.</span><span class="typ">AccountManagement</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">WindowsCred</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> SPLIT_1 </span><span class="pun">=</span><span class="pln"> </span><span class="str">"\\"</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">ValidateW</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> </span><span class="typ">UserName</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">Password</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">bool</span><span class="pln"> valid </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">Domain</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">""</span><span class="pun">;</span><span class="pln">

        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="typ">UserName</span><span class="pun">.</span><span class="typ">IndexOf</span><span class="pun">(</span><span class="str">"\\"</span><span class="pun">)</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> arrT </span><span class="pun">=</span><span class="pln"> </span><span class="typ">UserName</span><span class="pun">.</span><span class="typ">Split</span><span class="pun">(</span><span class="pln">SPLIT_1</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]);</span><span class="pln">
            </span><span class="typ">Domain</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> arrT</span><span class="pun">[</span><span class="lit">0</span><span class="pun">];</span><span class="pln">
            </span><span class="typ">UserName</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> arrT</span><span class="pun">[</span><span class="lit">1</span><span class="pun">];</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Domain</span><span class="pun">.</span><span class="typ">Length</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">Domain</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Environment</span><span class="pun">.</span><span class="typ">MachineName</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        using </span><span class="pun">(</span><span class="typ">PrincipalContext</span><span class="pln"> context </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pun">(</span><span class="typ">ContextType</span><span class="pun">.</span><span class="typ">Domain</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Domain</span><span class="pun">))</span><span class="pln"> 
        </span><span class="pun">{</span><span class="pln">
            valid </span><span class="pun">=</span><span class="pln"> context</span><span class="pun">.</span><span class="typ">ValidateCredentials</span><span class="pun">(</span><span class="typ">UserName</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Password</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">return</span><span class="pln"> valid</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Kashif Mushtaq
Ottawa, Canada</p>
</div></text><author><a>NONE</a></author><comments><comment><text><span class="comment-copy">The System.DirectoryServices.AccountManagement namespace was new in .NET 3.5</span></text><author><a class="comment-user" href="/users/508287/jeremy-gray" title="808 reputation">Jeremy Gray</a></author></comment><comment><text><span class="comment-copy">I know this is nearly 4 years old, but if you are validating a local user, you will need to ensure that you set the ContextType to ContextType.Machine when you construct a PrincipalContext. Otherwise it will think the machine name provided in the Domain variable is actually a domain server.</span></text><author><a class="comment-user" href="/users/1658066/solidregardless" title="245 reputation">SolidRegardless</a></author></comment></comments></answer></answers></post>