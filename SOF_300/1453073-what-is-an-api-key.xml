<?xml version="1.0" encoding="utf-8"?>
<post><title>security - What is an API key? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I see this word in almost every cross service application these days.</p>
<p><strong>What exactly is an API key and what are its uses?</strong></p>
<p>Also, what is the difference between public and private API keys.</p>
</div></text><author><a href="/users/3357935/steven-vascellaro">Steven Vascellaro</a></author><comments/></question><answers><answer><text><div class="post-text" itemprop="text">
<p>What "exactly" an API key is used for depends very much on who issues it, and what services it's being used for. By and large, however, an API key is the name given to some form of secret token which is submitted alongside web service (or similar) requests in order to identify the origin of the request. The key may be included in some digest of the request content to further verify the origin and to prevent tampering with the values.</p>
<p>Typically, if you can identify the source of a request positively, it acts as a form of authentication, which can lead to access control. For example, you can restrict access to certain API actions based on who's performing the request. For companies which make money from selling such services, it's also a way of tracking who's using the thing for billing purposes. Further still, by blocking a key, you can partially prevent abuse in the case of too-high request volumes.</p>
<p>In general, if you have both a public and a private API key, then it suggests that the keys are themselves a traditional public/private key pair used in some form of <a href="http://en.wikipedia.org/wiki/Public-key_cryptography" rel="noreferrer">asymmetric cryptography</a>, or related, digital signing. These are more secure techniques for positively identifying the source of a request, and additionally, for protecting the request's content from snooping (in addition to tampering).</p>
</div></text><author><a href="/users/3542/rob">Rob</a></author><comments><comment><text><span class="comment-copy">Well put!  However, in my somewhat limited experience, the public/private distinction has nothing to do with public key crypto.  The "public" keys I've seen are typically "access lite" -- in other words, a key you can distribute to grant third parties access to non-sensitive data, without giving away the keys to the kingdom.</span></text><author><a class="comment-user" href="/users/172588/timdev" title="41,156 reputation">timdev</a></author></comment><comment><text><span class="comment-copy">@Rob +1 for the detailed answer @tim +1 for the aferthought!</span></text><author><a class="comment-user owner" href="/users/127212/orangerind" title="2,108 reputation">OrangeRind</a></author></comment><comment><text><span class="comment-copy">@tim - agreed. I think the more common approach I've seen is to have a private digest key.</span></text><author><a class="comment-user" href="/users/3542/rob" title="40,156 reputation">Rob</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Very generally speaking: </p>
<p>An API key simply identifies you.  </p>
<p>If there is a public/private distinction, then the public key is one that you can distribute to others, to allow them to get some subset of information about you from the api.  The private key is for your use only, and provides access to all of your data.</p>
</div></text><author><a href="/users/172588/timdev">timdev</a></author><comments><comment><text><span class="comment-copy">most of the time they look like hashes. is my observation correct?</span></text><author><a class="comment-user owner" href="/users/127212/orangerind" title="2,108 reputation">OrangeRind</a></author></comment><comment><text><span class="comment-copy">The can be generated however you want, as long as they are unique. A hash of some data seems like a reasonable way to generate one, yes.</span></text><author><a class="comment-user" href="/users/15537/matthew-scharley" title="66,910 reputation">Matthew Scharley</a></author></comment><comment><text><span class="comment-copy">Yes, they look like hashes.  After all, you don't want them to be easy to guess.</span></text><author><a class="comment-user" href="/users/172588/timdev" title="41,156 reputation">timdev</a></author></comment><comment><text><span class="comment-copy">More or less - most bog standard API keys are generated by hashing some pseudorandom value and performing some standard plain-text encoding on the result, e.g. base16, base64 etc.</span></text><author><a class="comment-user" href="/users/3542/rob" title="40,156 reputation">Rob</a></author></comment><comment><text><span class="comment-copy">Thanks              !</span></text><author><a class="comment-user owner" href="/users/127212/orangerind" title="2,108 reputation">OrangeRind</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>An API key is a unique value that is assigned to a user of this service when he's accepted as a user of the service.</p>
<p>The service maintains all the issued keys and checks them at each request.</p>
<p>By looking at the supplied key at the request, a service checks whether it is a valid key to decide on whether to grant access to a user or not.</p>
</div></text><author><a>NONE</a></author><comments><comment><text><span class="comment-copy">so what about the public and private one?</span></text><author><a class="comment-user owner" href="/users/127212/orangerind" title="2,108 reputation">OrangeRind</a></author></comment><comment><text><span class="comment-copy">Public and private keys come from the domain of encryption and have something to do with asymmetric encryption. I've never heard these terms used in the sense of API keys.</span></text><author><span class="comment-user">user151323</span></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>API keys are just one way of authenticating users of web services.</p>
</div></text><author><a href="/users/164933/gg">GG.</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Think of it this way, the "Public API Key" is similar to a user name that your database is using as a login to a verification server.  The "Private API Key" would then be similar to the password.  By the site/databse using this method, the security is maintained on the third party/verification server in order to authentic request of posting or editing your site/database.</p>
<p>The API string is just the URL of the login for your site/database to contact the verification server.</p>
</div></text><author><a href="/users/2904680/eugene-grant-sinclair">Eugene Grant-Sinclair</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>It looks like that many people use API keys as a security solution. The bottom line is: <strong>Never treat API  keys as secret</strong> it is not. On https or not, whoever can read the request can see the API key and can make whatever call they want. An API Key should be just as a 'user' identifier as its not a complete security solution even when used with ssl. </p>
<p>The better description is in Eugene Osovetsky link to: <a href="http://stackoverflow.com/questions/1482472/when-working-with-most-apis-why-do-they-require-two-types-of-authentication-nam/1501112#1501112">When working with most APIs, why do they require two types of authentication, namely a key and a secret?</a>
Or check <a href="http://nordicapis.com/why-api-keys-are-not-enough/" rel="nofollow noreferrer">http://nordicapis.com/why-api-keys-are-not-enough/</a></p>
</div></text><author><a href="/users/7836933/timandtheocean">timandtheocean</a></author><comments><comment><text><span class="comment-copy">As you can see, this is an old question, and may likely be considered "too broad" (or perhaps "off-topic") according to modern Stack Overflow standards. Such questions tend to attract opinionated answers, which are usually downvoted and/or deleted. Staying away from such questions is <i>usually</i> the best course of action. You can take a look at the <a href="http://stackoverflow.com/help/on-topic">help center</a> for more information.</span></text><author><a class="comment-user" href="/users/3372061/dev-il" title="10,479 reputation">Dev-iL</a></author></comment></comments></answer></answers></post>