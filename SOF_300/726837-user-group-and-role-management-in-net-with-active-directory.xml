<?xml version="1.0" encoding="utf-8"?>
<post><title>asp.net - User Group and Role Management in .NET with Active Directory - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I'm currently researching methods for storing user roles and permissions for .NET based projects. Some of these projects are web based, some are not. I'm currently struggling to find the best method to achieve what I'm looking for in a consistent, portable way across project types.</p>
<p>Where I'm at, we're looking to leverage Active Directory as our single point of contact for basic user information. Because of this, we're looking to not have to maintain a custom database for each application's users since they are already stored in Active Directory and actively maintained there. Additionally, we don't want to write our own security model/code if possible and would like to use something pre-existing, like the security application blocks provided by Microsoft.</p>
<p>Some projects require only basic privileges, such as read, write, or no access. Other projects require more complex permissions. Users of those applications might be granted access to some areas, but not others, and their permissions can change across each area. An administration section of the app would control and define this access, <strong>not</strong> the AD tools. </p>
<p>Currently, we're using integrated Windows Authentication to perform authentication on our intranet. This works well for finding out basic user information, and I've seen that ASP.NET can be extended to provide an Active Directory roles provider, so I can find out any security groups a user belongs to. But, what seems like the downfall of this method to me is that everything is stored in Active Directory, which could lead to a mess to maintain if things grow too big. </p>
<p>Along this same line, I've also heard of Active Directory Lightweight Directory Services, which seems like it could extend our schema and add only application specific attributes and groups. Problem is, I can't find anything on how this would be done or how this works. There are MSDN articles that describe how to talk to this instance and how to create a new instance, but nothing ever seems to answer my question.</p>
<p><strong>My question is:</strong> Based on your experience, am I going down the right track? Is what I'm looking to do possible using just Active Directory, or do other tools have to be used?</p>
<hr/>
<p><strong>Other methods I've looked into:</strong></p>
<ul>
<li>Using multiple web.config files [<a href="http://stackoverflow.com/questions/176338/customer-configurable-asp-net-web-site-security-for-fine-grained-control-of-page">stackoverflow</a>]</li>
<li>Creating a custom security model and database to manage users across applications</li>
</ul>
</div></text><author><a href="/users/48421/steve-platz">Steve Platz</a></author><comments><comment><text><span class="comment-copy">I've added sample code, as requested</span></text><author><a class="comment-user" href="/users/14454/timothy-walters" title="14,218 reputation">Timothy Walters</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>Using AD for your authentication is a great idea, since you need to add everyone there anyway, and for intranet users there's no need for an extra login.</p>
<p>You're correct that ASP.NET allows you to use a Provider which will allow you to authenticate against AD, although there's nothing included to give you group membership support (although it's quite trivial to implement if you want to, I can provide a sample).</p>
<p>The real issue here is if you want to use AD groups to define permissions within each app, yes?</p>
<p>If so then you do have the option of creating your own RoleProvider for ASP.NET that can also be used by WinForms and WPF apps via ApplicationServices. This RoleProvider could link the ID of the user in AD to groups/roles per app which you can store in your own custom database, which also allows each app to allow administration of these roles without requiring these admins to have extra privileges in AD. </p>
<p>If you want you can also have an override and combine app roles with AD groups, so if they're in some global "Admin" group in AD they get full permission in the App regardless of App role membership. Conversely if they have either a group or property in AD to say they've been fired you could ignore all App role membership and restrict all access (since HR probably wouldn't remove them from each and every app, assuming they even know about them all!).</p>
<p>Sample code added as requested:</p>
<p><strong>NOTE: based on this original work <a href="http://www.codeproject.com/Articles/28546/Active-Directory-Roles-Provider" rel="noreferrer">http://www.codeproject.com/Articles/28546/Active-Directory-Roles-Provider</a></strong></p>
<p>For your ActiveDirectoryMembershipProvider you only need to implement the ValidateUser method, although you could implement more if you desired, the new AccountManagement namespace makes this trivial:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="com">// assumes: using System.DirectoryServices.AccountManagement;</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">ValidateUser</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> username</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> password </span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">bool</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">

  </span><span class="kwd">try</span><span class="pln">
  </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">using</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">var</span><span class="pln"> context </span><span class="pun">=</span><span class="pln"> 
        </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pun">(</span><span class="pln"> </span><span class="typ">ContextType</span><span class="pun">.</span><span class="typ">Domain</span><span class="pun">,</span><span class="pln"> </span><span class="str">"yourDomainName"</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
      result </span><span class="pun">=</span><span class="pln"> context</span><span class="pun">.</span><span class="typ">ValidateCredentials</span><span class="pun">(</span><span class="pln"> username</span><span class="pun">,</span><span class="pln"> password </span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  </span><span class="kwd">catch</span><span class="pun">(</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> ex </span><span class="pun">)</span><span class="pln">
  </span><span class="pun">{</span><span class="pln">
    </span><span class="com">// TODO: log exception</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">return</span><span class="pln"> result</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>For your role provider it's a little bit more work, there's some key issues we discovered while searching google such as groups you want to exclude, users you want to exclude etc.</p>
<p>It's probably worth a full blog post, but this should help you get started, it's caching lookups in Session variables, just as a sample of how you could improve performance (since a full Cache sample would be too long).</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">.</span><span class="typ">Generic</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">.</span><span class="typ">Specialized</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Configuration</span><span class="pun">.</span><span class="typ">Provider</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Diagnostics</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">DirectoryServices</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">DirectoryServices</span><span class="pun">.</span><span class="typ">AccountManagement</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Linq</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Web</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Web</span><span class="pun">.</span><span class="typ">Hosting</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Web</span><span class="pun">.</span><span class="typ">Security</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">namespace</span><span class="pln"> </span><span class="typ">MyApp</span><span class="pun">.</span><span class="typ">Security</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">sealed</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ActiveDirectoryRoleProvider</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">RoleProvider</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> AD_FILTER </span><span class="pun">=</span><span class="pln"> </span><span class="str">"(&amp;(objectCategory=group)(|(groupType=-2147483646)(groupType=-2147483644)(groupType=-2147483640)))"</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> AD_FIELD </span><span class="pun">=</span><span class="pln"> </span><span class="str">"samAccountName"</span><span class="pun">;</span><span class="pln">

        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> _activeDirectoryConnectionString</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> _domain</span><span class="pun">;</span><span class="pln">

        </span><span class="com">// Retrieve Group Mode</span><span class="pln">
        </span><span class="com">// "Additive" indicates that only the groups specified in groupsToUse will be used</span><span class="pln">
        </span><span class="com">// "Subtractive" indicates that all Active Directory groups will be used except those specified in groupsToIgnore</span><span class="pln">
        </span><span class="com">// "Additive" is somewhat more secure, but requires more maintenance when groups change</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> _isAdditiveGroupMode</span><span class="pun">;</span><span class="pln">

        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pln"> _groupsToUse</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pln"> _groupsToIgnore</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pln"> _usersToIgnore</span><span class="pun">;</span><span class="pln">

        </span><span class="com">#region Ignore Lists</span><span class="pln">

        </span><span class="com">// IMPORTANT - DEFAULT LIST OF ACTIVE DIRECTORY USERS TO "IGNORE"</span><span class="pln">
        </span><span class="com">//             DO NOT REMOVE ANY OF THESE UNLESS YOU FULLY UNDERSTAND THE SECURITY IMPLICATIONS</span><span class="pln">
        </span><span class="com">//             VERYIFY THAT ALL CRITICAL USERS ARE IGNORED DURING TESTING</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> </span><span class="typ">_DefaultUsersToIgnore</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="str">"Administrator"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"TsInternetUser"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Guest"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"krbtgt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Replicate"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"SERVICE"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"SMSService"</span><span class="pln">
        </span><span class="pun">};</span><span class="pln">

        </span><span class="com">// IMPORTANT - DEFAULT LIST OF ACTIVE DIRECTORY DOMAIN GROUPS TO "IGNORE"</span><span class="pln">
        </span><span class="com">//             PREVENTS ENUMERATION OF CRITICAL DOMAIN GROUP MEMBERSHIP</span><span class="pln">
        </span><span class="com">//             DO NOT REMOVE ANY OF THESE UNLESS YOU FULLY UNDERSTAND THE SECURITY IMPLICATIONS</span><span class="pln">
        </span><span class="com">//             VERIFY THAT ALL CRITICAL GROUPS ARE IGNORED DURING TESTING BY CALLING GetAllRoles MANUALLY</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> _defaultGroupsToIgnore </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="str">"Domain Guests"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Domain Computers"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Group Policy Creator Owners"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Guests"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Users"</span><span class="pun">,</span><span class="pln">
                </span><span class="str">"Domain Users"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Pre-Windows 2000 Compatible Access"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Exchange Domain Servers"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Schema Admins"</span><span class="pun">,</span><span class="pln">
                </span><span class="str">"Enterprise Admins"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Domain Admins"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Cert Publishers"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Backup Operators"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Account Operators"</span><span class="pun">,</span><span class="pln">
                </span><span class="str">"Server Operators"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Print Operators"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Replicator"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Domain Controllers"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"WINS Users"</span><span class="pun">,</span><span class="pln">
                </span><span class="str">"DnsAdmins"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"DnsUpdateProxy"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"DHCP Users"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"DHCP Administrators"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Exchange Services"</span><span class="pun">,</span><span class="pln">
                </span><span class="str">"Exchange Enterprise Servers"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Remote Desktop Users"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Network Configuration Operators"</span><span class="pun">,</span><span class="pln">
                </span><span class="str">"Incoming Forest Trust Builders"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Performance Monitor Users"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Performance Log Users"</span><span class="pun">,</span><span class="pln">
                </span><span class="str">"Windows Authorization Access Group"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Terminal Server License Servers"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Distributed COM Users"</span><span class="pun">,</span><span class="pln">
                </span><span class="str">"Administrators"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Everybody"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"RAS and IAS Servers"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"MTS Trusted Impersonators"</span><span class="pun">,</span><span class="pln">
                </span><span class="str">"MTS Impersonators"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Everyone"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"LOCAL"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Authenticated Users"</span><span class="pln">
            </span><span class="pun">};</span><span class="pln">
        </span><span class="com">#endregion</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Initializes a new instance of the ADRoleProvider class.</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">ActiveDirectoryRoleProvider</span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            _groupsToUse </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pun">();</span><span class="pln">
            _groupsToIgnore </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pun">();</span><span class="pln">
            _usersToIgnore </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pun">();</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> </span><span class="typ">ApplicationName</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Initialize ADRoleProvider with config values</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="name"&gt;&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="config"&gt;&lt;/param&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Initialize</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> name</span><span class="pun">,</span><span class="pln"> </span><span class="typ">NameValueCollection</span><span class="pln"> config </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> config </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArgumentNullException</span><span class="pun">(</span><span class="pln"> </span><span class="str">"config"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">

            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln"> name </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                name </span><span class="pun">=</span><span class="pln"> </span><span class="str">"ADRoleProvider"</span><span class="pun">;</span><span class="pln">

            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln"> config</span><span class="pun">[</span><span class="pln"> </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">]</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                config</span><span class="pun">.</span><span class="typ">Remove</span><span class="pun">(</span><span class="pln"> </span><span class="str">"description"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
                config</span><span class="pun">.</span><span class="typ">Add</span><span class="pun">(</span><span class="pln"> </span><span class="str">"description"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Active Directory Role Provider"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="com">// Initialize the abstract base class.</span><span class="pln">
            </span><span class="kwd">base</span><span class="pun">.</span><span class="typ">Initialize</span><span class="pun">(</span><span class="pln"> name</span><span class="pun">,</span><span class="pln"> config </span><span class="pun">);</span><span class="pln">

            _domain </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ReadConfig</span><span class="pun">(</span><span class="pln"> config</span><span class="pun">,</span><span class="pln"> </span><span class="str">"domain"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
            _isAdditiveGroupMode </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">ReadConfig</span><span class="pun">(</span><span class="pln"> config</span><span class="pun">,</span><span class="pln"> </span><span class="str">"groupMode"</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="str">"Additive"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
            _activeDirectoryConnectionString </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ReadConfig</span><span class="pun">(</span><span class="pln"> config</span><span class="pun">,</span><span class="pln"> </span><span class="str">"connectionString"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">

            </span><span class="typ">DetermineApplicationName</span><span class="pun">(</span><span class="pln"> config </span><span class="pun">);</span><span class="pln">
            </span><span class="typ">PopulateLists</span><span class="pun">(</span><span class="pln"> config </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">ReadConfig</span><span class="pun">(</span><span class="pln"> </span><span class="typ">NameValueCollection</span><span class="pln"> config</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> key </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> config</span><span class="pun">.</span><span class="typ">AllKeys</span><span class="pun">.</span><span class="typ">Any</span><span class="pun">(</span><span class="pln"> k </span><span class="pun">=&gt;</span><span class="pln"> k </span><span class="pun">==</span><span class="pln"> key </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">return</span><span class="pln"> config</span><span class="pun">[</span><span class="pln"> key </span><span class="pun">];</span><span class="pln">

            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ProviderException</span><span class="pun">(</span><span class="pln"> </span><span class="str">"Configuration value required for key: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> key </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">DetermineApplicationName</span><span class="pun">(</span><span class="pln"> </span><span class="typ">NameValueCollection</span><span class="pln"> config </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="com">// Retrieve Application Name</span><span class="pln">
            </span><span class="typ">ApplicationName</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> config</span><span class="pun">[</span><span class="pln"> </span><span class="str">"applicationName"</span><span class="pln"> </span><span class="pun">];</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln"> </span><span class="typ">ApplicationName</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">try</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="kwd">string</span><span class="pln"> app </span><span class="pun">=</span><span class="pln">
                        </span><span class="typ">HostingEnvironment</span><span class="pun">.</span><span class="typ">ApplicationVirtualPath</span><span class="pln"> </span><span class="pun">??</span><span class="pln">
                        </span><span class="typ">Process</span><span class="pun">.</span><span class="typ">GetCurrentProcess</span><span class="pun">().</span><span class="typ">MainModule</span><span class="pun">.</span><span class="typ">ModuleName</span><span class="pun">.</span><span class="typ">Split</span><span class="pun">(</span><span class="pln"> </span><span class="str">'.'</span><span class="pln"> </span><span class="pun">).</span><span class="typ">FirstOrDefault</span><span class="pun">();</span><span class="pln">

                    </span><span class="typ">ApplicationName</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> app </span><span class="pun">!=</span><span class="pln"> </span><span class="str">""</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> app </span><span class="pun">:</span><span class="pln"> </span><span class="str">"/"</span><span class="pun">;</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
                </span><span class="kwd">catch</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">ApplicationName</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">"/"</span><span class="pun">;</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">ApplicationName</span><span class="pun">.</span><span class="typ">Length</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">256</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ProviderException</span><span class="pun">(</span><span class="pln"> </span><span class="str">"The application name is too long."</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">PopulateLists</span><span class="pun">(</span><span class="pln"> </span><span class="typ">NameValueCollection</span><span class="pln"> config </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="com">// If Additive group mode, populate GroupsToUse with specified AD groups</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> _isAdditiveGroupMode </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">!</span><span class="typ">String</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln"> config</span><span class="pun">[</span><span class="pln"> </span><span class="str">"groupsToUse"</span><span class="pln"> </span><span class="pun">]</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                _groupsToUse</span><span class="pun">.</span><span class="typ">AddRange</span><span class="pun">(</span><span class="pln">
                    config</span><span class="pun">[</span><span class="pln"> </span><span class="str">"groupsToUse"</span><span class="pln"> </span><span class="pun">].</span><span class="typ">Split</span><span class="pun">(</span><span class="pln"> </span><span class="str">','</span><span class="pln"> </span><span class="pun">).</span><span class="typ">Select</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">group</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">group</span><span class="pun">.</span><span class="typ">Trim</span><span class="pun">()</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="pun">);</span><span class="pln">

            </span><span class="com">// Populate GroupsToIgnore List&lt;string&gt; with AD groups that should be ignored for roles purposes</span><span class="pln">
            _groupsToIgnore</span><span class="pun">.</span><span class="typ">AddRange</span><span class="pun">(</span><span class="pln">
                _defaultGroupsToIgnore</span><span class="pun">.</span><span class="typ">Select</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">group</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">group</span><span class="pun">.</span><span class="typ">Trim</span><span class="pun">()</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
            </span><span class="pun">);</span><span class="pln">

            _groupsToIgnore</span><span class="pun">.</span><span class="typ">AddRange</span><span class="pun">(</span><span class="pln">
                </span><span class="pun">(</span><span class="pln"> config</span><span class="pun">[</span><span class="pln"> </span><span class="str">"groupsToIgnore"</span><span class="pln"> </span><span class="pun">]</span><span class="pln"> </span><span class="pun">??</span><span class="pln"> </span><span class="str">""</span><span class="pln"> </span><span class="pun">).</span><span class="typ">Split</span><span class="pun">(</span><span class="pln"> </span><span class="str">','</span><span class="pln"> </span><span class="pun">).</span><span class="typ">Select</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">group</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">group</span><span class="pun">.</span><span class="typ">Trim</span><span class="pun">()</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
            </span><span class="pun">);</span><span class="pln">

            </span><span class="com">// Populate UsersToIgnore ArrayList with AD users that should be ignored for roles purposes</span><span class="pln">
            </span><span class="kwd">string</span><span class="pln"> usersToIgnore </span><span class="pun">=</span><span class="pln"> config</span><span class="pun">[</span><span class="pln"> </span><span class="str">"usersToIgnore"</span><span class="pln"> </span><span class="pun">]</span><span class="pln"> </span><span class="pun">??</span><span class="pln"> </span><span class="str">""</span><span class="pun">;</span><span class="pln">
            _usersToIgnore</span><span class="pun">.</span><span class="typ">AddRange</span><span class="pun">(</span><span class="pln">
                </span><span class="typ">_DefaultUsersToIgnore</span><span class="pln">
                    </span><span class="pun">.</span><span class="typ">Select</span><span class="pun">(</span><span class="pln"> value </span><span class="pun">=&gt;</span><span class="pln"> value</span><span class="pun">.</span><span class="typ">Trim</span><span class="pun">()</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                    </span><span class="pun">.</span><span class="typ">Union</span><span class="pun">(</span><span class="pln">
                        usersToIgnore
                            </span><span class="pun">.</span><span class="typ">Split</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">new</span><span class="pun">[]</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="str">","</span><span class="pln"> </span><span class="pun">},</span><span class="pln"> </span><span class="typ">StringSplitOptions</span><span class="pun">.</span><span class="typ">RemoveEmptyEntries</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                            </span><span class="pun">.</span><span class="typ">Select</span><span class="pun">(</span><span class="pln"> value </span><span class="pun">=&gt;</span><span class="pln"> value</span><span class="pun">.</span><span class="typ">Trim</span><span class="pun">()</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                    </span><span class="pun">)</span><span class="pln">
            </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">RecurseGroup</span><span class="pun">(</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pln"> context</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="kwd">group</span><span class="pun">,</span><span class="pln"> </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pln"> groups </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">var</span><span class="pln"> principal </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GroupPrincipal</span><span class="pun">.</span><span class="typ">FindByIdentity</span><span class="pun">(</span><span class="pln"> context</span><span class="pun">,</span><span class="pln"> </span><span class="typ">IdentityType</span><span class="pun">.</span><span class="typ">SamAccountName</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">group</span><span class="pln"> </span><span class="pun">);</span><span class="pln">

            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> principal </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

            </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pln"> res </span><span class="pun">=</span><span class="pln">
                principal
                    </span><span class="pun">.</span><span class="typ">GetGroups</span><span class="pun">()</span><span class="pln">
                    </span><span class="pun">.</span><span class="typ">ToList</span><span class="pun">()</span><span class="pln">
                    </span><span class="pun">.</span><span class="typ">Select</span><span class="pun">(</span><span class="pln"> grp </span><span class="pun">=&gt;</span><span class="pln"> grp</span><span class="pun">.</span><span class="typ">Name</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                    </span><span class="pun">.</span><span class="typ">ToList</span><span class="pun">();</span><span class="pln">

            groups</span><span class="pun">.</span><span class="typ">AddRange</span><span class="pun">(</span><span class="pln"> res</span><span class="pun">.</span><span class="typ">Except</span><span class="pun">(</span><span class="pln"> groups </span><span class="pun">)</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
            </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">var</span><span class="pln"> item </span><span class="kwd">in</span><span class="pln"> res </span><span class="pun">)</span><span class="pln">
                </span><span class="typ">RecurseGroup</span><span class="pun">(</span><span class="pln"> context</span><span class="pun">,</span><span class="pln"> item</span><span class="pun">,</span><span class="pln"> groups </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Retrieve listing of all roles to which a specified user belongs.</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="username"&gt;&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;returns&gt;String array of roles&lt;/returns&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> </span><span class="typ">GetRolesForUser</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> username </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">string</span><span class="pln"> sessionKey </span><span class="pun">=</span><span class="pln"> </span><span class="str">"groupsForUser:"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> username</span><span class="pun">;</span><span class="pln">

            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Current</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln">
                 </span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">.</span><span class="typ">Session</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln">
                 </span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">.</span><span class="typ">Session</span><span class="pun">[</span><span class="pln"> sessionKey </span><span class="pun">]</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pln">
            </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="pun">(</span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pun">)</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">.</span><span class="typ">Session</span><span class="pun">[</span><span class="pln"> sessionKey </span><span class="pun">]</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">).</span><span class="typ">ToArray</span><span class="pun">();</span><span class="pln">

            </span><span class="kwd">using</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pln"> context </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pun">(</span><span class="pln"> </span><span class="typ">ContextType</span><span class="pun">.</span><span class="typ">Domain</span><span class="pun">,</span><span class="pln"> _domain </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">try</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="com">// add the users groups to the result</span><span class="pln">
                    </span><span class="kwd">var</span><span class="pln"> groupList </span><span class="pun">=</span><span class="pln">
                        </span><span class="typ">UserPrincipal</span><span class="pln">
                            </span><span class="pun">.</span><span class="typ">FindByIdentity</span><span class="pun">(</span><span class="pln"> context</span><span class="pun">,</span><span class="pln"> </span><span class="typ">IdentityType</span><span class="pun">.</span><span class="typ">SamAccountName</span><span class="pun">,</span><span class="pln"> username </span><span class="pun">)</span><span class="pln">
                            </span><span class="pun">.</span><span class="typ">GetGroups</span><span class="pun">()</span><span class="pln">
                            </span><span class="pun">.</span><span class="typ">Select</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">group</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">group</span><span class="pun">.</span><span class="typ">Name</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                            </span><span class="pun">.</span><span class="typ">ToList</span><span class="pun">();</span><span class="pln">

                    </span><span class="com">// add each groups sub groups into the groupList</span><span class="pln">
                    </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">var</span><span class="pln"> </span><span class="kwd">group</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pun">(</span><span class="pln"> groupList </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                        </span><span class="typ">RecurseGroup</span><span class="pun">(</span><span class="pln"> context</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">group</span><span class="pun">,</span><span class="pln"> groupList </span><span class="pun">);</span><span class="pln">

                    groupList </span><span class="pun">=</span><span class="pln"> groupList</span><span class="pun">.</span><span class="typ">Except</span><span class="pun">(</span><span class="pln"> _groupsToIgnore </span><span class="pun">).</span><span class="typ">ToList</span><span class="pun">();</span><span class="pln">

                    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> _isAdditiveGroupMode </span><span class="pun">)</span><span class="pln">
                        groupList </span><span class="pun">=</span><span class="pln"> groupList</span><span class="pun">.</span><span class="typ">Join</span><span class="pun">(</span><span class="pln"> _groupsToUse</span><span class="pun">,</span><span class="pln"> r </span><span class="pun">=&gt;</span><span class="pln"> r</span><span class="pun">,</span><span class="pln"> g </span><span class="pun">=&gt;</span><span class="pln"> g</span><span class="pun">,</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> r</span><span class="pun">,</span><span class="pln"> g </span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> r </span><span class="pun">).</span><span class="typ">ToList</span><span class="pun">();</span><span class="pln">

                    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Current</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                        </span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Current</span><span class="pun">.</span><span class="typ">Session</span><span class="pun">[</span><span class="pln"> sessionKey </span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> groupList</span><span class="pun">;</span><span class="pln">

                    </span><span class="kwd">return</span><span class="pln"> groupList</span><span class="pun">.</span><span class="typ">ToArray</span><span class="pun">();</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
                </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> ex </span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="com">// TODO: LogError( "Unable to query Active Directory.", ex );</span><span class="pln">
                    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pun">[]</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="str">""</span><span class="pln"> </span><span class="pun">};</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Retrieve listing of all users in a specified role.</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="rolename"&gt;String array of users&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;returns&gt;&lt;/returns&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> </span><span class="typ">GetUsersInRole</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> rolename </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="pun">!</span><span class="typ">RoleExists</span><span class="pun">(</span><span class="pln"> rolename </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ProviderException</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">.</span><span class="typ">Format</span><span class="pun">(</span><span class="pln"> </span><span class="str">"The role '{0}' was not found."</span><span class="pun">,</span><span class="pln"> rolename </span><span class="pun">)</span><span class="pln"> </span><span class="pun">);</span><span class="pln">

            </span><span class="kwd">using</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pln"> context </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PrincipalContext</span><span class="pun">(</span><span class="pln"> </span><span class="typ">ContextType</span><span class="pun">.</span><span class="typ">Domain</span><span class="pun">,</span><span class="pln"> _domain </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">try</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">GroupPrincipal</span><span class="pln"> p </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GroupPrincipal</span><span class="pun">.</span><span class="typ">FindByIdentity</span><span class="pun">(</span><span class="pln"> context</span><span class="pun">,</span><span class="pln"> </span><span class="typ">IdentityType</span><span class="pun">.</span><span class="typ">SamAccountName</span><span class="pun">,</span><span class="pln"> rolename </span><span class="pun">);</span><span class="pln">

                    </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln">

                        </span><span class="kwd">from</span><span class="pln"> user </span><span class="kwd">in</span><span class="pln"> p</span><span class="pun">.</span><span class="typ">GetMembers</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                        </span><span class="kwd">where</span><span class="pln"> </span><span class="pun">!</span><span class="pln">_usersToIgnore</span><span class="pun">.</span><span class="typ">Contains</span><span class="pun">(</span><span class="pln"> user</span><span class="pun">.</span><span class="typ">SamAccountName</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                        </span><span class="kwd">select</span><span class="pln"> user</span><span class="pun">.</span><span class="typ">SamAccountName</span><span class="pln">

                    </span><span class="pun">).</span><span class="typ">ToArray</span><span class="pun">();</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
                </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> ex </span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="com">// TODO: LogError( "Unable to query Active Directory.", ex );</span><span class="pln">
                    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pun">[]</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="str">""</span><span class="pln"> </span><span class="pun">};</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Determine if a specified user is in a specified role.</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="username"&gt;&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="rolename"&gt;&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;returns&gt;Boolean indicating membership&lt;/returns&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsUserInRole</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> username</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> rolename </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">GetUsersInRole</span><span class="pun">(</span><span class="pln"> rolename </span><span class="pun">).</span><span class="typ">Any</span><span class="pun">(</span><span class="pln"> user </span><span class="pun">=&gt;</span><span class="pln"> user </span><span class="pun">==</span><span class="pln"> username </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Retrieve listing of all roles.</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;returns&gt;String array of roles&lt;/returns&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> </span><span class="typ">GetAllRoles</span><span class="pun">()</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> roles </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ADSearch</span><span class="pun">(</span><span class="pln"> _activeDirectoryConnectionString</span><span class="pun">,</span><span class="pln"> AD_FILTER</span><span class="pun">,</span><span class="pln"> AD_FIELD </span><span class="pun">);</span><span class="pln">

            </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln">

                </span><span class="kwd">from</span><span class="pln"> role </span><span class="kwd">in</span><span class="pln"> roles</span><span class="pun">.</span><span class="typ">Except</span><span class="pun">(</span><span class="pln"> _groupsToIgnore </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">where</span><span class="pln"> </span><span class="pun">!</span><span class="pln">_isAdditiveGroupMode </span><span class="pun">||</span><span class="pln"> _groupsToUse</span><span class="pun">.</span><span class="typ">Contains</span><span class="pun">(</span><span class="pln"> role </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">select</span><span class="pln"> role

            </span><span class="pun">).</span><span class="typ">ToArray</span><span class="pun">();</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Determine if given role exists</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="rolename"&gt;Role to check&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;returns&gt;Boolean indicating existence of role&lt;/returns&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">RoleExists</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> rolename </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">GetAllRoles</span><span class="pun">().</span><span class="typ">Any</span><span class="pun">(</span><span class="pln"> role </span><span class="pun">=&gt;</span><span class="pln"> role </span><span class="pun">==</span><span class="pln"> rolename </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Return sorted list of usernames like usernameToMatch in rolename</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="rolename"&gt;Role to check&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="usernameToMatch"&gt;Partial username to check&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;returns&gt;&lt;/returns&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> </span><span class="typ">FindUsersInRole</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> rolename</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> usernameToMatch </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="pun">!</span><span class="typ">RoleExists</span><span class="pun">(</span><span class="pln"> rolename </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ProviderException</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">.</span><span class="typ">Format</span><span class="pun">(</span><span class="pln"> </span><span class="str">"The role '{0}' was not found."</span><span class="pun">,</span><span class="pln"> rolename </span><span class="pun">)</span><span class="pln"> </span><span class="pun">);</span><span class="pln">

            </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln">
                </span><span class="kwd">from</span><span class="pln"> user </span><span class="kwd">in</span><span class="pln"> </span><span class="typ">GetUsersInRole</span><span class="pun">(</span><span class="pln"> rolename </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">where</span><span class="pln"> user</span><span class="pun">.</span><span class="typ">ToLower</span><span class="pun">().</span><span class="typ">Contains</span><span class="pun">(</span><span class="pln"> usernameToMatch</span><span class="pun">.</span><span class="typ">ToLower</span><span class="pun">()</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">select</span><span class="pln"> user

            </span><span class="pun">).</span><span class="typ">ToArray</span><span class="pun">();</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">#region Non Supported Base Class Functions</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// AddUsersToRoles not supported.  For security and management purposes, ADRoleProvider only supports read operations against Active Direcory. </span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">AddUsersToRoles</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> usernames</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> rolenames </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">NotSupportedException</span><span class="pun">(</span><span class="pln"> </span><span class="str">"Unable to add users to roles.  For security and management purposes, ADRoleProvider only supports read operations against Active Direcory."</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// CreateRole not supported.  For security and management purposes, ADRoleProvider only supports read operations against Active Direcory. </span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">CreateRole</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> rolename </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">NotSupportedException</span><span class="pun">(</span><span class="pln"> </span><span class="str">"Unable to create new role.  For security and management purposes, ADRoleProvider only supports read operations against Active Direcory."</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// DeleteRole not supported.  For security and management purposes, ADRoleProvider only supports read operations against Active Direcory. </span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">DeleteRole</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> rolename</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> throwOnPopulatedRole </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">NotSupportedException</span><span class="pun">(</span><span class="pln"> </span><span class="str">"Unable to delete role.  For security and management purposes, ADRoleProvider only supports read operations against Active Direcory."</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// RemoveUsersFromRoles not supported.  For security and management purposes, ADRoleProvider only supports read operations against Active Direcory. </span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">RemoveUsersFromRoles</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> usernames</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> rolenames </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">NotSupportedException</span><span class="pun">(</span><span class="pln"> </span><span class="str">"Unable to remove users from roles.  For security and management purposes, ADRoleProvider only supports read operations against Active Direcory."</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="com">#endregion</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Performs an extremely constrained query against Active Directory.  Requests only a single value from</span><span class="pln">
        </span><span class="com">/// AD based upon the filtering parameter to minimize performance hit from large queries.</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="ConnectionString"&gt;Active Directory Connection String&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="filter"&gt;LDAP format search filter&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="field"&gt;AD field to return&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;returns&gt;String array containing values specified by 'field' parameter&lt;/returns&gt;</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> </span><span class="typ">ADSearch</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> </span><span class="typ">ConnectionString</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> filter</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> field </span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">DirectorySearcher</span><span class="pln"> searcher </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DirectorySearcher</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">SearchRoot</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DirectoryEntry</span><span class="pun">(</span><span class="pln"> </span><span class="typ">ConnectionString</span><span class="pln"> </span><span class="pun">),</span><span class="pln">
                </span><span class="typ">Filter</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> filter</span><span class="pun">,</span><span class="pln">
                </span><span class="typ">PageSize</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">500</span><span class="pln">
            </span><span class="pun">};</span><span class="pln">
            searcher</span><span class="pun">.</span><span class="typ">PropertiesToLoad</span><span class="pun">.</span><span class="typ">Clear</span><span class="pun">();</span><span class="pln">
            searcher</span><span class="pun">.</span><span class="typ">PropertiesToLoad</span><span class="pun">.</span><span class="typ">Add</span><span class="pun">(</span><span class="pln"> field </span><span class="pun">);</span><span class="pln">

            </span><span class="kwd">try</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">using</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">SearchResultCollection</span><span class="pln"> results </span><span class="pun">=</span><span class="pln"> searcher</span><span class="pun">.</span><span class="typ">FindAll</span><span class="pun">()</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pun">();</span><span class="pln">
                    </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">SearchResult</span><span class="pln"> searchResult </span><span class="kwd">in</span><span class="pln"> results </span><span class="pun">)</span><span class="pln">
                    </span><span class="pun">{</span><span class="pln">
                        </span><span class="kwd">var</span><span class="pln"> prop </span><span class="pun">=</span><span class="pln"> searchResult</span><span class="pun">.</span><span class="typ">Properties</span><span class="pun">[</span><span class="pln"> field </span><span class="pun">];</span><span class="pln">
                        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> index </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> index </span><span class="pun">&lt;</span><span class="pln"> prop</span><span class="pun">.</span><span class="typ">Count</span><span class="pun">;</span><span class="pln"> index</span><span class="pun">++</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
                            r</span><span class="pun">.</span><span class="typ">Add</span><span class="pun">(</span><span class="pln"> prop</span><span class="pun">[</span><span class="pln"> index </span><span class="pun">].</span><span class="typ">ToString</span><span class="pun">()</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
                    </span><span class="pun">}</span><span class="pln">

                    </span><span class="kwd">return</span><span class="pln"> r</span><span class="pun">.</span><span class="typ">Count</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> r</span><span class="pun">.</span><span class="typ">ToArray</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">];</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
            </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> ex </span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ProviderException</span><span class="pun">(</span><span class="pln"> </span><span class="str">"Unable to query Active Directory."</span><span class="pun">,</span><span class="pln"> ex </span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>A sample config sub-section entry for this would be as follows:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="tag">&lt;roleManager</span><span class="pln"> </span><span class="atn">enabled</span><span class="pun">=</span><span class="atv">"true"</span><span class="pln"> </span><span class="atn">defaultProvider</span><span class="pun">=</span><span class="atv">"ActiveDirectory"</span><span class="tag">&gt;</span><span class="pln">
  </span><span class="tag">&lt;providers&gt;</span><span class="pln">
    </span><span class="tag">&lt;clear/&gt;</span><span class="pln">
    </span><span class="tag">&lt;add</span><span class="pln">
        </span><span class="atn">applicationName</span><span class="pun">=</span><span class="atv">"MyApp"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"ActiveDirectory"</span><span class="pln">
        </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"MyApp.Security.ActiveDirectoryRoleProvider"</span><span class="pln">
        </span><span class="atn">domain</span><span class="pun">=</span><span class="atv">"mydomain"</span><span class="pln"> </span><span class="atn">groupMode</span><span class="pun">=</span><span class="atv">""</span><span class="pln"> </span><span class="atn">connectionString</span><span class="pun">=</span><span class="atv">"LDAP://myDirectoryServer.local/dc=mydomain,dc=local"</span><span class="pln">
    </span><span class="tag">/&gt;</span><span class="pln">
  </span><span class="tag">&lt;/providers&gt;</span><span class="pln">
</span><span class="tag">&lt;/roleManager&gt;</span></code></pre>
<p>Whew, that's a lot of code!</p>
<p>PS: Core parts of the Role Provider above are based on another person's work, I don't have the link handy but we found it via Google, so partial credit to that person for the original. We modified it heavily to use LINQ and to get rid of the need for a database for caching.</p>
</div></text><author><a href="/users/14454/timothy-walters">Timothy Walters</a></author><comments><comment><text><span class="comment-copy">That sounds like exactly what I was looking for. Would you be able to provide any sample code? Thanks for your time!</span></text><author><a class="comment-user owner" href="/users/48421/steve-platz" title="906 reputation">Steve Platz</a></author></comment><comment><text><span class="comment-copy">Great answer, you've got my respect</span></text><author><a class="comment-user" href="/users/45311/ropstah" title="10,234 reputation">Ropstah</a></author></comment><comment><text><span class="comment-copy">Would this example require setting up an ImpersonationContext?  Trying to do something like this but with Windows authentication.</span></text><author><a class="comment-user" href="/users/2009/hometoast" title="8,446 reputation">hometoast</a></author></comment><comment><text><span class="comment-copy">@hometoast: We actually use this to authenticate in a WPF app over the internet against a private internal AD domain, take a look at the "Application Services" topic on MSDN. It works just as well for a WinForms app.</span></text><author><a class="comment-user" href="/users/14454/timothy-walters" title="14,218 reputation">Timothy Walters</a></author></comment><comment><text><span class="comment-copy">Amazing answer!  Do the write methods (AddUsersToRole, CreateRole, etc.) need to be unsupported?  What would it take to support these operations?  I wish I had more up-votes to give you.</span></text><author><a class="comment-user" href="/users/12689/gabe-sumner" title="3,431 reputation">Gabe Sumner</a></author></comment><comment><text><span class="comment-copy">@Gabe: have a look at the System.DirectoryServices.AccountManagement namespace, there's the about page (<a href="http://msdn.microsoft.com/en-us/library/bb384375.aspx" rel="nofollow noreferrer">msdn.microsoft.com/en-us/library/bb384375.aspx</a>) and a sample application that shows how to create a user etc (<a href="http://msdn.microsoft.com/en-us/library/bb384374.aspx" rel="nofollow noreferrer">msdn.microsoft.com/en-us/library/bb384374.aspx</a>) that should get you started.</span></text><author><a class="comment-user" href="/users/14454/timothy-walters" title="14,218 reputation">Timothy Walters</a></author></comment><comment><text><span class="comment-copy">Just FYI, the original version of the code your role provider is based on can be found at <a href="http://www.codeproject.com/KB/aspnet/active_directory_roles.aspx" rel="nofollow noreferrer">codeproject.com/KB/aspnet/active_directory_roles.aspx</a>.</span></text><author><a class="comment-user" href="/users/4160/brant-bobby" title="7,321 reputation">Brant Bobby</a></author></comment><comment><text><span class="comment-copy">@Brant thanks for the link, I've started working at a different company so I couldn't access my browser history to find where the original was. That is the original work which we cleaned up for our purposes.</span></text><author><a class="comment-user" href="/users/14454/timothy-walters" title="14,218 reputation">Timothy Walters</a></author></comment><comment><text><span class="comment-copy">I started working with this but I got confused quickly. I am doing an MVC app and would like something similar to be used for login. I am wodnering do you call this class in the AccountController in the login part ? can you provide me of how to use it in the MVC world. Thanks alot</span></text><author><a class="comment-user" href="/users/2247823/laitha0" title="1,381 reputation">laitha0</a></author></comment><comment><text><span class="comment-copy">Take a look at <a href="http://kenspancakehouse.blogspot.com.au/2013/02/using-active-directory-authentication.html" rel="nofollow noreferrer">kenspancakehouse.blogspot.com.au/2013/02/…</a> if you just need AD Authentication, the above is for when you need to use AD Groups.</span></text><author><a class="comment-user" href="/users/14454/timothy-walters" title="14,218 reputation">Timothy Walters</a></author></comment><comment><text><span class="comment-copy">"This RoleProvider could link the ID of the user in AD to groups/roles per app which you can store in your own custom database, which also allows each app to allow administration of these roles without requiring these admins to have extra privileges in AD" That's not actually implemented here, right? Or am I missing something?</span></text><author><a class="comment-user" href="/users/1041631/mzn" title="2,022 reputation">Mzn</a></author></comment><comment><text><span class="comment-copy">@TimothyWalters If I'm not mistaken I think you have infinite recursion in this answer. You write <code>groups.AddRange( res.Except( groups ) );</code> when gathering groups but then you loop over all of <code>res</code> like this <code>foreach ( var item in res )</code> but this should be <code>foreach ( var item in res.Except( groups ) )</code> so you don't get caught in infinite recursion. Am I reading that right? Either way awesome answer.</span></text><author><a class="comment-user" href="/users/839501/dan" title="1,322 reputation">Dan</a></author></comment></comments></answer></answers></post>