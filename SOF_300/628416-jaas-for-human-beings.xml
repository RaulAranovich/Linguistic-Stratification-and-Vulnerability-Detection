<?xml version="1.0" encoding="utf-8"?>
<post><title>java - JAAS for human beings - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I am having a hard time understanding JAAS. It all seems more complicated than it should be (especially the Sun tutorials). I need a simple tutorial or example on how to implement security (authentication + authorization) in java application based on Struts + Spring + Hibernate with custom user repository. Can be implemented using ACEGI.</p>
</div></text><author><a href="/users/4249/matt-b">matt b</a></author><comments><comment><text><span class="comment-copy">Awesome question. Great pithy title for a legitimate documentation failure.</span></text><author><a class="comment-user" href="/users/593010/guido-anselmi" title="1,936 reputation">Guido Anselmi</a></author></comment><comment><text><span class="comment-copy">Best Q&amp;A on JAAS. I'v been having a really hard time trying to start with it.</span></text><author><a class="comment-user" href="/users/3400454/cley" title="120 reputation">cley</a></author></comment><comment><text><span class="comment-copy">@mattb , I would like to make an addendum, if possible. I believe that <a href="http://stackoverflow.com/a/43220700/3542189">my answer</a> may help in understanding your question. Conceptually saying.</span></text><author><a class="comment-user" href="/users/3542189/pss1suporte" title="101 reputation">pss1suporte</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>Here are some of the links I used to help understand JAAS:</p>
<p><a href="http://www.owasp.org/index.php/JAAS_Tomcat_Login_Module" rel="nofollow noreferrer">http://www.owasp.org/index.php/JAAS_Tomcat_Login_Module</a></p>
<p><a href="http://www.javaworld.com/jw-09-2002/jw-0913-jaas.html" rel="nofollow noreferrer">http://www.javaworld.com/jw-09-2002/jw-0913-jaas.html</a></p>
<p><a href="http://jaasbook.wordpress.com/" rel="nofollow noreferrer">http://jaasbook.wordpress.com/</a></p>
<p><a href="http://roneiv.wordpress.com/2008/02/18/jaas-authentication-mechanism-is-it-possible-to-force-j_security_check-to-go-to-a-specific-page/" rel="nofollow noreferrer">http://roneiv.wordpress.com/2008/02/18/jaas-authentication-mechanism-is-it-possible-to-force-j_security_check-to-go-to-a-specific-page/</a></p>
<p>Also have a look at the Apache tomcat realms configuration how-to:</p>
<p><a href="http://tomcat.apache.org/tomcat-6.0-doc/realm-howto.html" rel="nofollow noreferrer">http://tomcat.apache.org/tomcat-6.0-doc/realm-howto.html</a></p>
</div></text><author><a href="/users/72668/martlark">Martlark</a></author><comments><comment><text><span class="comment-copy">thanks :)  jaas book is really good</span></text><author><a class="comment-user" href="/users/710051/makky" title="5,916 reputation">Makky</a></author></comment><comment><text><span class="comment-copy">The linke for jaasbook is dead.  It has now been moved to <a href="https://jaasbook.wordpress.com/" rel="nofollow noreferrer">jaasbook.wordpress.com</a></span></text><author><a class="comment-user" href="/users/827480/eric-b" title="7,904 reputation">Eric B.</a></author></comment><comment><text><span class="comment-copy">@Martlark , I would like to make an addendum, if possible. I believe that <a href="http://stackoverflow.com/a/43220700/3542189">my answer</a> may help in understanding your answer. Conceptually saying.</span></text><author><a class="comment-user" href="/users/3542189/pss1suporte" title="101 reputation">pss1suporte</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Other users have provide some very useful links above so I am not going to bother with links.  I have done a similar research in JAAS for web application and has ran into a "mind roadblock" until I finally realize JAAS is a framework tackling security at a different "layer" then web applications in the Java World.  It is build to tackle security issues in Java SE not Java EE.</p>
<p>JAAS is a security framework built for securing things at a much lower level then web-application.  Some example of these things are code and resources available at the JVM level, hence all these ability to set policy files in the JVM level.</p>
<p>However, since Java EE is built on top of Java SE, a few modules from JAAS were reused in Java EE security such as the LoginModules and Callbacks.</p>
<p>Note that in addition to Java EE security, there is also Spring security (formerly known as Acegi), which similar to native Java EE security tackles a much higher "layer" in the securing web-application problem. It is a separate security implementation and is not built on top of standard Java EE security, although it behaves similarly in many regards.</p>
<p>To summarize, unless you are looking to secure resources in the Java SE level (classes, System resources), I don't see any real use of JAAS other than the using the common class and interfaces.  Just focus on using Spring Security or plain old Java EE security which both solve a lot of common web application security problems.</p>
</div></text><author><a href="/users/84091/lsiu">lsiu</a></author><comments><comment><text><span class="comment-copy">Java EE 6 Tutorial assumes understanding basic security concepts, so a little overview of JAAS won't hurt.</span></text><author><a class="comment-user" href="/users/1341526/jacktrades" title="2,945 reputation">jacktrades</a></author></comment><comment><text><span class="comment-copy">Best explanation on JAAS ever!</span></text><author><a class="comment-user" href="/users/39998/david-hofmann" title="2,764 reputation">David Hofmann</a></author></comment><comment><text><span class="comment-copy">@isiu, I would like to make an addendum, if possible. I believe that <a href="http://stackoverflow.com/a/43220700/3542189">my answer</a> may help in understanding your answer. Conceptually saying.</span></text><author><a class="comment-user" href="/users/3542189/pss1suporte" title="101 reputation">pss1suporte</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>javax.security is imho overcomplicated API. As a result there are implementors of not only LoginModules, but the entire authentication and authorization api, that creates abstraction layer above, like Authentication &amp; Authorization managers.</p>
<p>For starters, it is good to print <strong><a href="http://media.techtarget.com/tss/static/articles/content/Pramati-JAAS/interaction.gif" rel="noreferrer">this</a></strong> into your memory.</p>
<p>Secondly, imho the most simple, setup &amp; go library for JAAS is Jboss <a href="http://www.jboss.org/picketbox" rel="noreferrer">PicketBox</a>. It says how to do authentication and authorization via JBossAuthenticationManager and JBossAuthorizationManager ... Easily configurable via XML or Annotations. You can use it for managing both webapps and standalone applications. </p>
<p>If you need the authorization part for managing repository access, in terms of ACL for resources, this is what you are looking for sure.</p>
<p>Problem with the security is, that usually you need to customize it to your needs, so you may end up implementing :</p>
<p><strong>LoginModule</strong> - verifies userName + Password</p>
<p><strong>CallbackHandler</strong> is used like this <code>new LoginContext("Sample", new MyCallbackHandler());</code></p>
<p>CallbackHandler is passed to the underlying LoginModules so they may communicate and interact with users - prompting for a username and password via a graphical user interface, for example. So inside of the Handler you get the username and password from user and it is passed to the LoginModule.</p>
<p><strong>LoginContext</strong> - then you just call lc.login(); and authenticate the credentials. LoginContext is populated with the authenticated Subject.</p>
<p>However Jboss picketbox gives you a really easy way to go, unless you need something specific.</p>
</div></text><author><a href="/users/306488/lisak">lisak</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>lsiu's answer is one the few answers here that really "get it" ;) </p>
<p>Adding to that answer, a really good reference on this topic is <a href="http://java.sys-con.com/node/1002315" rel="noreferrer">Whatever Happened to JAAS?</a>. </p>
<p>It explains how JASPIC is the link in Java EE between the Servlet and EJB security models and potentially a JAAS login module, but that in many cases JAAS' role is reduced to that of a relatively simple username and roles provider in Java EE.</p>
<p>From the same author is <a href="http://raymondkng.sys-con.com/node/171477" rel="noreferrer">JAAS in the Enterprise</a>, which is an older article but provides a lot of historical background on why the Java SE (JAAS) and Java EE models diverged the way they did.</p>
<p>Overall but a few types from JAAS are directly used in Java EE, basically <code>Principal</code> , <code>Subject</code>, and <code>CallbackHandler</code>. The latter two are mainly used by JASPIC. I've explained JASPIC in the article <a href="http://arjan-tijms.blogspot.com/2012/11/implementing-container-authentication.html" rel="noreferrer">Implementing container authentication in Java EE with JASPIC</a>.</p>
</div></text><author><a href="/users/472792/arjan-tijms">Arjan Tijms</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>I can't speak too much to JAAS itself, but this <a href="http://static.springsource.org/spring-security/site/start-here.html" rel="nofollow noreferrer">"suggested steps" guide</a> on Spring Security and <a href="http://static.springframework.org/spring-security/site/reference.html" rel="nofollow noreferrer">the reference manual</a> are both pretty good resources on Spring Security - if your setup is anything close to simple, you don't really need to do much more than read these.</p>
</div></text><author><a href="/users/4249/matt-b">matt b</a></author><comments><comment><text><span class="comment-copy">The "suggested steps" guide has moved here: <a href="http://static.springsource.org/spring-security/site/start-here.html" rel="nofollow noreferrer">static.springsource.org/spring-security/site/start-here.html</a></span></text><author><a class="comment-user" href="/users/332788/aliopi" title="1,312 reputation">aliopi</a></author></comment><comment><text><span class="comment-copy">thanks, updated the link</span></text><author><a class="comment-user" href="/users/4249/matt-b" title="98,628 reputation">matt b</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>For a purely JAAS tutorial check out <a href="http://www.javaworld.com/javaworld/jw-09-2002/jw-0913-jaas.html" rel="nofollow noreferrer">this</a>. It's old but should help with the JAAS basics.</p>
</div></text><author><a href="/users/70795/mark">Mark</a></author><comments/></answer></answers></post>