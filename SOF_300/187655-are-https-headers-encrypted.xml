<?xml version="1.0" encoding="utf-8"?>
<post><title>security - Are HTTPS headers encrypted? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>When sending data over HTTPS, I know the content is encrypted, however I hear mixed answers about whether the headers are encrypted, or how much of the header is encrypted.</p>
<p>How much of HTTPS headers <em>are</em> encrypted?</p>
<p>Including GET/POST request URLs, Cookies, etc.</p>
</div></text><author><a href="/users/627198/prasad">Prasad</a></author><comments><comment><text><span class="comment-copy">HTTP Headers over HTTPS are encrypted, and also not HTTP-Compressed (even if the body is). This makes them less vulnerable to compression-related attacks like BEAST</span></text><author><a class="comment-user" href="/users/223478/neil-mcguigan" title="25,761 reputation">Neil McGuigan</a></author></comment><comment><text><span class="comment-copy">@rook Everyone learns about TLS for the first time at some point. Hopefully, after reading the answers on this question, many people gain some understanding of what's going on when they visit an encrypted site. I suspect a lot of non-technical people also find this question when trying to learn more about how their information is protected on the sites they use.</span></text><author><a class="comment-user owner" href="/users/392/dan-herbert" title="58,146 reputation">Dan Herbert</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>The whole lot is encrypted<sup>†</sup> - all the headers.
That's why SSL on vhosts doesn't work too well - you need a dedicated IP address because the Host header is encrypted.</p>
<p><sup>†</sup>The Server Name Identification (SNI) standard means that the hostname may not be encrypted if you're using TLS. Also, whether you're using SNI or not, the TCP and IP headers are never encrypted. (If they were, your packets would not be routable.)</p>
</div></text><author><a href="/users/24181/greg">Greg</a></author><comments><comment><text><span class="comment-copy">Update to an old answer: the Server Name Identification (SNI) standard means that the hostname <i>may not be encrypted</i> if you're using TLS. Also, whether you're using SNI or not, the TCP and IP headers are never encrypted. (If they were, your packets would not be routable.)</span></text><author><a class="comment-user" href="/users/122763/mehaase" title="13,952 reputation">mehaase</a></author></comment><comment><text><span class="comment-copy">@Greg, Since the vhost gateway is authorized, Couldn't the gateway unencrypt them, observe the Host header, then determine which host to send the packets to?</span></text><author><a class="comment-user" href="/users/632951/pacerier" title="33,795 reputation">Pacerier</a></author></comment><comment><text><span class="comment-copy">@mehaase: Your comment is spot-on and really needs to be an edit or an answer.</span></text><author><a class="comment-user" href="/users/247696/flimm" title="28,337 reputation">Flimm</a></author></comment><comment><text><span class="comment-copy">Afaik URL itself is not encrypted.</span></text><author><a class="comment-user" href="/users/280631/teddy" title="476 reputation">Teddy</a></author></comment><comment><text><span class="comment-copy">Anyone opposed to the edit being made?</span></text><author><a class="comment-user" href="/users/2224584/scott-arciszewski" title="15,046 reputation">Scott Arciszewski</a></author></comment><comment><text><span class="comment-copy">@Teddu what do you mean by "URL itself is not encrypted.". It's encrypted, as it's part of the header.</span></text><author><a class="comment-user" href="/users/409016/dmitry-polushkin" title="1,865 reputation">Dmitry Polushkin</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>The headers are entirely encrypted. The only information going over the network 'in the clear' is related to the SSL setup and D/H key exchange. This exchange is carefully designed not to yield any useful information to eavesdroppers, and once it has taken place, all data is encrypted.</p>
</div></text><author><a href="/users/8562/mdb">mdb</a></author><comments><comment><text><span class="comment-copy">Not all SSL setup involves DH</span></text><author><a class="comment-user" href="/users/236743/dori" title="9,843 reputation">Dori</a></author></comment><comment><text><span class="comment-copy">To be a little pedantic: The IP address of the client and server, the server's hostname, and signals about their SSL implementations are useful to eavesdroppers and are visible.</span></text><author><a class="comment-user" href="/users/243712/poolie" title="5,291 reputation">poolie</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>HTTP version 1.1 added a special HTTP method, CONNECT - intended to create the SSL tunnel, including the necessary protocol handshake and cryptographic setup.<br/>
The regular requests thereafter all get sent wrapped in the SSL tunnel, headers and body inclusive.</p>
</div></text><author><a href="/users/10080/avid">AviD</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>With SSL the encryption is at the transport level, so it takes place before a request is sent.</p>
<p>So everything in the request is encrypted.</p>
</div></text><author><a href="/users/2525/blowdart">blowdart</a></author><comments><comment><text><span class="comment-copy">Since SSL takes place in transport layer and assignment of destination address in packets (in header) takes place in network layer (which is below transport ), then how the headers are encrypted?</span></text><author><a class="comment-user" href="/users/4281711/prateek-joshi" title="1,665 reputation">Prateek Joshi</a></author></comment><comment><text><span class="comment-copy">@PrateekJoshi Because HTTP headers live on the application layer and so are, by default, encrypted due to a lower/ancestor layer being encrypted.</span></text><author><a class="comment-user" href="/users/1150915/aquarelle" title="3,921 reputation">Aquarelle</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>New answer to old question, sorry.  I thought I'd add my $.02</p>
<p>The OP asked if the headers were encrypted.</p>
<p>They are: in transit.</p>
<p>They are NOT: when not in transit.</p>
<p>So, your browser's URL (and title, in some cases) can display the querystring (which usually contain the most sensitive details) and some details in the header; the browser knows some header information (content type, unicode, etc); and browser history, password management, favorites/bookmarks, and cached pages will all contain the querystring.  Server logs on the remote end can also contain querystring as well as some content details.</p>
<p>Also, the URL isn't always secure: the domain, protocol, and port are visible - otherwise routers don't know where to send your requests and firewalls don't know how to filter on protocol, port, or address.</p>
<p>Also, if you've got an HTTP proxy, the proxy server knows the address, usually they don't know the full querystring.</p>
<p>So if the data is moving, it's generally protected.  If it's not in transit, it's not encrypted.</p>
<p>Not to nit pick, but data at the end is also decrypted, and can be parsed, read, saved, forwarded, or discarded at will.  And, malware at either end can take snapshots of data entering (or exiting) the SSL protocol - such as (bad) Javascript inside a page inside HTTPS which can surreptitiously make http (or https) calls to logging websites (since access to local harddrive is often restricted and not useful).</p>
<p>Also, cookies are not encrypted under the HTTPS protocol, either.  Developers wanting to store sensitive data in cookies (or anywhere else for that matter) need to use their own encryption mechanism.</p>
<p>As to cache, most modern browsers won't cache HTTPS pages, but that fact is not defined by the HTTPS protocol, it is entirely dependent on the developer of a browser to be sure not to cache pages received through HTTPS.</p>
<p>So if you're worried about packet sniffing, you're probably okay.  But if you're worried about malware or someone poking through your history, bookmarks, cookies, or cache, you are not out of the water yet.</p>
</div></text><author><a href="/users/375664/wigwam">Wigwam</a></author><comments><comment><text><span class="comment-copy">I know the good answers are on top, but this once again inserts <i>faulty</i> information. Domain is <i>not</i> visible, unless SNI is used. Protocol, other than IP and TCP are <i>not</i> visible. You cannot tell if I'm using HTTP 1.1, SPDY or HTTP2. What is visible on the two endpoints is irrelevant, as the goal of encryption is not to make things <i>invisible</i> but to make things <i>only visible</i> to trusted parties. So the endpoints are implied in the question and about 2/3 of your answer can be removed. The proxy information should be: if you use an HTTPS proxy, then it <i>does have access to everything</i>.</span></text><author><a class="comment-user" href="/users/1600649/melvyn" title="1,665 reputation">Melvyn</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>HTTPS (HTTP over SSL) sends all HTTP content over a SSL tunel, so HTTP content and headers are encrypted as well. </p>
</div></text><author><a href="/users/5445/cms">CMS</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Yes, headers are encrypted. It's written <a href="https://en.wikipedia.org/wiki/HTTPS#Network_layers">here</a>.</p>
<blockquote>
<p>Everything in the HTTPS message is encrypted, including the headers, and the request/response load.</p>
</blockquote>
</div></text><author><a href="/users/1961303/keypress">keypress</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>the URL is also encrypted, you really only have the IP, Port and if SNI, the host name that are unencrypted.</p>
</div></text><author><a href="/users/5588282/xxiao">xxiao</a></author><comments/></answer></answers></post>