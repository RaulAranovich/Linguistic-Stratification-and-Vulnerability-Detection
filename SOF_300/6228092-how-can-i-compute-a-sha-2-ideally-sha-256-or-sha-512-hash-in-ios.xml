<?xml version="1.0" encoding="utf-8"?>
<post><title>objective c - How can I compute a SHA-2 (ideally SHA 256 or SHA 512) hash in iOS? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>The Security services API doesn't appear to allow me to compute a hash directly. There are plenty of public domain and liberally licensed versions available, but I'd rather use a system library implementation if possible.</p>
<p>The data is accessible via NSData, or plain pointers.</p>
<p>The cryptographic strength of the hash is important to me. SHA-256 is the minimum acceptable hash size.</p>
</div></text><author><a href="/users/233201/james">James</a></author><comments/></question><answers><answer><text><div class="post-text" itemprop="text">
<p>This is what I'm using for SHA1:</p>
<pre class="lang-c prettyprint prettyprinted" style=""><code><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="typ">NSData</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">sha1</span><span class="pun">:(</span><span class="typ">NSData</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">data </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">unsigned</span><span class="pln"> </span><span class="kwd">char</span><span class="pln"> hash</span><span class="pun">[</span><span class="pln">CC_SHA1_DIGEST_LENGTH</span><span class="pun">];</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> CC_SHA1</span><span class="pun">([</span><span class="pln">data bytes</span><span class="pun">],</span><span class="pln"> </span><span class="pun">[</span><span class="pln">data length</span><span class="pun">],</span><span class="pln"> hash</span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">NSData</span><span class="pln"> </span><span class="pun">*</span><span class="pln">sha1 </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">NSData</span><span class="pln"> dataWithBytes</span><span class="pun">:</span><span class="pln">hash length</span><span class="pun">:</span><span class="pln">CC_SHA1_DIGEST_LENGTH</span><span class="pun">];</span><span class="pln">        
        </span><span class="kwd">return</span><span class="pln"> sha1</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="kwd">return</span><span class="pln"> nil</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Replace <code>CC_SHA1</code> with <code>CC_SHA256</code> (or whichever you need), as well as <code>CC_SHA1_DIGEST_LENGTH</code> with <code>CC_SHA256_DIGEST_LENGTH</code>.</p>
<p>You need to <code>#import &lt;CommonCrypto/CommonDigest.h&gt;</code></p>
</div></text><author><a href="/users/727817/alex-i">alex-i</a></author><comments><comment><text><span class="comment-copy">The import saved me, thanks!</span></text><author><a class="comment-user" href="/users/1789040/1789040" title="304 reputation">1789040</a></author></comment><comment><text><span class="comment-copy">This didn't work.. converting the returned data to an NSString returned nil for me. The post below "hashed_string" worked if I passed in the data.</span></text><author><a class="comment-user" href="/users/1993937/thejeff" title="422 reputation">TheJeff</a></author></comment><comment><text><span class="comment-copy">@TheJeff - The question doesn't say anything about returning the SHA value as a hexadecimal string. Converting <code>NSData</code> to <code>NSString</code> can be a separate question on its own.</span></text><author><a class="comment-user" href="/users/727817/alex-i" title="4,561 reputation">alex-i</a></author></comment><comment><text><span class="comment-copy">@alex-i, you are right, the NSData comes back, however the conversion to string I was mentioning does not work - you have to use the method that EgeAkpinar proposed below. I'm still curious what and how that works, however like you said that isn't the purpose of this post.</span></text><author><a class="comment-user" href="/users/1993937/thejeff" title="422 reputation">TheJeff</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Here's a pretty similar one based on NSString </p>
<pre class="lang-c prettyprint prettyprinted" style=""><code><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">hashed_string</span><span class="pun">:(</span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">input
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">const</span><span class="pln"> </span><span class="kwd">char</span><span class="pln"> </span><span class="pun">*</span><span class="pln">cstr </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="pln">input cStringUsingEncoding</span><span class="pun">:</span><span class="pln">NSUTF8StringEncoding</span><span class="pun">];</span><span class="pln">
    </span><span class="typ">NSData</span><span class="pln"> </span><span class="pun">*</span><span class="pln">data </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">NSData</span><span class="pln"> dataWithBytes</span><span class="pun">:</span><span class="pln">cstr length</span><span class="pun">:</span><span class="pln">input</span><span class="pun">.</span><span class="pln">length</span><span class="pun">];</span><span class="pln">
    </span><span class="typ">uint8_t</span><span class="pln"> digest</span><span class="pun">[</span><span class="pln">CC_SHA256_DIGEST_LENGTH</span><span class="pun">];</span><span class="pln">

    </span><span class="com">// This is an iOS5-specific method.</span><span class="pln">
    </span><span class="com">// It takes in the data, how much data, and then output format, which in this case is an int array.</span><span class="pln">
    CC_SHA256</span><span class="pun">(</span><span class="pln">data</span><span class="pun">.</span><span class="pln">bytes</span><span class="pun">,</span><span class="pln"> data</span><span class="pun">.</span><span class="pln">length</span><span class="pun">,</span><span class="pln"> digest</span><span class="pun">);</span><span class="pln">

    </span><span class="typ">NSMutableString</span><span class="pun">*</span><span class="pln"> output </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">NSMutableString</span><span class="pln"> stringWithCapacity</span><span class="pun">:</span><span class="pln">CC_SHA256_DIGEST_LENGTH </span><span class="pun">*</span><span class="pln"> </span><span class="lit">2</span><span class="pun">];</span><span class="pln">

    </span><span class="com">// Parse through the CC_SHA256 results (stored inside of digest[]).</span><span class="pln">
    </span><span class="kwd">for</span><span class="pun">(</span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> CC_SHA256_DIGEST_LENGTH</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="pun">[</span><span class="pln">output appendFormat</span><span class="pun">:@</span><span class="str">"%02x"</span><span class="pun">,</span><span class="pln"> digest</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]];</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">return</span><span class="pln"> output</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>(Credits go to <a href="http://www.raywenderlich.com/6475/basic-security-in-ios-5-tutorial-part-1" rel="noreferrer">http://www.raywenderlich.com/6475/basic-security-in-ios-5-tutorial-part-1</a>)</p>
</div></text><author><a href="/users/799164/ege-akpinar">Ege Akpinar</a></author><comments><comment><text><span class="comment-copy">for iOS 7+ you to cast the data.length: CC_SHA256(data.bytes, (int)data.length, digest);</span></text><author><a class="comment-user" href="/users/480415/ryang" title="3,407 reputation">RyanG</a></author></comment><comment><text><span class="comment-copy">data should be <code>[NSData dataWithBytes:cstr length:strlen(cstr)];</code> It'd be better to use <code>[input dataUsingEncoding:NSUTF8StringEncoding];</code></span></text><author><a class="comment-user" href="/users/831344/mikeytdan" title="129 reputation">mikeytdan</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>This is what worked for me</p>
<pre class="lang-c prettyprint prettyprinted" style=""><code><span class="pln">func sha256</span><span class="pun">(</span><span class="pln">securityString </span><span class="pun">:</span><span class="pln"> </span><span class="typ">String</span><span class="pun">)</span><span class="pln"> </span><span class="pun">-&gt;</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    let data </span><span class="pun">=</span><span class="pln"> securityString</span><span class="pun">.</span><span class="pln">dataUsingEncoding</span><span class="pun">(</span><span class="pln">NSUTF8StringEncoding</span><span class="pun">)!</span><span class="pln">
    var hash </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">UInt8</span><span class="pun">](</span><span class="pln">count</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Int</span><span class="pun">(</span><span class="pln">CC_SHA256_DIGEST_LENGTH</span><span class="pun">),</span><span class="pln"> repeatedValue</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln">
    CC_SHA256</span><span class="pun">(</span><span class="pln">data</span><span class="pun">.</span><span class="pln">bytes</span><span class="pun">,</span><span class="pln"> CC_LONG</span><span class="pun">(</span><span class="pln">data</span><span class="pun">.</span><span class="pln">length</span><span class="pun">),</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln">hash</span><span class="pun">)</span><span class="pln">
    let output </span><span class="pun">=</span><span class="pln"> </span><span class="typ">NSMutableString</span><span class="pun">(</span><span class="pln">capacity</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Int</span><span class="pun">(</span><span class="pln">CC_SHA1_DIGEST_LENGTH</span><span class="pun">))</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> byte in hash </span><span class="pun">{</span><span class="pln">
        output</span><span class="pun">.</span><span class="pln">appendFormat</span><span class="pun">(</span><span class="str">"%02x"</span><span class="pun">,</span><span class="pln"> byte</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> output as </span><span class="typ">String</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/1658061/mdkr">mdkr</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Below link i used for creating document hash value and Its very simple and easy to  calculate hash value specially for large files.</p>
<p>Link : <a href="http://www.joel.lopes-da-silva.com/2010/09/07/compute-md5-or-sha-hash-of-large-file-efficiently-on-ios-and-mac-os-x/comment-page-1/#comment-18533" rel="nofollow noreferrer">http://www.joel.lopes-da-silva.com/2010/09/07/compute-md5-or-sha-hash-of-large-file-efficiently-on-ios-and-mac-os-x/comment-page-1/#comment-18533</a></p>
</div></text><author><a href="/users/1883047/sunil-aruru">Sunil aruru</a></author><comments/></answer></answers></post>