<?xml version="1.0" encoding="utf-8"?>
<post><title>html - Keygen tag in HTML5 - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>So I came across this new tag in HTML5, <code>&lt;keygen&gt;</code>.  I can't quite figure out what it is for, how it is applied, and how it might affect browser behavior.  </p>
<p>I understand that this tag is for form encryption, but what is the difference between <code>&lt;keygen&gt;</code> and having a SSL certificate for your domain. Also, what is the <code>challenge</code> attribute?  </p>
<p>I'm not planning on using it as it is far from implemented in an acceptable range of browsers, but I am curious as to what EXACTLY this tag does.  All I can find is vague cookie-cutter documentation with no real examples of usage.</p>
<hr/>
<p><em>Edit:</em> </p>
<p>I have found a VERY informative document, <a href="http://lists.whatwg.org/pipermail/whatwg-whatwg.org/attachments/20080714/07ea5534/attachment.txt" rel="noreferrer">here</a>. This runs through both client-side and server-side implementation of the keygen tag.</p>
<p>I am still curious as to what the benefit of this over a domain SSL certificate would be.</p>
</div></text><author><a href="/users/253907/vidar-s-ramdal">Vidar S. Ramdal</a></author><comments><comment><text><span class="comment-copy"><a href="https://developer.mozilla.org/En/HTML/Element/keygen" rel="nofollow noreferrer">Here</a> is some good documentation.</span></text><author><a class="comment-user" href="/users/283739/deniz-dogan" title="12,450 reputation">Deniz Dogan</a></author></comment><comment><text><span class="comment-copy">Also, Mark Pilgrim gives a quick explanation here: <a href="http://blog.whatwg.org/this-week-in-html5-episode-35" rel="nofollow noreferrer">blog.whatwg.org/this-week-in-html5-episode-35</a> with a ton of links.</span></text><author><a class="comment-user" href="/users/155387/kai" title="4,181 reputation">Kai</a></author></comment><comment><text><span class="comment-copy">A portion of your question doesn't seem to be answered. The challenge associated with the <code>&lt;keygen&gt;</code> element can be used to provide a passphrase with the <code>SPKAC</code>. Once the client certificate signing request is processed by the certificate authority and the resulting client certificate setup within the users browser the challenge can be used as a verification of identity much like a typical password does in the event of shared or multiple users on the same computer terminal.</span></text><author><a class="comment-user" href="/users/901697/jas" title="1,122 reputation">jas-</a></author></comment><comment><text><span class="comment-copy">Can i use <code>&lt;keygen&gt;</code> in my html <code>form</code> without ssl certificate?</span></text><author><a class="comment-user" href="/users/2034750/151291" title="606 reputation">151291</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>SSL is about "server identification" or "server AND client authentication (mutual authentication)".</p>
<p>In most cases only the server presents its server-certificate during the SSL handshake so that you could make sure that this really is the server you expect to connect to. In some cases the server also wants to verify that <em>you</em> really are the person you pretend to be. For this you need a client-certificate.</p>
<p>The <code>&lt;keygen&gt;</code> tag generates a public/private key pair and then creates a certificate request. This certificate request will be sent to a Certificate Authority (CA). The CA creates a certificate and sends it back to the browser. Now you are able to use this certificate for user authentication.</p>
</div></text><author><a href="/users/578246/duddex">duddex</a></author><comments><comment><text><span class="comment-copy">Can i use <code>&lt;keygen&gt;</code> in my html <code>form</code> without ssl certificate?</span></text><author><a class="comment-user" href="/users/2034750/151291" title="606 reputation">151291</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>You're missing some history. <code>keygen</code> was first supported by Netscape when it was still a relevant browser. IE, OTOH, supported the same use cases through its ActiveX APIs. Opera and WebKit (or even KHTML), unwilling to reverse-engineer the entire Win32 API, reverse-engineered <code>keygen</code> instead.</p>
<p>It was specified in Web Forms 2.0 (which has now been merged into the HTML specification), in order to improve interoperability between the browsers that implemented it.</p>
<p>Since then, the IE team has reiterated their refusal to implement <code>keygen</code>, and the specification (in order to avoid turning into dry science fiction) has been changed to not require an actual implementation:</p>
<blockquote>
<p>Note: This specification does not
  specify what key types user agents are
  to support â€” it is possible for a user
  agent to not support any key types at
  all.</p>
</blockquote>
<p>In short, this is not a new element, and unless you can ignore IE, it's probably not what you want.</p>
</div></text><author><a href="/users/33466/ms2ger">Ms2ger</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>If your looking for "exactly" then I'd recommend reading the <a href="http://dev.w3.org/html5/spec/Overview.html#the-keygen-element" rel="nofollow noreferrer">RFC</a>.</p>
<p>The <code>keygen</code> element is for creating a key for authentication of the user while SSL is concerned about privacy of communication and the authentication of the server. Quoting from the RFC</p>
<blockquote>
<p>This specification does not specify how the private key generated is to be used. It is expected that after receiving the SignedPublicKeyAndChallenge (SPKAC) structure, the server will generate a client certificate and offer it back to the user for download; this certificate, once downloaded and stored in the key store along with the private key, can then be used to authenticate to services that use TLS and certificate authentication.</p>
</blockquote>
</div></text><author><a href="/users/550168/andrew">Andrew</a></author><comments><comment><text><span class="comment-copy">So then both methods encrypt comunication, but <code>&lt;keygen&gt;</code> keys are about user identification, where as SSL is about server identification?</span></text><author><a class="comment-user owner" href="/users/449805/craige" title="1,928 reputation">Craige</a></author></comment><comment><text><span class="comment-copy">RFC's are publication from the IETF. The link you provide points to a W3C draft specification.</span></text><author><a class="comment-user" href="/users/1807667/ortomala-lokni" title="10,683 reputation">Ortomala Lokni</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Deprecated</p>
<blockquote>
<p>This feature has been removed from the Web standards. Though some
  browsers may still support it, it is in the process of being dropped.
  Avoid using it and update existing code if possible. Be aware that
  this feature may cease to work at any time.</p>
</blockquote>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen" rel="nofollow noreferrer">Source</a></p>
</div></text><author><a href="/users/200713/nermien-barakat">Nermien Barakat</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>The doc is useful to elaborate on what is the keygen element. Its requirement arises in WebID that maybe understood to be part of Semantic Web of Linked Data as seen at <a href="https://dvcs.w3.org/hg/WebID/raw-file/tip/spec/index-respec.html#creating-a-certificate" rel="nofollow">https://dvcs.w3.org/hg/WebID/raw-file/tip/spec/index-respec.html#creating-a-certificate</a> 2.1.1</p>
</div></text><author><a href="/users/1624169/chawathe-vipul">Chawathe Vipul</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>This might be useful for websites that provide services, where people need to pay for the service, like video on demand, or news website for professionals like Bloomberg. With this keys people can only watch the content in their computer and not in simultaneous computers! You decide how data is stored and processed. you can specify a .asp or .php file that will receive the variables and your file will store that key in the user profile. This way your users will not be able to log in from a different computer if you want. You may force  them to check their email to authorize that new computer, just like steam does. Basically it allows to individualize service access, if your licensing model is per machine, like Operating System.</p>
<p>You can check the specs here:
<a href="http://www.w3.org/TR/html-markup/keygen.html" rel="nofollow">http://www.w3.org/TR/html-markup/keygen.html</a></p>
</div></text><author><a href="/users/2220816/paulo-santos">Paulo Santos</a></author><comments><comment><text><span class="comment-copy">Your use-cased doesn't really work. Nothing prevents exporting the key and cert from the browser and exporting it to a different machine.</span></text><author><a class="comment-user" href="/users/372643/bruno" title="78,944 reputation">Bruno</a></author></comment><comment><text><span class="comment-copy">I don't think you quite understand what this element was for.</span></text><author><a class="comment-user" href="/users/227267/matti-virkkunen" title="45,536 reputation">Matti Virkkunen</a></author></comment></comments></answer></answers></post>