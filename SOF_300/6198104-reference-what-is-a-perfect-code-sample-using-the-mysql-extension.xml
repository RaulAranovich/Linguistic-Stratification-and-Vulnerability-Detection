<?xml version="1.0" encoding="utf-8"?>
<post><title>php - Reference: What is a perfect code sample using the MySQL extension? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<blockquote>
<p>This is to create a <strong>community learning resource</strong>. The goal is to have examples of good code that do not repeat the awful mistakes that can so often be found in copy/pasted PHP code. I have requested it be made Community Wiki. </p>
<p>This is <strong>not meant as a coding contest.</strong> It's not about finding the fastest or most compact way to do a query - it's to provide a good, readable reference especially for newbies. </p>
</blockquote>
<p>Every day, there is a huge influx of questions with <em>really bad</em> code snippets using the <code>mysql_*</code> family of functions on Stack Overflow. While it is usually best to direct those people towards PDO, it sometimes is neither possible (e.g. inherited legacy software) nor a realistic expectation (users are already using it in their project).</p>
<p>Common problems with code using the <code>mysql_*</code> library include:</p>
<ul>
<li>SQL injection in values</li>
<li>SQL injection in LIMIT clauses and dynamic table names</li>
<li>No error reporting ("Why does this query not work?")</li>
<li>Broken error reporting (that is, errors always occur even when the code is put into production)</li>
<li>Cross-site scripting (XSS) injection in value output</li>
</ul>
<p>Let's write a PHP code sample that does the following using the <a href="http://php.net/manual/en/book.mysql.php" rel="noreferrer">mySQL_* family of functions</a>:</p>
<ul>
<li>Accept two POST values, <code>id</code> (numeric) and <code>name</code> (a string)</li>
<li>Do an UPDATE query on a table <code>tablename</code>, changing the <code>name</code> column in the row with the ID <code>id</code></li>
<li>On failure, exit graciously, but show the detailed error only in production mode. <code>trigger_error()</code> will suffice; alternatively use a method of your choosing </li>
<li>Output the message "<code>$name</code> updated."</li>
</ul>
<p>And does <strong>not</strong> show any of the weaknesses listed above.</p>
<p>It should be <strong>as simple as possible</strong>. It ideally doesn't contain any functions or classes. The goal is not to create a copy/pasteable library, but to <strong>show the minimum of what needs to be done to make database querying safe.</strong></p>
<p>Bonus points for good comments.</p>
<p>The goal is to make this question a resource that a user can link to when encountering a question asker who has bad code (even though it isn't the focus of the question at all) or is confronted with a failing query and doesn't know how to fix it. </p>
<p><strong>To pre-empt PDO discussion:</strong></p>
<p>Yes, it will often be preferable to direct the individuals writing those questions to PDO. When it is an option, we should do so. It is, however, not always possible - sometimes, the question asker is working on legacy code, or has already come a long way with this library, and is unlikely to change it now. Also, the <code>mysql_*</code> family of functions is perfectly safe if used properly. So no "use PDO" answers here please.</p>
</div></text><author><a href="/users/187606">Pekka ì›ƒ</a></author><comments/></question><answers><answer><text><div class="post-text" itemprop="text">
<p>My stab at it. Tried to keep it as simple as possible, while still maintaining some real-world conveniences.</p>
<p>Handles unicode and uses loose comparison for readability. Be nice ;-)</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pun">&lt;?</span><span class="pln">php

header</span><span class="pun">(</span><span class="str">'Content-type: text/html; charset=utf-8'</span><span class="pun">);</span><span class="pln">
error_reporting</span><span class="pun">(</span><span class="pln">E_ALL </span><span class="pun">|</span><span class="pln"> E_STRICT</span><span class="pun">);</span><span class="pln">
ini_set</span><span class="pun">(</span><span class="str">'display_errors'</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">);</span><span class="pln">
</span><span class="com">// display_errors can be changed to 0 in production mode to</span><span class="pln">
</span><span class="com">// suppress PHP's error messages</span><span class="pln">

</span><span class="com">/*
Can be used for testing
$_POST['id'] = 1;
$_POST['name'] = 'Markus';
*/</span><span class="pln">

$config </span><span class="pun">=</span><span class="pln"> array</span><span class="pun">(</span><span class="pln">
    </span><span class="str">'host'</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'127.0.0.1'</span><span class="pun">,</span><span class="pln"> 
    </span><span class="str">'user'</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'my_user'</span><span class="pun">,</span><span class="pln"> 
    </span><span class="str">'pass'</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'my_pass'</span><span class="pun">,</span><span class="pln"> 
    </span><span class="str">'db'</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">'my_database'</span><span class="pln">
</span><span class="pun">);</span><span class="pln">

</span><span class="com"># Connect and disable mysql error output</span><span class="pln">
$connection </span><span class="pun">=</span><span class="pln"> </span><span class="lit">@mysql_connect</span><span class="pun">(</span><span class="pln">$config</span><span class="pun">[</span><span class="str">'host'</span><span class="pun">],</span><span class="pln"> 
    $config</span><span class="pun">[</span><span class="str">'user'</span><span class="pun">],</span><span class="pln"> $config</span><span class="pun">[</span><span class="str">'pass'</span><span class="pun">]);</span><span class="pln">

</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">$connection</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    trigger_error</span><span class="pun">(</span><span class="str">'Unable to connect to database: '</span><span class="pln"> 
        </span><span class="pun">.</span><span class="pln"> mysql_error</span><span class="pun">(),</span><span class="pln"> E_USER_ERROR</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">mysql_select_db</span><span class="pun">(</span><span class="pln">$config</span><span class="pun">[</span><span class="str">'db'</span><span class="pun">]))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    trigger_error</span><span class="pun">(</span><span class="str">'Unable to select db: '</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> mysql_error</span><span class="pun">(),</span><span class="pln"> 
        E_USER_ERROR</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">mysql_set_charset</span><span class="pun">(</span><span class="str">'utf8'</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    trigger_error</span><span class="pun">(</span><span class="str">'Unable to set charset for db connection: '</span><span class="pln"> 
        </span><span class="pun">.</span><span class="pln"> mysql_error</span><span class="pun">(),</span><span class="pln"> E_USER_ERROR</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

$result </span><span class="pun">=</span><span class="pln"> mysql_query</span><span class="pun">(</span><span class="pln">
    </span><span class="str">'UPDATE tablename SET name = "'</span><span class="pln"> 
    </span><span class="pun">.</span><span class="pln"> mysql_real_escape_string</span><span class="pun">(</span><span class="pln">$_POST</span><span class="pun">[</span><span class="str">'name'</span><span class="pun">])</span><span class="pln"> 
    </span><span class="pun">.</span><span class="pln"> </span><span class="str">'" WHERE id = "'</span><span class="pln"> 
    </span><span class="pun">.</span><span class="pln"> mysql_real_escape_string</span><span class="pun">(</span><span class="pln">$_POST</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">])</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> </span><span class="str">'"'</span><span class="pln">
</span><span class="pun">);</span><span class="pln">

</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$result</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    echo htmlentities</span><span class="pun">(</span><span class="pln">$_POST</span><span class="pun">[</span><span class="str">'name'</span><span class="pun">],</span><span class="pln"> ENT_COMPAT</span><span class="pun">,</span><span class="pln"> </span><span class="str">'utf-8'</span><span class="pun">)</span><span class="pln"> 
        </span><span class="pun">.</span><span class="pln"> </span><span class="str">' updated.'</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    trigger_error</span><span class="pun">(</span><span class="str">'Unable to update db: '</span><span class="pln"> 
        </span><span class="pun">.</span><span class="pln"> mysql_error</span><span class="pun">(),</span><span class="pln"> E_USER_ERROR</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/138023">Znarkus</a></author><comments><comment><text><span class="comment-copy">@Pekka Aw crap, fixed it. Thanks!</span></text><author><a class="comment-user" href="/users/138023/znarkus" title="8,904 reputation">Znarkus</a></author></comment><comment><text><span class="comment-copy">-1 for <code>#error_reporting(~E_ALL); ... to disable error output</code> - bad advice. Can't downvote more, else I would -1 for <code>@</code> operator.</span></text><author><a class="comment-user" href="/users/680786/oz" title="10,163 reputation">OZ_</a></author></comment><comment><text><span class="comment-copy">@OZ_ I can see your point about @, but why is turning off error reporting in production mode bad?</span></text><author><a class="comment-user owner" href="/users/187606/pekka-%ec%9b%83" title="317,852 reputation">Pekka ì›ƒ</a></author></comment><comment><text><span class="comment-copy">@OZ_: Why is this an issue? In production mode there is no harm in disabling error output, as long as you log it somewhere else. And using @ is the only way to hide nasty output from <code>mysql_connect</code>. Please reconsider.</span></text><author><a class="comment-user" href="/users/138023/znarkus" title="8,904 reputation">Znarkus</a></author></comment><comment><text><span class="comment-copy">@Pekka: What's wrong with @? :O</span></text><author><a class="comment-user" href="/users/138023/znarkus" title="8,904 reputation">Znarkus</a></author></comment><comment><text><span class="comment-copy">@Znarkus <code>@</code> always suppresses error output, which is viewed as bad. What I don't understand is the criticism of <code>error_reporting(~E_ALL);</code></span></text><author><a class="comment-user owner" href="/users/187606/pekka-%ec%9b%83" title="317,852 reputation">Pekka ì›ƒ</a></author></comment><comment><text><span class="comment-copy">@Pekka I just hide the output, but still handle any errors, and later show my own error output if enabled.</span></text><author><a class="comment-user" href="/users/138023/znarkus" title="8,904 reputation">Znarkus</a></author></comment><comment><text><span class="comment-copy">@Pekka, @Znarkus, <code>error_reporting(0);</code> it's very bad advice, because not always errors will be handled by the error handler, because not always this handler will be even coded. <code>ini_set('display_errors',0)</code> - this variant can be used in production code, to hide text of errors, and only when errors are handled.</span></text><author><a class="comment-user" href="/users/680786/oz" title="10,163 reputation">OZ_</a></author></comment><comment><text><span class="comment-copy">@OZ_ you're right of couse, duh. Good point.</span></text><author><a class="comment-user owner" href="/users/187606/pekka-%ec%9b%83" title="317,852 reputation">Pekka ì›ƒ</a></author></comment><comment><text><span class="comment-copy">@OZ_ Changed to <code>display_errors</code>.</span></text><author><a class="comment-user" href="/users/138023/znarkus" title="8,904 reputation">Znarkus</a></author></comment><comment><text><span class="comment-copy">Hmm, shouldn't an <code>id</code> which I assume is an integer NOT be quoted in the query (you are making MySQL work harder casting it), but just used with <code>intval</code>?</span></text><author><a class="comment-user" href="/users/358679/wrikken" title="48,857 reputation">Wrikken</a></author></comment><comment><text><span class="comment-copy">@Wrikken Even though <code>id</code> mostly are integers, they don't need to be, and many times are not.</span></text><author><a class="comment-user" href="/users/138023/znarkus" title="8,904 reputation">Znarkus</a></author></comment><comment><text><span class="comment-copy">@Znarkus: I know, however, this is meant to be a reference for best practices. It would not hurt to show that on of those is NOT to quote numerical values, but instead cast them to their desired to type.</span></text><author><a class="comment-user" href="/users/358679/wrikken" title="48,857 reputation">Wrikken</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I decided to jump the gun and just put something up. It's something to start with. Throws an exception on error.</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">function</span><span class="pln"> executeQuery</span><span class="pun">(</span><span class="pln">$query</span><span class="pun">,</span><span class="pln"> $args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    $cleaned </span><span class="pun">=</span><span class="pln"> array_map</span><span class="pun">(</span><span class="str">'mysql_real_escape_string'</span><span class="pun">,</span><span class="pln"> $args</span><span class="pun">);</span><span class="pln">

    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">$result </span><span class="pun">=</span><span class="pln"> mysql_query</span><span class="pun">(</span><span class="pln">vsprintf</span><span class="pun">(</span><span class="pln">$query</span><span class="pun">,</span><span class="pln"> $cleaned</span><span class="pun">)))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> $result</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Exception</span><span class="pun">(</span><span class="str">'MySQL Query Error: '</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> mysql_error</span><span class="pun">());</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">function</span><span class="pln"> updateTablenameName</span><span class="pun">(</span><span class="pln">$id</span><span class="pun">,</span><span class="pln"> $name</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    $query </span><span class="pun">=</span><span class="pln"> </span><span class="str">"UPDATE tablename SET name = '%s' WHERE id = %d"</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">return</span><span class="pln"> executeQuery</span><span class="pun">(</span><span class="pln">$query</span><span class="pun">,</span><span class="pln"> array</span><span class="pun">(</span><span class="pln">$name</span><span class="pun">,</span><span class="pln"> $id</span><span class="pun">));</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    updateTablenameName</span><span class="pun">(</span><span class="pln">$_POST</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">],</span><span class="pln"> $_POST</span><span class="pun">[</span><span class="str">'name'</span><span class="pun">]);</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">Exception</span><span class="pln"> $e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    echo $e</span><span class="pun">-&gt;</span><span class="pln">getMessage</span><span class="pun">();</span><span class="pln">
    </span><span class="kwd">exit</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/246871">Aaron</a></author><comments><comment><text><span class="comment-copy">Althought it works, it's waaaay too complex for newbies and copy-pasting-people.</span></text><author><a class="comment-user" href="/users/592540/carlos-campderr%c3%b3s" title="11,219 reputation">Carlos CampderrÃ³s</a></author></comment><comment><text><span class="comment-copy">@Aaron - have you read the question and comments? read them properly, just Copy-Pasting is not the solution to this question.</span></text><author><a class="comment-user" href="/users/668008/sujit-agarwal" title="7,044 reputation">Sujit Agarwal</a></author></comment><comment><text><span class="comment-copy">Regarding: <i>On failure, exits graciously, but shows the detailed error <b>only</b> in production mode.</i> Maybe add some conditional arround the <code>echo $e-&gt;getMessage();</code>?</span></text><author><a class="comment-user" href="/users/697154/yoshi" title="40,014 reputation">Yoshi</a></author></comment><comment><text><span class="comment-copy">@Coding-Freak -- not sure if you're implying that I copied and pasted this from somewhere else. If you are, I didn't.</span></text><author><a class="comment-user" href="/users/246871/aaron" title="585 reputation">Aaron</a></author></comment><comment><text><span class="comment-copy">@Carlos - the exception might be a tad much, and the executeQuery abstraction could be unnecessary if it's just an example. Aside from that, I think it serves the purpose without being overly complex or verbose.</span></text><author><a class="comment-user" href="/users/246871/aaron" title="585 reputation">Aaron</a></author></comment><comment><text><span class="comment-copy">@Aaron -  I dint mention it for your answer, rather I wanted it for others to follow. I can understand its ur own answer.</span></text><author><a class="comment-user" href="/users/668008/sujit-agarwal" title="7,044 reputation">Sujit Agarwal</a></author></comment><comment><text><span class="comment-copy">I hope I didn't violate some unspoken rule or SO etiquette by posting this prematurely. If I did, I'll remove.</span></text><author><a class="comment-user" href="/users/246871/aaron" title="585 reputation">Aaron</a></author></comment><comment><text><span class="comment-copy">@Aaron I think the <code>executeQuery</code> is far from unnecessary even if this is <i>just</i> an example, as what the function does is something which should allways be done, and as such has it's purpose.</span></text><author><a class="comment-user" href="/users/697154/yoshi" title="40,014 reputation">Yoshi</a></author></comment><comment><text><span class="comment-copy">@Aaron - You have not broken any rule of SO, but it is a kind of silent decision amongst the SO peers to make this question and its answer a valuable source of information, and to do that, all were deciding by means of comments and getting accustomed to the problems that need to be resolved.</span></text><author><a class="comment-user" href="/users/668008/sujit-agarwal" title="7,044 reputation">Sujit Agarwal</a></author></comment><comment><text><span class="comment-copy">Err, wouldn't this assign the $id value to name and $name to id? Apart from the fact that you're calling updateTableName when your function is called updateTablenameName :p.</span></text><author><a class="comment-user" href="/users/109822/wimvds" title="10,920 reputation">wimvds</a></author></comment><comment><text><span class="comment-copy">@wimvds, thanks. Both issues have been fixed.</span></text><author><a class="comment-user" href="/users/246871/aaron" title="585 reputation">Aaron</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<pre class="default prettyprint prettyprinted" style=""><code><span class="com">/**
 * Rule #0: never trust users input!
 */</span><span class="pln">

</span><span class="com">//sanitize integer value</span><span class="pln">
$id </span><span class="pun">=</span><span class="pln"> intval</span><span class="pun">(</span><span class="pln">$_GET</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">]);</span><span class="pln">
</span><span class="com">//sanitize string value;</span><span class="pln">
$name </span><span class="pun">=</span><span class="pln"> mysql_real_escape_string</span><span class="pun">(</span><span class="pln">$_POST</span><span class="pun">[</span><span class="str">'name'</span><span class="pun">]);</span><span class="pln">
</span><span class="com">//1. using `dbname`. is better than using mysql_select_db()</span><span class="pln">
</span><span class="com">//2. names of tables and columns should be quoted by "`" symbol</span><span class="pln">
</span><span class="com">//3. each variable should be sanitized (even in LIMIT clause)</span><span class="pln">
$q </span><span class="pun">=</span><span class="pln"> mysql_query</span><span class="pun">(</span><span class="str">"UPDATE `dbname`.`tablename` SET `name`='"</span><span class="pun">.</span><span class="pln">$name</span><span class="pun">.</span><span class="str">"' WHERE `id`='"</span><span class="pun">.</span><span class="pln">$id</span><span class="pun">.</span><span class="str">"' LIMIT 0,1 "</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$q</span><span class="pun">===</span><span class="kwd">false</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    trigger_error</span><span class="pun">(</span><span class="str">'Error in query: '</span><span class="pun">.</span><span class="pln">mysql_error</span><span class="pun">(),</span><span class="pln"> E_USER_WARNING</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">else</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="com">//be careful! $name contains user's data, remember Rule #0</span><span class="pln">
    </span><span class="com">//always use htmlspecialchars() to sanitize user's data in output</span><span class="pln">
    </span><span class="kwd">print</span><span class="pln"> htmlspecialchars</span><span class="pun">(</span><span class="pln">$name</span><span class="pun">).</span><span class="str">' updated'</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="com">########################################################################</span><span class="pln">
</span><span class="com">//Example, how easily is to use set_error_handler() and trigger_error()</span><span class="pln">
</span><span class="com">//to control error reporting in production and dev-code</span><span class="pln">
</span><span class="com">//Do NOT use error_reporting(0) or error_reporting(~E_ALL) - each error</span><span class="pln">
</span><span class="com">//should be fixed, not muted</span><span class="pln">
</span><span class="kwd">function</span><span class="pln"> err_handler</span><span class="pun">(</span><span class="pln">$errno</span><span class="pun">,</span><span class="pln"> $errstr</span><span class="pun">,</span><span class="pln"> $errfile</span><span class="pun">,</span><span class="pln"> $errline</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    $hanle_errors_print </span><span class="pun">=</span><span class="pln"> E_ALL </span><span class="pun">&amp;</span><span class="pln"> </span><span class="pun">~</span><span class="pln">E_NOTICE</span><span class="pun">;</span><span class="pln">

    </span><span class="com">//if we want to print this type of errors (other types we can just write in log-file)</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$errno </span><span class="pun">&amp;</span><span class="pln"> $hanle_errors_print</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="com">//$errstr can contain user's data, so... Rule #0</span><span class="pln">
        </span><span class="kwd">print</span><span class="pln"> PHP_EOL</span><span class="pun">.</span><span class="str">'Error ['</span><span class="pun">.</span><span class="pln">$errno</span><span class="pun">.</span><span class="str">'] in file '</span><span class="pun">.</span><span class="pln">$errfile</span><span class="pun">.</span><span class="str">' in line '</span><span class="pun">.</span><span class="pln">$errline
              </span><span class="pun">.</span><span class="str">': '</span><span class="pun">.</span><span class="pln">htmlspecialchars</span><span class="pun">(</span><span class="pln">$errstr</span><span class="pun">).</span><span class="pln">PHP_EOL</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="com">//here you can write error into log-file</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

set_error_handler</span><span class="pun">(</span><span class="str">'err_handler'</span><span class="pun">,</span><span class="pln"> E_ALL </span><span class="pun">&amp;</span><span class="pln"> </span><span class="pun">~</span><span class="pln">E_NOTICE </span><span class="pun">&amp;</span><span class="pln"> E_USER_NOTICE </span><span class="pun">&amp;</span><span class="pln"> </span><span class="pun">~</span><span class="pln">E_STRICT </span><span class="pun">&amp;</span><span class="pln"> </span><span class="pun">~</span><span class="pln">E_DEPRECATED</span><span class="pun">);</span></code></pre>
<p><em><strong>And some explanation of comments:</strong></em> </p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="com">//1. using `dbname`. is better than using mysql_select_db()</span></code></pre>
<p>With using mysql_select_db you can create errors, and it will be not so easy to find and fix them.<br/>
For example, in some script you will set db1 as database, but in some function you need to set db2 as database.<br/>
After calling this function, database will be switched, and all following queries in script will be broken or will broke some data in wrong database (if names of tables and columns will coincide).</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="com">//2. names of tables and columns should be quoted by "`" symbol </span></code></pre>
<p>Some names of columns can be also SQL-keywords, and using "<strong>`</strong>" symbol will help with that.<br/>
Also, all string-values, inserted to query, should be quoted by <strong>'</strong> symbol.  </p>
<p><code>//always use htmlspecialchars() to sanitize user's data in output</code><br/>
It will help you to prevent <a href="http://en.wikipedia.org/wiki/Cross-site_scripting" rel="nofollow">XSS-attacks</a>.</p>
</div></text><author><a href="/users/680786">OZ_</a></author><comments><comment><text><span class="comment-copy">Nice, I like it! I also like the error handler, but maybe it's too much for a newbie to grasp here - would it be an option to remove it for now, or move it to the bottom as "optional"?  (I edited out the <code>i</code> in <code>mysqli</code>)</span></text><author><a class="comment-user owner" href="/users/187606/pekka-%ec%9b%83" title="317,852 reputation">Pekka ì›ƒ</a></author></comment><comment><text><span class="comment-copy">feel free to edit mistakes in my broken English :)</span></text><author><a class="comment-user" href="/users/680786/oz" title="10,163 reputation">OZ_</a></author></comment><comment><text><span class="comment-copy">@Pekka I will try to take more focus on mysql_, will edit now.</span></text><author><a class="comment-user" href="/users/680786/oz" title="10,163 reputation">OZ_</a></author></comment><comment><text><span class="comment-copy">I would replace the string concatenation with <code>sprintf</code>. This makes stuff so much more readable, and possible syntax errors (missing quotes and stuff) more visible.</span></text><author><a class="comment-user" href="/users/697154/yoshi" title="40,014 reputation">Yoshi</a></author></comment><comment><text><span class="comment-copy">@Yoshi I think it's personal preferences and it's definitely not more simple.</span></text><author><a class="comment-user" href="/users/680786/oz" title="10,163 reputation">OZ_</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<pre class="default prettyprint prettyprinted" style=""><code><span class="pun">&lt;?</span><span class="pln">  
mysql_connect</span><span class="pun">();</span><span class="pln"> 
mysql_select_db</span><span class="pun">(</span><span class="str">"new"</span><span class="pun">);</span><span class="pln"> 
$table </span><span class="pun">=</span><span class="pln"> </span><span class="str">"test"</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">if</span><span class="pun">(</span><span class="pln">$_SERVER</span><span class="pun">[</span><span class="str">'REQUEST_METHOD'</span><span class="pun">]==</span><span class="str">'POST'</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  $name </span><span class="pun">=</span><span class="pln"> mysql_real_escape_string</span><span class="pun">(</span><span class="pln">$_POST</span><span class="pun">[</span><span class="str">'name'</span><span class="pun">]);</span><span class="pln"> 
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$id </span><span class="pun">=</span><span class="pln"> intval</span><span class="pun">(</span><span class="pln">$_POST</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">]))</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
    $query</span><span class="pun">=</span><span class="str">"UPDATE $table SET name='$name' WHERE id=$id"</span><span class="pun">;</span><span class="pln"> 
  </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
    $query</span><span class="pun">=</span><span class="str">"INSERT INTO $table SET name='$name'"</span><span class="pun">;</span><span class="pln"> 
  </span><span class="pun">}</span><span class="pln"> 
  mysql_query</span><span class="pun">(</span><span class="pln">$query</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">or</span><span class="pln"> trigger_error</span><span class="pun">(</span><span class="pln">mysql_error</span><span class="pun">().</span><span class="str">" in "</span><span class="pun">.</span><span class="pln">$query</span><span class="pun">);</span><span class="pln"> 
  header</span><span class="pun">(</span><span class="str">"Location: http://"</span><span class="pun">.</span><span class="pln">$_SERVER</span><span class="pun">[</span><span class="str">'HTTP_HOST'</span><span class="pun">].</span><span class="pln">$_SERVER</span><span class="pun">[</span><span class="str">'PHP_SELF'</span><span class="pun">]);</span><span class="pln">  
  </span><span class="kwd">exit</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">}</span><span class="pln">  
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">isset</span><span class="pun">(</span><span class="pln">$_GET</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">]))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  $LIST</span><span class="pun">=</span><span class="pln">array</span><span class="pun">();</span><span class="pln"> 
  $query</span><span class="pun">=</span><span class="str">"SELECT * FROM $table"</span><span class="pun">;</span><span class="pln">  
  $res</span><span class="pun">=</span><span class="pln">mysql_query</span><span class="pun">(</span><span class="pln">$query</span><span class="pun">);</span><span class="pln"> 
  </span><span class="kwd">while</span><span class="pun">(</span><span class="pln">$row</span><span class="pun">=</span><span class="pln">mysql_fetch_assoc</span><span class="pun">(</span><span class="pln">$res</span><span class="pun">))</span><span class="pln"> $LIST</span><span class="pun">[]=</span><span class="pln">$row</span><span class="pun">;</span><span class="pln"> 
  include </span><span class="str">'list.php'</span><span class="pun">;</span><span class="pln"> 
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$id</span><span class="pun">=</span><span class="pln">intval</span><span class="pun">(</span><span class="pln">$_GET</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">]))</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
    $query</span><span class="pun">=</span><span class="str">"SELECT * FROM $table WHERE id=$id"</span><span class="pun">;</span><span class="pln">  
    $res</span><span class="pun">=</span><span class="pln">mysql_query</span><span class="pun">(</span><span class="pln">$query</span><span class="pun">);</span><span class="pln"> 
    $row</span><span class="pun">=</span><span class="pln">mysql_fetch_assoc</span><span class="pun">(</span><span class="pln">$res</span><span class="pun">);</span><span class="pln"> 
    </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$row </span><span class="kwd">as</span><span class="pln"> $k </span><span class="pun">=&gt;</span><span class="pln"> $v</span><span class="pun">)</span><span class="pln"> $row</span><span class="pun">[</span><span class="pln">$k</span><span class="pun">]=</span><span class="pln">htmlspecialchars</span><span class="pun">(</span><span class="pln">$v</span><span class="pun">);</span><span class="pln"> 
  </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
    $row</span><span class="pun">[</span><span class="str">'name'</span><span class="pun">]=</span><span class="str">''</span><span class="pun">;</span><span class="pln"> 
    $row</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">]=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> 
  </span><span class="pun">}</span><span class="pln"> 
  include </span><span class="str">'form.php'</span><span class="pun">;</span><span class="pln"> 
</span><span class="pun">}</span><span class="pln">  
</span><span class="pun">?&gt;</span></code></pre>
<p>form.php</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pun">&lt;?</span><span class="pln"> include </span><span class="str">'tpl_top.php'</span><span class="pln"> </span><span class="pun">?&gt;</span><span class="pln">
</span><span class="tag">&lt;form</span><span class="pln"> </span><span class="atn">method</span><span class="pun">=</span><span class="atv">"POST"</span><span class="tag">&gt;</span><span class="pln">
&lt;input type="text" name="name" value="</span><span class="pun">&lt;?=</span><span class="pln">$row</span><span class="pun">[</span><span class="str">'name'</span><span class="pun">]?&gt;</span><span class="pln">"&gt;</span><span class="tag">&lt;br&gt;</span><span class="pln">
&lt;input type="hidden" name="id" value="</span><span class="pun">&lt;?=</span><span class="pln">$row</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">]?&gt;</span><span class="pln">"&gt;
</span><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"submit"</span><span class="tag">&gt;&lt;br&gt;</span><span class="pln">
</span><span class="tag">&lt;a</span><span class="pln"> </span><span class="atn">href</span><span class="pun">=</span><span class="atv">"?"</span><span class="tag">&gt;</span><span class="pln">Return to the list</span><span class="tag">&lt;/a&gt;</span><span class="pln">
</span><span class="tag">&lt;/form&gt;</span><span class="pln">
</span><span class="pun">&lt;?</span><span class="pln"> include </span><span class="str">'tpl_bottom.php'</span><span class="pln"> </span><span class="pun">?&gt;</span></code></pre>
<p>list.php</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pun">&lt;?</span><span class="pln"> include </span><span class="str">'tpl_top.php'</span><span class="pln"> </span><span class="pun">?&gt;</span><span class="pln">
</span><span class="tag">&lt;a</span><span class="pln"> </span><span class="atn">href</span><span class="pun">=</span><span class="atv">"?id=0"</span><span class="tag">&gt;</span><span class="pln">Add item</span><span class="tag">&lt;/a&gt;</span><span class="pln">
</span><span class="pun">&lt;?</span><span class="pln"> </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$LIST </span><span class="kwd">as</span><span class="pln"> $row</span><span class="pun">):</span><span class="pln"> </span><span class="pun">?&gt;</span><span class="pln">
</span><span class="tag">&lt;li&gt;</span><span class="pln">&lt;a href="?id=</span><span class="pun">&lt;?=</span><span class="pln">$row</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">]?&gt;</span><span class="pln">"&gt;</span><span class="pun">&lt;?=</span><span class="pln">$row</span><span class="pun">[</span><span class="str">'name'</span><span class="pun">]?&gt;</span><span class="tag">&lt;/a&gt;</span><span class="pln">
</span><span class="pun">&lt;?</span><span class="pln"> endforeach </span><span class="pun">?&gt;</span><span class="pln">
</span><span class="pun">&lt;?</span><span class="pln"> include </span><span class="str">'tpl_bottom.php'</span><span class="pln"> </span><span class="pun">?&gt;</span></code></pre>
</div></text><author><a href="/posts/8871450/revisions" id="history-8871450" title="show revision history for this post">
        Your Common Sense
        </a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Looks like my other answer missed the aim of the question.<br/>
(this one doesn't meet some requirements either, but as it can be seen, no safe solution can be achieved without implementing a function to process placeholders, which are being the cornerstone of the safe queries)</p>
<p>So, here is another attempt to post concise solution to make mysql queries safe yet handy.</p>
<p>A function I wrote long time ago and it served me well until I moved to the corporative standard OOP-based solution.<br/>
There was 2 goals to pursue for: <strong>security</strong> and <strong>ease of use</strong>.</p>
<p>First one achieved by implementing placeholders.<br/>
Second one achieved by implementing placeholders and different result types.</p>
<p>The function surely not ideal one. Some drawbacks are:</p>
<ul>
<li>no <code>%</code> chars have to be placed in the query directly as it's using printf syntax. </li>
<li>no multiple connections supported. </li>
<li>no placeholder for the identifiers (as well as many other handy placeholders). </li>
<li>again, <strong>no identifier placeholder!</strong>. <code>"ORDER BY $field"</code> case have to be handled manually!</li>
<li>of course an OOP implementation would be much more flexible, having neat distinct methods instead ugly "mode" variable as well other necessary methods. </li>
</ul>
<p>Yet it is good, safe and concise, no need to install a whole library.</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">function</span><span class="pln"> dbget</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="com">/*
  usage: dbget($mode, $query, $param1, $param2,...);
  $mode - "dimension" of result:
  0 - resource
  1 - scalar
  2 - row
  3 - array of rows
  */</span><span class="pln">
  $args </span><span class="pun">=</span><span class="pln"> func_get_args</span><span class="pun">();</span><span class="pln">
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">count</span><span class="pun">(</span><span class="pln">$args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    trigger_error</span><span class="pun">(</span><span class="str">"dbget: too few arguments"</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  $mode  </span><span class="pun">=</span><span class="pln"> array_shift</span><span class="pun">(</span><span class="pln">$args</span><span class="pun">);</span><span class="pln">
  $query </span><span class="pun">=</span><span class="pln"> array_shift</span><span class="pun">(</span><span class="pln">$args</span><span class="pun">);</span><span class="pln">
  $query </span><span class="pun">=</span><span class="pln"> str_replace</span><span class="pun">(</span><span class="str">"%s"</span><span class="pun">,</span><span class="str">"'%s'"</span><span class="pun">,</span><span class="pln">$query</span><span class="pun">);</span><span class="pln"> 

  </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$args </span><span class="kwd">as</span><span class="pln"> $key </span><span class="pun">=&gt;</span><span class="pln"> $val</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    $args</span><span class="pun">[</span><span class="pln">$key</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> mysql_real_escape_string</span><span class="pun">(</span><span class="pln">$val</span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  $query </span><span class="pun">=</span><span class="pln"> vsprintf</span><span class="pun">(</span><span class="pln">$query</span><span class="pun">,</span><span class="pln"> $args</span><span class="pun">);</span><span class="pln">
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">$query</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">

  $res </span><span class="pun">=</span><span class="pln"> mysql_query</span><span class="pun">(</span><span class="pln">$query</span><span class="pun">);</span><span class="pln">
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">$res</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    trigger_error</span><span class="pun">(</span><span class="str">"dbget: "</span><span class="pun">.</span><span class="pln">mysql_error</span><span class="pun">().</span><span class="str">" in "</span><span class="pun">.</span><span class="pln">$query</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$mode </span><span class="pun">===</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> $res</span><span class="pun">;</span><span class="pln">

  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$mode </span><span class="pun">===</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$row </span><span class="pun">=</span><span class="pln"> mysql_fetch_row</span><span class="pun">(</span><span class="pln">$res</span><span class="pun">))</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> $row</span><span class="pun">[</span><span class="lit">0</span><span class="pun">];</span><span class="pln">
    </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> NULL</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  $a </span><span class="pun">=</span><span class="pln"> array</span><span class="pun">();</span><span class="pln">
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$mode </span><span class="pun">===</span><span class="pln"> </span><span class="lit">2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$row </span><span class="pun">=</span><span class="pln"> mysql_fetch_assoc</span><span class="pun">(</span><span class="pln">$res</span><span class="pun">))</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> $row</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$mode </span><span class="pun">===</span><span class="pln"> </span><span class="lit">3</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pun">(</span><span class="pln">$row </span><span class="pun">=</span><span class="pln"> mysql_fetch_assoc</span><span class="pun">(</span><span class="pln">$res</span><span class="pun">))</span><span class="pln"> $a</span><span class="pun">[]=</span><span class="pln">$row</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  </span><span class="kwd">return</span><span class="pln"> $a</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="pun">?&gt;</span></code></pre>
<p>usage examples</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">$name </span><span class="pun">=</span><span class="pln"> dbget</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="str">"SELECT name FROM users WHERE id=%d"</span><span class="pun">,</span><span class="pln">$_GET</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">]);</span><span class="pln">
$news </span><span class="pun">=</span><span class="pln"> dbget</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="str">"SELECT * FROM news WHERE title LIKE %s LIMIT %d,%d"</span><span class="pun">,</span><span class="pln">
              </span><span class="str">"%$_GET[search]%"</span><span class="pun">,</span><span class="pln">$start</span><span class="pun">,</span><span class="pln">$per_page</span><span class="pun">);</span></code></pre>
<p>As it can be seen from the above examples, the main difference from all the codes ever posted in Stackoverflow, both safety and data retrieval routines are encapsulated in the function code. So, no manual binding, escaping/quoting or casting, as well as no manual data retrieval. </p>
<p>combined with other helper function</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">function</span><span class="pln"> dbSet</span><span class="pun">(</span><span class="pln">$fields</span><span class="pun">,</span><span class="pln">$source</span><span class="pun">=</span><span class="pln">array</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  $set </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">$source</span><span class="pun">)</span><span class="pln"> $source </span><span class="pun">=</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln">$_POST</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="pln">$fields </span><span class="kwd">as</span><span class="pln"> $field</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">isset</span><span class="pun">(</span><span class="pln">$source</span><span class="pun">[</span><span class="pln">$field</span><span class="pun">]))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      $set</span><span class="pun">.=</span><span class="str">"`$field`='"</span><span class="pun">.</span><span class="pln">mysql_real_escape_string</span><span class="pun">(</span><span class="pln">$source</span><span class="pun">[</span><span class="pln">$field</span><span class="pun">]).</span><span class="str">"', "</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  </span><span class="kwd">return</span><span class="pln"> substr</span><span class="pun">(</span><span class="pln">$set</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">2</span><span class="pun">);</span><span class="pln"> 
</span><span class="pun">}</span></code></pre>
<p>used like this</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">$fields </span><span class="pun">=</span><span class="pln"> explode</span><span class="pun">(</span><span class="str">" "</span><span class="pun">,</span><span class="str">"name surname lastname address zip phone regdate"</span><span class="pun">);</span><span class="pln">
$_POST</span><span class="pun">[</span><span class="str">'regdate'</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> $_POST</span><span class="pun">[</span><span class="str">'y'</span><span class="pun">].</span><span class="str">"-"</span><span class="pun">.</span><span class="pln">$_POST</span><span class="pun">[</span><span class="str">'m'</span><span class="pun">].</span><span class="str">"-"</span><span class="pun">.</span><span class="pln">$_POST</span><span class="pun">[</span><span class="str">'d'</span><span class="pun">];</span><span class="pln">
$sql </span><span class="pun">=</span><span class="pln"> </span><span class="str">"UPDATE $table SET "</span><span class="pun">.</span><span class="pln">dbSet</span><span class="pun">(</span><span class="pln">$fields</span><span class="pun">).</span><span class="str">", stamp=NOW() WHERE id=%d"</span><span class="pun">;</span><span class="pln">
$res </span><span class="pun">=</span><span class="pln"> dbget</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln">$sql</span><span class="pun">,</span><span class="pln"> $_POST</span><span class="pun">[</span><span class="str">'id'</span><span class="pun">]);</span><span class="pln">
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">$res</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  _503</span><span class="pun">;</span><span class="com">//calling generic 503 error function</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>it may cover almost every need, including the example case from the OP.</p>
</div></text><author><a href="/users/285587">Your Common Sense</a></author><comments/></answer></answers></post>