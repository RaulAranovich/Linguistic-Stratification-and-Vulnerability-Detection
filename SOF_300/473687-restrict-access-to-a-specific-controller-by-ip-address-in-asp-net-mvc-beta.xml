<?xml version="1.0" encoding="utf-8"?>
<post><title>security - Restrict access to a specific controller by IP address in ASP.NET MVC Beta - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I have an ASP.NET MVC project containing an AdminController class - giving me URls like <a href="http://myserver/admin/AddCustomer" rel="noreferrer">http://myserver/admin/AddCustomer</a>, <a href="http://myserver/Admin/ListCustomers" rel="noreferrer">http://myserver/Admin/ListCustomers</a>, etc.</p>
<p>I want to configure the server/app so that URIs containing <strong>/Admin</strong> are only accessible from the 192.168.0.0/24 network (i.e. our LAN)</p>
<p>I'd like to restrict this controller to only be accessible from certain IP addresses.</p>
<p>Under WebForms, /admin/ was a physical folder that I could restrict in IIS... but with MVC, of course, there's no physical folder. Is this achievable using web.config or attributes, or do I need to intercept the HTTP request to achieve this?</p>
</div></text><author><a href="/users/5017/dylan-beattie">Dylan Beattie</a></author><comments><comment><text><span class="comment-copy">A similar question had the answer you seek... <a href="http://stackoverflow.com/a/6108168/80161">stackoverflow.com/a/6108168/80161</a></span></text><author><a class="comment-user" href="/users/80161/nathan-hartley" title="1,947 reputation">Nathan Hartley</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>I know this is an old question, but I needed to have this functionality today so I implemented it and thought about posting it here.</p>
<p>Using the IPList class from here (<a href="http://www.codeproject.com/KB/IP/ipnumbers.aspx" rel="noreferrer">http://www.codeproject.com/KB/IP/ipnumbers.aspx</a>)</p>
<p><strong>The filter attribute FilterIPAttribute.cs:</strong></p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Collections</span><span class="pun">.</span><span class="typ">Generic</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Linq</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Web</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Web</span><span class="pun">.</span><span class="typ">Http</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Security</span><span class="pun">.</span><span class="typ">Principal</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">using</span><span class="pln"> </span><span class="typ">System</span><span class="pun">.</span><span class="typ">Configuration</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">namespace</span><span class="pln"> </span><span class="typ">Miscellaneous</span><span class="pun">.</span><span class="typ">Attributes</span><span class="pun">.</span><span class="typ">Controller</span><span class="pln">
</span><span class="pun">{</span><span class="pln">

    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Filter by IP address</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FilterIPAttribute</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">AuthorizeAttribute</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">

        </span><span class="com">#region Allowed</span><span class="pln">
        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Comma seperated string of allowable IPs. Example "10.2.5.41,192.168.0.22"</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;value&gt;&lt;/value&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">AllowedSingleIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Comma seperated string of allowable IPs with masks. Example "10.2.0.0;255.255.0.0,10.3.0.0;255.255.0.0"</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;value&gt;The masked I ps.&lt;/value&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">AllowedMaskedIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Gets or sets the configuration key for allowed single IPs</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;value&gt;The configuration key single I ps.&lt;/value&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">ConfigurationKeyAllowedSingleIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Gets or sets the configuration key allowed mmasked IPs</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;value&gt;The configuration key masked I ps.&lt;/value&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">ConfigurationKeyAllowedMaskedIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// List of allowed IPs</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="typ">IPList</span><span class="pln"> allowedIPListToCheck </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IPList</span><span class="pun">();</span><span class="pln">
        </span><span class="com">#endregion</span><span class="pln">

        </span><span class="com">#region Denied</span><span class="pln">
        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Comma seperated string of denied IPs. Example "10.2.5.41,192.168.0.22"</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;value&gt;&lt;/value&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">DeniedSingleIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Comma seperated string of denied IPs with masks. Example "10.2.0.0;255.255.0.0,10.3.0.0;255.255.0.0"</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;value&gt;The masked I ps.&lt;/value&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">DeniedMaskedIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">


        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Gets or sets the configuration key for denied single IPs</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;value&gt;The configuration key single I ps.&lt;/value&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">ConfigurationKeyDeniedSingleIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Gets or sets the configuration key for denied masked IPs</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;value&gt;The configuration key masked I ps.&lt;/value&gt;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">ConfigurationKeyDeniedMaskedIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// List of denied IPs</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="typ">IPList</span><span class="pln"> deniedIPListToCheck </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IPList</span><span class="pun">();</span><span class="pln">
        </span><span class="com">#endregion</span><span class="pln">


        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Determines whether access to the core framework is authorized.</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="actionContext"&gt;The HTTP context, which encapsulates all HTTP-specific information about an individual HTTP request.&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;returns&gt;</span><span class="pln">
        </span><span class="com">/// true if access is authorized; otherwise, false.</span><span class="pln">
        </span><span class="com">/// &lt;/returns&gt;</span><span class="pln">
        </span><span class="com">/// &lt;exception cref="T:System.ArgumentNullException"&gt;The &lt;paramref name="httpContext"/&gt; parameter is null.&lt;/exception&gt;</span><span class="pln">
        </span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsAuthorized</span><span class="pun">(</span><span class="typ">HttpActionContext</span><span class="pln"> actionContext</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">actionContext </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln">
                </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArgumentNullException</span><span class="pun">(</span><span class="str">"actionContext"</span><span class="pun">);</span><span class="pln">

            </span><span class="kwd">string</span><span class="pln"> userIpAddress </span><span class="pun">=</span><span class="pln"> </span><span class="pun">((</span><span class="typ">HttpContextWrapper</span><span class="pun">)</span><span class="pln">actionContext</span><span class="pun">.</span><span class="typ">Request</span><span class="pun">.</span><span class="typ">Properties</span><span class="pun">[</span><span class="str">"MS_HttpContext"</span><span class="pun">]).</span><span class="typ">Request</span><span class="pun">.</span><span class="typ">UserHostName</span><span class="pun">;</span><span class="pln">

            </span><span class="kwd">try</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Check that the IP is allowed to access</span><span class="pln">
                </span><span class="kwd">bool</span><span class="pln"> ipAllowed </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CheckAllowedIPs</span><span class="pun">(</span><span class="pln">userIpAddress</span><span class="pun">);</span><span class="pln">

                </span><span class="com">// Check that the IP is not denied to access</span><span class="pln">
                </span><span class="kwd">bool</span><span class="pln"> ipDenied </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CheckDeniedIPs</span><span class="pun">(</span><span class="pln">userIpAddress</span><span class="pun">);</span><span class="pln">    

                </span><span class="com">// Only allowed if allowed and not denied</span><span class="pln">
                </span><span class="kwd">bool</span><span class="pln"> finallyAllowed </span><span class="pun">=</span><span class="pln"> ipAllowed </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">!</span><span class="pln">ipDenied</span><span class="pun">;</span><span class="pln">

                </span><span class="kwd">return</span><span class="pln"> finallyAllowed</span><span class="pun">;</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
            </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Exception</span><span class="pln"> e</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Log the exception, probably something wrong with the configuration</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln"> </span><span class="com">// if there was an exception, then we return true</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Checks the allowed IPs.</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="userIpAddress"&gt;The user ip address.&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;returns&gt;&lt;/returns&gt;</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">CheckAllowedIPs</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> userIpAddress</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="com">// Populate the IPList with the Single IPs</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">AllowedSingleIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">SplitAndAddSingleIPs</span><span class="pun">(</span><span class="typ">AllowedSingleIPs</span><span class="pun">,</span><span class="pln"> allowedIPListToCheck</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="com">// Populate the IPList with the Masked IPs</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">AllowedMaskedIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">SplitAndAddMaskedIPs</span><span class="pun">(</span><span class="typ">AllowedMaskedIPs</span><span class="pun">,</span><span class="pln"> allowedIPListToCheck</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="com">// Check if there are more settings from the configuration (Web.config)</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">ConfigurationKeyAllowedSingleIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">string</span><span class="pln"> configurationAllowedAdminSingleIPs </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ConfigurationManager</span><span class="pun">.</span><span class="typ">AppSettings</span><span class="pun">[</span><span class="typ">ConfigurationKeyAllowedSingleIPs</span><span class="pun">];</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln">configurationAllowedAdminSingleIPs</span><span class="pun">))</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">SplitAndAddSingleIPs</span><span class="pun">(</span><span class="pln">configurationAllowedAdminSingleIPs</span><span class="pun">,</span><span class="pln"> allowedIPListToCheck</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">ConfigurationKeyAllowedMaskedIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">string</span><span class="pln"> configurationAllowedAdminMaskedIPs </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ConfigurationManager</span><span class="pun">.</span><span class="typ">AppSettings</span><span class="pun">[</span><span class="typ">ConfigurationKeyAllowedMaskedIPs</span><span class="pun">];</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln">configurationAllowedAdminMaskedIPs</span><span class="pun">))</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">SplitAndAddMaskedIPs</span><span class="pun">(</span><span class="pln">configurationAllowedAdminMaskedIPs</span><span class="pun">,</span><span class="pln"> allowedIPListToCheck</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="kwd">return</span><span class="pln"> allowedIPListToCheck</span><span class="pun">.</span><span class="typ">CheckNumber</span><span class="pun">(</span><span class="pln">userIpAddress</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Checks the denied IPs.</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="userIpAddress"&gt;The user ip address.&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;returns&gt;&lt;/returns&gt;</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">CheckDeniedIPs</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> userIpAddress</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="com">// Populate the IPList with the Single IPs</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">DeniedSingleIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">SplitAndAddSingleIPs</span><span class="pun">(</span><span class="typ">DeniedSingleIPs</span><span class="pun">,</span><span class="pln"> deniedIPListToCheck</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="com">// Populate the IPList with the Masked IPs</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">DeniedMaskedIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">SplitAndAddMaskedIPs</span><span class="pun">(</span><span class="typ">DeniedMaskedIPs</span><span class="pun">,</span><span class="pln"> deniedIPListToCheck</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="com">// Check if there are more settings from the configuration (Web.config)</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">ConfigurationKeyDeniedSingleIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">string</span><span class="pln"> configurationDeniedAdminSingleIPs </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ConfigurationManager</span><span class="pun">.</span><span class="typ">AppSettings</span><span class="pun">[</span><span class="typ">ConfigurationKeyDeniedSingleIPs</span><span class="pun">];</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln">configurationDeniedAdminSingleIPs</span><span class="pun">))</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">SplitAndAddSingleIPs</span><span class="pun">(</span><span class="pln">configurationDeniedAdminSingleIPs</span><span class="pun">,</span><span class="pln"> deniedIPListToCheck</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">ConfigurationKeyDeniedMaskedIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">string</span><span class="pln"> configurationDeniedAdminMaskedIPs </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ConfigurationManager</span><span class="pun">.</span><span class="typ">AppSettings</span><span class="pun">[</span><span class="typ">ConfigurationKeyDeniedMaskedIPs</span><span class="pun">];</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln">configurationDeniedAdminMaskedIPs</span><span class="pun">))</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">SplitAndAddMaskedIPs</span><span class="pun">(</span><span class="pln">configurationDeniedAdminMaskedIPs</span><span class="pun">,</span><span class="pln"> deniedIPListToCheck</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="kwd">return</span><span class="pln"> deniedIPListToCheck</span><span class="pun">.</span><span class="typ">CheckNumber</span><span class="pun">(</span><span class="pln">userIpAddress</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Splits the incoming ip string of the format "IP,IP" example "10.2.0.0,10.3.0.0" and adds the result to the IPList</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="ips"&gt;The ips.&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="list"&gt;The list.&lt;/param&gt;</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">SplitAndAddSingleIPs</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> ips</span><span class="pun">,</span><span class="typ">IPList</span><span class="pln"> list</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">var</span><span class="pln"> splitSingleIPs </span><span class="pun">=</span><span class="pln"> ips</span><span class="pun">.</span><span class="typ">Split</span><span class="pun">(</span><span class="str">','</span><span class="pun">);</span><span class="pln">
            </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> ip </span><span class="kwd">in</span><span class="pln"> splitSingleIPs</span><span class="pun">)</span><span class="pln">
                list</span><span class="pun">.</span><span class="typ">Add</span><span class="pun">(</span><span class="pln">ip</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
        </span><span class="com">/// Splits the incoming ip string of the format "IP;MASK,IP;MASK" example "10.2.0.0;255.255.0.0,10.3.0.0;255.255.0.0" and adds the result to the IPList</span><span class="pln">
        </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="ips"&gt;The ips.&lt;/param&gt;</span><span class="pln">
        </span><span class="com">/// &lt;param name="list"&gt;The list.&lt;/param&gt;</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">SplitAndAddMaskedIPs</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> ips</span><span class="pun">,</span><span class="pln"> </span><span class="typ">IPList</span><span class="pln"> list</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">var</span><span class="pln"> splitMaskedIPs </span><span class="pun">=</span><span class="pln"> ips</span><span class="pun">.</span><span class="typ">Split</span><span class="pun">(</span><span class="str">','</span><span class="pun">);</span><span class="pln">
            </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> maskedIp </span><span class="kwd">in</span><span class="pln"> splitMaskedIPs</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">var</span><span class="pln"> ipAndMask </span><span class="pun">=</span><span class="pln"> maskedIp</span><span class="pun">.</span><span class="typ">Split</span><span class="pun">(</span><span class="str">';'</span><span class="pun">);</span><span class="pln">
                list</span><span class="pun">.</span><span class="typ">Add</span><span class="pun">(</span><span class="pln">ipAndMask</span><span class="pun">[</span><span class="lit">0</span><span class="pun">],</span><span class="pln"> ipAndMask</span><span class="pun">[</span><span class="lit">1</span><span class="pun">]);</span><span class="pln"> </span><span class="com">// IP;MASK</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">OnAuthorization</span><span class="pun">(</span><span class="typ">AuthorizationContext</span><span class="pln"> filterContext</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">base</span><span class="pun">.</span><span class="typ">OnAuthorization</span><span class="pun">(</span><span class="pln">filterContext</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p><strong>Example usage:</strong></p>
<p><strong>1. Directly specifying the IPs in the
    code</strong></p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">    </span><span class="pun">[</span><span class="typ">FilterIP</span><span class="pun">(</span><span class="pln">
         </span><span class="typ">AllowedSingleIPs</span><span class="pun">=</span><span class="str">"10.2.5.55,192.168.2.2"</span><span class="pun">,</span><span class="pln">
         </span><span class="typ">AllowedMaskedIPs</span><span class="pun">=</span><span class="str">"10.2.0.0;255.255.0.0,192.168.2.0;255.255.255.0"</span><span class="pln">
    </span><span class="pun">)]</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HomeController</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// Some code here</span><span class="pln">
    </span><span class="pun">}</span></code></pre>
<p><strong>2. Or, Loading the configuration from the Web.config</strong></p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">    </span><span class="pun">[</span><span class="typ">FilterIP</span><span class="pun">(</span><span class="pln">
         </span><span class="typ">ConfigurationKeyAllowedSingleIPs</span><span class="pun">=</span><span class="str">"AllowedAdminSingleIPs"</span><span class="pun">,</span><span class="pln">
         </span><span class="typ">ConfigurationKeyAllowedMaskedIPs</span><span class="pun">=</span><span class="str">"AllowedAdminMaskedIPs"</span><span class="pun">,</span><span class="pln">
         </span><span class="typ">ConfigurationKeyDeniedSingleIPs</span><span class="pun">=</span><span class="str">"DeniedAdminSingleIPs"</span><span class="pun">,</span><span class="pln">
         </span><span class="typ">ConfigurationKeyDeniedMaskedIPs</span><span class="pun">=</span><span class="str">"DeniedAdminMaskedIPs"</span><span class="pln">
    </span><span class="pun">)]</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HomeController</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// Some code here</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">


</span><span class="str">&lt;configuration&gt;</span><span class="pln">
</span><span class="str">&lt;appSettings&gt;</span><span class="pln">
    </span><span class="pun">&lt;</span><span class="pln">add key</span><span class="pun">=</span><span class="str">"AllowedAdminSingleIPs"</span><span class="pln"> value</span><span class="pun">=</span><span class="str">"localhost,127.0.0.1"</span><span class="pun">/&gt;</span><span class="pln"> </span><span class="pun">&lt;!--</span><span class="pln"> </span><span class="typ">Example</span><span class="pln"> </span><span class="str">"10.2.80.21,192.168.2.2"</span><span class="pln"> </span><span class="pun">--&gt;</span><span class="pln">
    </span><span class="pun">&lt;</span><span class="pln">add key</span><span class="pun">=</span><span class="str">"AllowedAdminMaskedIPs"</span><span class="pln"> value</span><span class="pun">=</span><span class="str">"10.2.0.0;255.255.0.0"</span><span class="pun">/&gt;</span><span class="pln"> </span><span class="pun">&lt;!--</span><span class="pln"> </span><span class="typ">Example</span><span class="pln"> </span><span class="str">"10.2.0.0;255.255.0.0,192.168.2.0;255.255.255.0"</span><span class="pln"> </span><span class="pun">--&gt;</span><span class="pln">
    </span><span class="pun">&lt;</span><span class="pln">add key</span><span class="pun">=</span><span class="str">"DeniedAdminSingleIPs"</span><span class="pln"> value</span><span class="pun">=</span><span class="str">""</span><span class="pun">/&gt;</span><span class="pln">    </span><span class="pun">&lt;!--</span><span class="pln"> </span><span class="typ">Example</span><span class="pln"> </span><span class="str">"10.2.80.21,192.168.2.2"</span><span class="pln"> </span><span class="pun">--&gt;</span><span class="pln">
    </span><span class="pun">&lt;</span><span class="pln">add key</span><span class="pun">=</span><span class="str">"DeniedAdminMaskedIPs"</span><span class="pln"> value</span><span class="pun">=</span><span class="str">""</span><span class="pun">/&gt;</span><span class="pln">    </span><span class="pun">&lt;!--</span><span class="pln"> </span><span class="typ">Example</span><span class="pln"> </span><span class="str">"10.2.0.0;255.255.0.0,192.168.2.0;255.255.255.0"</span><span class="pln"> </span><span class="pun">--&gt;</span><span class="pln">
</span><span class="pun">&lt;/</span><span class="pln">appSettings</span><span class="pun">&gt;</span><span class="pln">
</span><span class="pun">&lt;/</span><span class="pln">configuration</span><span class="pun">&gt;</span></code></pre>
</div></text><author><a href="/users/47582/sabbour">sabbour</a></author><comments><comment><text><span class="comment-copy">Brilliant cheers. I have also ported your to ASP.NET Web API here: <a href="https://gist.github.com/2028849" rel="nofollow noreferrer">gist.github.com/2028849</a>. (IIS hosted only as it still requires HttpContext.Current. I'm not sure how to get the originating client IP from HttpRequestMessage.)</span></text><author><a class="comment-user" href="/users/91551/richard-dingwall" title="1,818 reputation">Richard Dingwall</a></author></comment><comment><text><span class="comment-copy">This doesn't seem to work with IPv6 addresses, which is a problem because in a lot of configurations the localhost ip address comes back as ::1</span></text><author><a class="comment-user" href="/users/61164/erik-funkenbusch" title="73,479 reputation">Erik Funkenbusch</a></author></comment><comment><text><span class="comment-copy">I know this is old, but do I have to add something somewhere to get this to work, I add the annotation to controllers I want under IP protection like in you example usage, and it does nothing.  Any IP can still execte the methods</span></text><author><a class="comment-user" href="/users/707088/kyle-gobel" title="2,634 reputation">Kyle Gobel</a></author></comment><comment><text><span class="comment-copy">@MystereMan - How can it be extended to work with IPv6 addresses?</span></text><author><a class="comment-user" href="/users/33690/xaisoft" title="17,752 reputation">Xaisoft</a></author></comment><comment><text><span class="comment-copy">I've updated the answer to work again. It didn't work for me (MVC5). Note that AuthorizeAttribute now comes from the System.Web.Http namespace and not the System.Web.Mvc namespace. The AuthorizeCore function was changed to IsAuthorized because of this.</span></text><author><a class="comment-user" href="/users/3710120/christiaan-maks" title="522 reputation">Christiaan Maks</a></author></comment><comment><text><span class="comment-copy">Only thing I don't like about this implementation is if you have Actions with the [AllowAnonymous] attribute (like login page), this class does not restrict access.</span></text><author><a class="comment-user" href="/users/127175/josh-mouch" title="2,123 reputation">Josh Mouch</a></author></comment><comment><text><span class="comment-copy">@JoshMouch you can always implement it as an <a href="http://www.asp.net/mvc/overview/older-versions/hands-on-labs/aspnet-mvc-4-custom-action-filters" rel="nofollow noreferrer">Action Filter</a></span></text><author><a class="comment-user" href="/users/47582/sabbour" title="2,653 reputation">sabbour</a></author></comment><comment><text><span class="comment-copy">This updated answer doesn't work with MVC4 (only MVC5), but luckily the previous version is still stored.</span></text><author><a class="comment-user" href="/users/1234547/george-mckibbin" title="542 reputation">George McKibbin</a></author></comment><comment><text><span class="comment-copy">Is your IPList implementation a list of strings?  Can you add it in?</span></text><author><a class="comment-user" href="/users/312317/prisoner-zero" title="5,619 reputation">Prisoner ZERO</a></author></comment><comment><text><span class="comment-copy">@PrisonerZERO No. IPList is a class. Follow the <a href="http://www.codeproject.com/KB/IP/ipnumbers.aspx" rel="nofollow noreferrer">link</a> to codeproject.</span></text><author><a class="comment-user" href="/users/3620572/roland" title="106 reputation">roland</a></author></comment><comment><text><span class="comment-copy">Great solution but shouldn't the last functions argument be (of OnAuthorization) a: HttpActionContext instead of AuthorizationContext ?</span></text><author><a class="comment-user" href="/users/3563554/thealon" title="1,652 reputation">Thealon</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>You should have access to the UserHostAddress in the Request object in your controller to do the restriction on.  I'd suggest that you may want to extend the AuthorizeAttribute and add your IP address restrictions on it so that you can simply decorate any methods or controllers that need this protection.</p>
</div></text><author><a href="/users/12950/tvanfosson">tvanfosson</a></author><comments><comment><text><span class="comment-copy">Here's a handy IP class that can help with the filtering: <a href="http://www.codeproject.com/KB/IP/ipnumbers.aspx" rel="nofollow noreferrer">codeproject.com/KB/IP/ipnumbers.aspx</a></span></text><author><a class="comment-user" href="/users/27938/oskar-austegard" title="3,070 reputation">Oskar Austegard</a></author></comment><comment><text><span class="comment-copy">@tvanfosson How secure is this to restrict by IP? What I would like to know is if it is easy for someone to spoof an IP to bypass this security feature.</span></text><author><a class="comment-user" href="/users/1160036/despertar" title="12,657 reputation">Despertar</a></author></comment><comment><text><span class="comment-copy">@Despertar Since the response will be sent back to the IP address from which the request is made, if the machine owning the IP address is under your control and secure, then I think it works pretty well. It's probably even more secure when used in conjunction with local (non-routeable) addresses.  I would be less likely to use this to secure access to sensitive data to a system outside my control.  In those cases I'd probably use it in conjunction with a username/password or API key, as appropriate.</span></text><author><a class="comment-user" href="/users/12950/tvanfosson" title="371,951 reputation">tvanfosson</a></author></comment><comment><text><span class="comment-copy">shall i use web.config to allow or exclude ip address using  <a href="https://www.stokia.com/support/misc/web-config-ip-address-restriction.aspx" rel="nofollow noreferrer">this</a>, <a href="http://stackoverflow.com/a/29368702/2218697">here</a> is my problem, do you have any idea ?</span></text><author><a class="comment-user" href="/users/2218697/stom" title="1,176 reputation">stom</a></author></comment><comment><text><span class="comment-copy">@storm the web config probably won't help in this case because the authorization attribute will restrict access even if the web config allows it. Ideally you'd only be sharing the public page.  It seems likely that you've gotten something wrong with the set up and it's sharing the url of your checkout page.  Have you set up the Facebook meta tags properly - particularly og:url? <a href="https://developers.facebook.com/docs/sharing/best-practices" rel="nofollow noreferrer">developers.facebook.com/docs/sharing/best-practices</a></span></text><author><a class="comment-user" href="/users/12950/tvanfosson" title="371,951 reputation">tvanfosson</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I needed a solution for this problem in MVC4 that could handle IPv6 and IP ranges. Also, I needed to use white and black-lists for authorization but also use a regular authorization process when the IP was neither.</p>
<p>This is the solution I came to after taking a lot from @sabbour and @Richard Szalay(<a href="http://stackoverflow.com/questions/2138706/how-to-check-a-input-ip-fall-in-a-specific-ip-range" title="How to check a input IP fall in a specific IP range">How to check a input IP fall in a specific IP range</a>) awesome posts so I post it back here for whomever it may help.</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MagniAuthorizeAttribute</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">FilterAttribute</span><span class="pun">,</span><span class="pln"> </span><span class="typ">IAuthorizationFilter</span><span class="pln">
</span><span class="pun">{</span><span class="pln">

    </span><span class="com">#region Allowed</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsPublic</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Comma seperated string of allowable IPs. Example "10.2.5.41,192.168.0.22"</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;value&gt;&lt;/value&gt;        </span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">AllowedSingleIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Comma seperated string of allowable IPs with masks. Example "10.2.0.0;255.255.0.0,10.3.0.0;255.255.0.0"</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;value&gt;The masked I ps.&lt;/value&gt;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">AllowedIPRanges</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Gets or sets the configuration key for allowed single IPs</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;value&gt;The configuration key single I ps.&lt;/value&gt;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">ConfigurationKeyAllowedSingleIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Gets or sets the configuration key allowed mmasked IPs</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;value&gt;The configuration key masked I ps.&lt;/value&gt;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">ConfigurationKeyAllowedMaskedIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

    </span><span class="com">#endregion</span><span class="pln">

    </span><span class="com">#region Denied</span><span class="pln">
    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Comma seperated string of denied IPs. Example "10.2.5.41,192.168.0.22"</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;value&gt;&lt;/value&gt;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">DeniedSingleIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Comma seperated string of denied IPs with masks. Example "10.2.0.0;255.255.0.0,10.3.0.0;255.255.0.0"</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;value&gt;The masked I ps.&lt;/value&gt;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">DeniedIPRanges</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">


    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Gets or sets the configuration key for denied single IPs</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;value&gt;The configuration key single I ps.&lt;/value&gt;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">ConfigurationKeyDeniedSingleIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Gets or sets the configuration key for denied masked IPs</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;value&gt;The configuration key masked I ps.&lt;/value&gt;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">ConfigurationKeyDeniedMaskedIPs</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

    </span><span class="com">#endregion</span><span class="pln">


    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Checks the allowed IPs.</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;param name="userIpAddress"&gt;The user ip address.&lt;/param&gt;</span><span class="pln">
    </span><span class="com">/// &lt;returns&gt;&lt;/returns&gt;</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">CheckAllowedIPs</span><span class="pun">(</span><span class="typ">IPAddress</span><span class="pln"> userIpAddress</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">IPAddress</span><span class="pun">&gt;</span><span class="pln"> allowedIPsToCheck </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">IPAddress</span><span class="pun">&gt;();</span><span class="pln">
        </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">IPAddressRange</span><span class="pun">&gt;</span><span class="pln"> allowedIPRangesToCheck </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">IPAddressRange</span><span class="pun">&gt;();</span><span class="pln">

        </span><span class="com">// Populate the IPList with the Single IPs</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">AllowedSingleIPs</span><span class="pun">))</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">SplitAndAddSingleIPs</span><span class="pun">(</span><span class="typ">AllowedSingleIPs</span><span class="pun">,</span><span class="pln"> allowedIPsToCheck</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Populate the IPList with the Masked IPs</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">AllowedIPRanges</span><span class="pun">))</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">SplitAndAddIPRanges</span><span class="pun">(</span><span class="typ">AllowedIPRanges</span><span class="pun">,</span><span class="pln"> allowedIPRangesToCheck</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Check if there are more settings from the configuration (Web.config)</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">ConfigurationKeyAllowedSingleIPs</span><span class="pun">))</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">string</span><span class="pln"> configurationAllowedAdminSingleIPs </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ConfigurationManager</span><span class="pun">.</span><span class="typ">AppSettings</span><span class="pun">[</span><span class="typ">ConfigurationKeyAllowedSingleIPs</span><span class="pun">];</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln">configurationAllowedAdminSingleIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">SplitAndAddSingleIPs</span><span class="pun">(</span><span class="pln">configurationAllowedAdminSingleIPs</span><span class="pun">,</span><span class="pln"> allowedIPsToCheck</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">ConfigurationKeyAllowedMaskedIPs</span><span class="pun">))</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">string</span><span class="pln"> configurationAllowedAdminMaskedIPs </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ConfigurationManager</span><span class="pun">.</span><span class="typ">AppSettings</span><span class="pun">[</span><span class="typ">ConfigurationKeyAllowedMaskedIPs</span><span class="pun">];</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln">configurationAllowedAdminMaskedIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">SplitAndAddIPRanges</span><span class="pun">(</span><span class="pln">configurationAllowedAdminMaskedIPs</span><span class="pun">,</span><span class="pln"> allowedIPRangesToCheck</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">return</span><span class="pln"> allowedIPsToCheck</span><span class="pun">.</span><span class="typ">Any</span><span class="pun">(</span><span class="pln">a </span><span class="pun">=&gt;</span><span class="pln"> a</span><span class="pun">.</span><span class="typ">Equals</span><span class="pun">(</span><span class="pln">userIpAddress</span><span class="pun">))</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> allowedIPRangesToCheck</span><span class="pun">.</span><span class="typ">Any</span><span class="pun">(</span><span class="pln">a </span><span class="pun">=&gt;</span><span class="pln"> a</span><span class="pun">.</span><span class="typ">IsInRange</span><span class="pun">(</span><span class="pln">userIpAddress</span><span class="pun">));</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Checks the denied IPs.</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;param name="userIpAddress"&gt;The user ip address.&lt;/param&gt;</span><span class="pln">
    </span><span class="com">/// &lt;returns&gt;&lt;/returns&gt;</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">CheckDeniedIPs</span><span class="pun">(</span><span class="typ">IPAddress</span><span class="pln"> userIpAddress</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">IPAddress</span><span class="pun">&gt;</span><span class="pln"> deniedIPsToCheck </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">IPAddress</span><span class="pun">&gt;();</span><span class="pln">
        </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">IPAddressRange</span><span class="pun">&gt;</span><span class="pln"> deniedIPRangesToCheck </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">IPAddressRange</span><span class="pun">&gt;();</span><span class="pln">

        </span><span class="com">// Populate the IPList with the Single IPs</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">DeniedSingleIPs</span><span class="pun">))</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">SplitAndAddSingleIPs</span><span class="pun">(</span><span class="typ">DeniedSingleIPs</span><span class="pun">,</span><span class="pln"> deniedIPsToCheck</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Populate the IPList with the Masked IPs</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">DeniedIPRanges</span><span class="pun">))</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">SplitAndAddIPRanges</span><span class="pun">(</span><span class="typ">DeniedIPRanges</span><span class="pun">,</span><span class="pln"> deniedIPRangesToCheck</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// Check if there are more settings from the configuration (Web.config)</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">ConfigurationKeyDeniedSingleIPs</span><span class="pun">))</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">string</span><span class="pln"> configurationDeniedAdminSingleIPs </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ConfigurationManager</span><span class="pun">.</span><span class="typ">AppSettings</span><span class="pun">[</span><span class="typ">ConfigurationKeyDeniedSingleIPs</span><span class="pun">];</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln">configurationDeniedAdminSingleIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">SplitAndAddSingleIPs</span><span class="pun">(</span><span class="pln">configurationDeniedAdminSingleIPs</span><span class="pun">,</span><span class="pln"> deniedIPsToCheck</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="typ">ConfigurationKeyDeniedMaskedIPs</span><span class="pun">))</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">string</span><span class="pln"> configurationDeniedAdminMaskedIPs </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ConfigurationManager</span><span class="pun">.</span><span class="typ">AppSettings</span><span class="pun">[</span><span class="typ">ConfigurationKeyDeniedMaskedIPs</span><span class="pun">];</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="kwd">string</span><span class="pun">.</span><span class="typ">IsNullOrEmpty</span><span class="pun">(</span><span class="pln">configurationDeniedAdminMaskedIPs</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">SplitAndAddIPRanges</span><span class="pun">(</span><span class="pln">configurationDeniedAdminMaskedIPs</span><span class="pun">,</span><span class="pln"> deniedIPRangesToCheck</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">return</span><span class="pln"> deniedIPsToCheck</span><span class="pun">.</span><span class="typ">Any</span><span class="pun">(</span><span class="pln">a </span><span class="pun">=&gt;</span><span class="pln"> a</span><span class="pun">.</span><span class="typ">Equals</span><span class="pun">(</span><span class="pln">userIpAddress</span><span class="pun">))</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> deniedIPRangesToCheck</span><span class="pun">.</span><span class="typ">Any</span><span class="pun">(</span><span class="pln">a </span><span class="pun">=&gt;</span><span class="pln"> a</span><span class="pun">.</span><span class="typ">IsInRange</span><span class="pun">(</span><span class="pln">userIpAddress</span><span class="pun">));</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Splits the incoming ip string of the format "IP,IP" example "10.2.0.0,10.3.0.0" and adds the result to the IPAddress list</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;param name="ips"&gt;The ips.&lt;/param&gt;</span><span class="pln">
    </span><span class="com">/// &lt;param name="list"&gt;The list.&lt;/param&gt;</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">SplitAndAddSingleIPs</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> ips</span><span class="pun">,</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">IPAddress</span><span class="pun">&gt;</span><span class="pln"> list</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">var</span><span class="pln"> splitSingleIPs </span><span class="pun">=</span><span class="pln"> ips</span><span class="pun">.</span><span class="typ">Split</span><span class="pun">(</span><span class="str">','</span><span class="pun">);</span><span class="pln">
        </span><span class="typ">IPAddress</span><span class="pln"> ip</span><span class="pun">;</span><span class="pln">

        </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> ipString </span><span class="kwd">in</span><span class="pln"> splitSingleIPs</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pun">(</span><span class="typ">IPAddress</span><span class="pun">.</span><span class="typ">TryParse</span><span class="pun">(</span><span class="pln">ipString</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">out</span><span class="pln"> ip</span><span class="pun">))</span><span class="pln">
                list</span><span class="pun">.</span><span class="typ">Add</span><span class="pun">(</span><span class="pln">ip</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="com">/// &lt;summary&gt;</span><span class="pln">
    </span><span class="com">/// Splits the incoming ip ranges string of the format "IP-IP,IP-IP" example "10.2.0.0-10.2.255.255,10.3.0.0-10.3.255.255" and adds the result to the IPAddressRange list</span><span class="pln">
    </span><span class="com">/// &lt;/summary&gt;</span><span class="pln">
    </span><span class="com">/// &lt;param name="ips"&gt;The ips.&lt;/param&gt;</span><span class="pln">
    </span><span class="com">/// &lt;param name="list"&gt;The list.&lt;/param&gt;</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">SplitAndAddIPRanges</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> ips</span><span class="pun">,</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">IPAddressRange</span><span class="pun">&gt;</span><span class="pln"> list</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">var</span><span class="pln"> splitMaskedIPs </span><span class="pun">=</span><span class="pln"> ips</span><span class="pun">.</span><span class="typ">Split</span><span class="pun">(</span><span class="str">','</span><span class="pun">);</span><span class="pln">
        </span><span class="typ">IPAddress</span><span class="pln"> lowerIp</span><span class="pun">;</span><span class="pln">
        </span><span class="typ">IPAddress</span><span class="pln"> upperIp</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> maskedIp </span><span class="kwd">in</span><span class="pln"> splitMaskedIPs</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">var</span><span class="pln"> ipRange </span><span class="pun">=</span><span class="pln"> maskedIp</span><span class="pun">.</span><span class="typ">Split</span><span class="pun">(</span><span class="str">'-'</span><span class="pun">);</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IPAddress</span><span class="pun">.</span><span class="typ">TryParse</span><span class="pun">(</span><span class="pln">ipRange</span><span class="pun">[</span><span class="lit">0</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">out</span><span class="pln"> lowerIp</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="typ">IPAddress</span><span class="pun">.</span><span class="typ">TryParse</span><span class="pun">(</span><span class="pln">ipRange</span><span class="pun">[</span><span class="lit">1</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">out</span><span class="pln"> upperIp</span><span class="pun">))</span><span class="pln">
                list</span><span class="pun">.</span><span class="typ">Add</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IPAddressRange</span><span class="pun">(</span><span class="pln">lowerIp</span><span class="pun">,</span><span class="pln"> upperIp</span><span class="pun">));</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">HandleUnauthorizedRequest</span><span class="pun">(</span><span class="typ">AuthorizationContext</span><span class="pln"> context</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        context</span><span class="pun">.</span><span class="typ">Result</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">RedirectToRouteResult</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">RouteValueDictionary</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="str">"Controller"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Home"</span><span class="pln"> </span><span class="pun">},</span><span class="pln">
                                                                                    </span><span class="pun">{</span><span class="pln"> </span><span class="str">"Action"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Login"</span><span class="pln"> </span><span class="pun">},</span><span class="pln">
                                                                                    </span><span class="pun">{</span><span class="pln"> </span><span class="str">"OriginalURL"</span><span class="pun">,</span><span class="pln"> context</span><span class="pun">.</span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Request</span><span class="pun">.</span><span class="typ">Url</span><span class="pun">.</span><span class="typ">AbsoluteUri</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="pun">});</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">AuthorizeCore</span><span class="pun">(</span><span class="typ">AuthorizationContext</span><span class="pln"> context</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">try</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">string</span><span class="pln"> userIPString </span><span class="pun">=</span><span class="pln"> context</span><span class="pun">.</span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Request</span><span class="pun">.</span><span class="typ">UserHostName</span><span class="pun">;</span><span class="pln">
            </span><span class="typ">IPAddress</span><span class="pln"> userIPAddress </span><span class="pun">=</span><span class="pln"> </span><span class="typ">IPAddress</span><span class="pun">.</span><span class="typ">Parse</span><span class="pun">(</span><span class="pln">userIPString</span><span class="pun">);</span><span class="pln">

            </span><span class="com">// Check that the IP is allowed to access</span><span class="pln">
            </span><span class="kwd">bool</span><span class="pun">?</span><span class="pln"> ipAllowed </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CheckAllowedIPs</span><span class="pun">(</span><span class="pln">userIPAddress</span><span class="pun">)</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">bool</span><span class="pun">?)</span><span class="kwd">null</span><span class="pun">;</span><span class="pln">

            </span><span class="com">// Check that the IP is not denied to access</span><span class="pln">
            ipAllowed </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CheckDeniedIPs</span><span class="pun">(</span><span class="pln">userIPAddress</span><span class="pun">)</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> </span><span class="kwd">false</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> ipAllowed</span><span class="pun">;</span><span class="pln">

            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">ipAllowed</span><span class="pun">.</span><span class="typ">HasValue</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">return</span><span class="pln"> ipAllowed</span><span class="pun">.</span><span class="typ">Value</span><span class="pun">;</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="kwd">var</span><span class="pln"> serverSession </span><span class="pun">=</span><span class="pln"> context</span><span class="pun">.</span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Session</span><span class="pun">;</span><span class="pln">

            </span><span class="typ">UserSession</span><span class="pln"> session </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">

            </span><span class="com">//usersession in server session</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">serverSession</span><span class="pun">[</span><span class="typ">Settings</span><span class="pun">.</span><span class="typ">HttpContextUserSession</span><span class="pun">]</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                session </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">UserSession</span><span class="pun">)</span><span class="pln">serverSession</span><span class="pun">[</span><span class="typ">Settings</span><span class="pun">.</span><span class="typ">HttpContextUserSession</span><span class="pun">];</span><span class="pln">
                </span><span class="typ">Trace</span><span class="pun">.</span><span class="typ">TraceInformation</span><span class="pun">(</span><span class="pln">$</span><span class="str">"[{MethodBase.GetCurrentMethod().Name}] UserId:"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> session</span><span class="pun">.</span><span class="typ">UserId</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">". ClientId: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> session</span><span class="pun">.</span><span class="typ">ClientId</span><span class="pun">);</span><span class="pln">
                </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

            </span><span class="com">//usersession in database from cookie</span><span class="pln">
            session </span><span class="pun">=</span><span class="pln"> </span><span class="typ">UserSession</span><span class="pun">.</span><span class="typ">GetSession</span><span class="pun">(</span><span class="pln">context</span><span class="pun">.</span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Request</span><span class="pun">.</span><span class="typ">Cookies</span><span class="pun">.</span><span class="typ">Get</span><span class="pun">(</span><span class="str">"sessionId"</span><span class="pun">).</span><span class="typ">Value</span><span class="pun">);</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">session </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Trace</span><span class="pun">.</span><span class="typ">TraceInformation</span><span class="pun">(</span><span class="pln">$</span><span class="str">"[{MethodBase.GetCurrentMethod().Name}] Session found for cookie {context.HttpContext.Request.Cookies.Get("</span><span class="pln">sessionId</span><span class="str">").Value}"</span><span class="pun">);</span><span class="pln">
                serverSession</span><span class="pun">[</span><span class="typ">Settings</span><span class="pun">.</span><span class="typ">HttpContextUserSession</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> session</span><span class="pun">;</span><span class="pln">
                </span><span class="typ">Trace</span><span class="pun">.</span><span class="typ">TraceInformation</span><span class="pun">(</span><span class="pln">$</span><span class="str">"[{MethodBase.GetCurrentMethod().Name}] UserId:"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> session</span><span class="pun">.</span><span class="typ">UserId</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">". ClientId: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> session</span><span class="pun">.</span><span class="typ">ClientId</span><span class="pun">);</span><span class="pln">

                </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
            </span><span class="kwd">else</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Trace</span><span class="pun">.</span><span class="typ">TraceInformation</span><span class="pun">(</span><span class="pln">$</span><span class="str">"[{MethodBase.GetCurrentMethod().Name}] No session found for cookie {serverSession["</span><span class="pln">cookie</span><span class="str">"]}"</span><span class="pun">);</span><span class="pln">
                </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">

        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Exception</span><span class="pln"> ex</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">Trace</span><span class="pun">.</span><span class="typ">TraceError</span><span class="pun">(</span><span class="pln">$</span><span class="str">"[{MethodBase.GetCurrentMethod().Name}] exception: {ex.Message} - trace {ex.StackTrace}"</span><span class="pun">);</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">OnAuthorization</span><span class="pun">(</span><span class="typ">AuthorizationContext</span><span class="pln"> actionContext</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IsPublic</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">false</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="typ">AuthorizeCore</span><span class="pun">(</span><span class="pln">actionContext</span><span class="pun">)</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">HandleUnauthorizedRequest</span><span class="pun">(</span><span class="pln">actionContext</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/842957/jorge-rodrigues-dos-santos">Jorge Rodrigues dos Santos</a></author><comments/></answer></answers></post>