<?xml version="1.0" encoding="utf-8"?>
<post><title>mongodb - What security mechanisms does Meteor have? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>We all know that Meteor offers the miniMongo driver which seamlessly allows the client to access the persistent layer (MongoDB).</p>
<p>If any client can access the persistent API how does one secure his application?</p>
<p>What are the security mechanisms that Meteor provides and in what context should they be used?</p>
</div></text><author><a href="/users/258689/olivier-refalo">Olivier Refalo</a></author><comments><comment><text><span class="comment-copy">I love that this is being addressed already, but they really should have mentioned this in the video. I think pretty much any web developer watching it will have this question on their mind as of 10 seconds in until the end of it, and just feel annoyed that for such an awesome product they APPEAR to be ignoring the obvious security problem entirely.</span></text><author><a class="comment-user" href="/users/490321/naatan" title="1,835 reputation">Naatan</a></author></comment><comment><text><span class="comment-copy">Meteor 0.5.0 added user authentication <a href="http://meteor.com/blog/2012/10/17/meteor-050-authentication-user-accounts-new-screencast" rel="nofollow noreferrer">meteor.com/blog/2012/10/17/…</a></span></text><author><a class="comment-user" href="/users/247200/hipertracker" title="1,900 reputation">hipertracker</a></author></comment><comment><text><span class="comment-copy">yep, plz read the answers.</span></text><author><a class="comment-user owner" href="/users/258689/olivier-refalo" title="25,586 reputation">Olivier Refalo</a></author></comment><comment><text><span class="comment-copy">You could reword this a bit to get it re-opened.  Perhaps "What security measures should I take?" or "What security options are available?"</span></text><author><a class="comment-user" href="/users/99777/joeytwiddle" title="10,534 reputation">joeytwiddle</a></author></comment><comment><text><span class="comment-copy">Opinion based? Wat? I thot this was a reopen audit since it is obviously not opinion based.</span></text><author><a class="comment-user" href="/users/2371861/bjb568" title="6,228 reputation">bjb568</a></author></comment><comment><text><span class="comment-copy">I kind of agree, the opinion based ruling is out of context - answers are based on true facts.</span></text><author><a class="comment-user owner" href="/users/258689/olivier-refalo" title="25,586 reputation">Olivier Refalo</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>When you create a app using meteor command, by default the app includes the following packages:</p>
<ul>
<li>AUTOPUBLISH   </li>
<li>INSECURE</li>
</ul>
<p>Together, these mimic the effect of each client having full read/write access to the server's database. These are useful prototyping tools (development purposes only), but typically not appropriate for production applications. When you're ready for production release, just remove these packages.</p>
<p>To add more, Meteor supports <a href="http://docs.meteor.com/#accounts_api">Facebook / Twitter / and Much More</a> packages to handle authentication, and the coolest is the <a href="http://docs.meteor.com/#accountsui">Accounts-UI</a> package</p>
</div></text><author><a href="/users/593385/murali-ramakrishnan">Murali Ramakrishnan</a></author><comments><comment><text><span class="comment-copy">Correct as of meteor 0.5</span></text><author><a class="comment-user owner" href="/users/258689/olivier-refalo" title="25,586 reputation">Olivier Refalo</a></author></comment><comment><text><span class="comment-copy">Just pointing out that accounts-ui is actually not powered by twitter bootstrap, though it can be used in combination with it.</span></text><author><a class="comment-user" href="/users/1352190/avital" title="1,477 reputation">avital</a></author></comment><comment><text><span class="comment-copy">Insecure by default. Yikes.</span></text><author><a class="comment-user" href="/users/536/judah-himango" title="37,271 reputation">Judah Himango</a></author></comment><comment><text><span class="comment-copy">@JudahHimango <b>insecure for testing purposes only</b>, and removing those two packages when you're ready for production is as easy as <code>meteor remove autopublish insecure</code>.</span></text><author><a class="comment-user" href="/users/941158/benjaminrh" title="7,891 reputation">BenjaminRH</a></author></comment><comment><text><span class="comment-copy">What about meteor methods? The client can access those from the console even with insecure uninstalled, because they are ran on the server. How can one make them secure?</span></text><author><a class="comment-user" href="/users/1025459/matanya" title="4,350 reputation">Matanya</a></author></comment><comment><text><span class="comment-copy">@Matanya but upon use and execution of those from console, it will throw an <code>access denied</code> error. Check it out.</span></text><author><a class="comment-user" href="/users/755533/ajduke" title="3,284 reputation">ajduke</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>In the <a href="http://docs.meteor.com/#collections" rel="noreferrer">collections doc</a> says:</p>
<blockquote>
<p>Currently the client is given full write access to the collection.
  They can execute arbitrary Mongo update commands. Once we build
  authentication, you will be able to limit the client's direct access
  to insert, update, and remove. We are also considering validators and
  other ORM-like functionality.</p>
</blockquote>
</div></text><author><a href="/users/1325646/pomber">pomber</a></author><comments><comment><text><span class="comment-copy">Also se this thread on Quora with an answer from one of the Meteor developers: <a href="http://www.quora.com/Meteor-web-framework/Whats-cool-about-Meteor/answer/Rory-I-Sinclair/comment/878076" rel="nofollow noreferrer">quora.com/Meteor-web-framework/Whats-cool-about-Meteor/answe‌​r/…</a></span></text><author><a class="comment-user" href="/users/525616/dentarg" title="543 reputation">dentarg</a></author></comment><comment><text><span class="comment-copy">@jonathanKingston the link is broken, could you update it please?</span></text><author><a class="comment-user" href="/users/1549837/carlos-barcelona" title="3,162 reputation">Carlos Barcelona</a></author></comment><comment><text><span class="comment-copy">@CarlosBarcelona The domain expired and the article was prior to the security updates in Meteor. I think it is fair to say it was out of date; so I have removed the comment to save people time. Thanks</span></text><author><a class="comment-user" href="/users/1329611/jonathankingston" title="1,327 reputation">jonathanKingston</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>If you are talking about restricting the client not to use any of your unauthorized insert/update/delete API, thats possible.</p>
<p>See their, todo app at <a href="https://github.com/meteor/meteor/tree/171816005fa2e263ba54d08d596e5b94dea47b0d/examples/todos">https://github.com/meteor/meteor/tree/171816005fa2e263ba54d08d596e5b94dea47b0d/examples/todos</a></p>
<p>Also, they have now added a built in AUTH module, that lets you login and register. So its safe. As far as you are taking care of XSS , Valiations, client headers etc.</p>
<p>but you can anyday convert meteor app into fully working nodejs application by deploying to node. So if you know how to secure a nodejs application you should be able to secure meteor.</p>
</div></text><author><a href="/users/585445/hitesh-joshi">Hitesh Joshi</a></author><comments><comment><text><span class="comment-copy">This is completely true as of Sept 2012</span></text><author><a class="comment-user owner" href="/users/258689/olivier-refalo" title="25,586 reputation">Olivier Refalo</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>As of 0.6.4, during development mode, is_client and is_server blocks still both go to the client system.  I can't say if these are segregated when you turn off development mode.</p>
<p>However, if they are not, a hacker might be able to gain insight from the system by review the blocks of  if(Meteor.is_server ) code.  That particularly concerns me, especially because I noted that I still at this point can't segregate Collections into separate files on client and server.</p>
<h2>Update</h2>
<p>Well, the point is don't put security related code in an is_server block in a non-server directory (i.e. - make sure it is in something under the /server .</p>
<p>I wanted to see if I was just nuts about not being able to segregate client and server Collections in the client and server directories.  In fact there is no problem with this.</p>
<p>Here is my test.  It's a simple example of the publish/subscribe model that seems to work fine.
<a href="http://goo.gl/E1c56" rel="nofollow">http://goo.gl/E1c56</a></p>
</div></text><author><a href="/users/1410930/drm">DrM</a></author><comments><comment><text><span class="comment-copy">The solution would be to save your code in the server/ folder - this way it doesn't get pushed to the client.</span></text><author><a class="comment-user owner" href="/users/258689/olivier-refalo" title="25,586 reputation">Olivier Refalo</a></author></comment><comment><text><span class="comment-copy">DrM, please see <a href="http://docs.meteor.com/#structuringyourapp" rel="nofollow noreferrer">docs.meteor.com/#structuringyourapp</a> — sensitive code does not need to be delivered to the client</span></text><author><a class="comment-user" href="/users/542734/emgee" title="1,109 reputation">emgee</a></author></comment><comment><text><span class="comment-copy">Try something simple; create a collection in a server file, then create that same collection in the client file and tell me what happens.  Next, create a root file with the declaration of the collection, then simply reference that in a server and client directory file and tell me what happens.  If you can't create the collection, like I couldn't, how can you reference these independently?  In the end, you need the reference to the collection to exist in the same client available file and use is_server and is_client.  I hope I am wrong, but I haven't found out how or why yet.</span></text><author><a class="comment-user" href="/users/1410930/drm" title="282 reputation">DrM</a></author></comment><comment><text><span class="comment-copy">Hmm, strange, testing seems to be fine, will update answer</span></text><author><a class="comment-user" href="/users/1410930/drm" title="282 reputation">DrM</a></author></comment><comment><text><span class="comment-copy">The link is a repo to simple code, but seems to work fine, not sure what the weird errors were in the past or how I might recreate them.</span></text><author><a class="comment-user" href="/users/1410930/drm" title="282 reputation">DrM</a></author></comment></comments></answer></answers></post>