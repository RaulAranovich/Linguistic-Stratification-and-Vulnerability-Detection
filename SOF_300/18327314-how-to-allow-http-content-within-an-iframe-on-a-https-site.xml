<?xml version="1.0" encoding="utf-8"?>
<post><title>html - How to allow http content within an iframe on a https site - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I load some HTML into an iframe but when a file referenced is using http, not https, I get the following error:</p>
<blockquote>
<p>[blocked] The page at {current_pagename} ran insecure content from {referenced_filename}</p>
</blockquote>
<p>Is there any way to turn this off or any way to get around it?</p>
<p>The iframe has no <code>src</code> attribute and the contents are set using:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">frame</span><span class="pun">.</span><span class="pln">open</span><span class="pun">();</span><span class="pln">
frame</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">html</span><span class="pun">);</span><span class="pln">
frame</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span></code></pre>
</div></text><author><a href="/users/5195127/davidivad">davidivad</a></author><comments><comment><text><span class="comment-copy"><a href="http://stackoverflow.com/questions/9280665/insecure-content-in-iframe-on-secure-page" title="insecure content in iframe on secure page">stackoverflow.com/questions/9280665/…</a></span></text><author><a class="comment-user" href="/users/2079345/chilinut" title="9,140 reputation">chiliNUT</a></author></comment><comment><text><span class="comment-copy">made an edit. The src is not set as the content is written into the iframe</span></text><author><a class="comment-user owner" href="/users/1284770/georgephillips" title="1,114 reputation">georgephillips</a></author></comment><comment><text><span class="comment-copy">Thanks for all the answers. Long story short is proxy the content.</span></text><author><a class="comment-user owner" href="/users/1284770/georgephillips" title="1,114 reputation">georgephillips</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>The best solution I created is to simply use google as the ssl proxy...</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">https</span><span class="pun">:</span><span class="com">//www.google.com/search?q=%http://yourhttpsite.com&amp;btnI=Im+Feeling+Lucky</span></code></pre>
<p>Tested and works in firefox. </p>
<p>Other Methods:</p>
<ul>
<li><p>Use a Third party such as embed.ly (but it it really only good for well known http APIs).</p></li>
<li><p>Create your own redirect script on an https page you control (a simple javascript redirect on a relative linked page should do the trick. Something like: (you can use any langauge/method)</p>
<p><code>https://mysite.com</code> That has a iframe linking to... </p>
<p><code>https://mysite.com/utilities/redirect.html</code> Which has a simple js redirect script like...</p>
<p><code>document.location.href ="http://thenonsslsite.com";</code></p></li>
<li><p>Alternatively, you could add an RSS feed or write some reader/parser to read the http site and display it within your https site.</p></li>
<li><p>You could/should also recommend to the http site owner that they create an ssl connection. If for no other reason than <a href="http://www.zdnet.com/google-confirms-its-giving-https-sites-higher-search-rankings-7000032428/">it increases seo</a>.</p></li>
</ul>
<p>Unless you can get the http site owner to create an ssl certificate, the most secure and permanent solution would be to create an RSS feed grabing the content you need (presumably you are not actually 'doing' anything on the http site -that is to say not logging in to any system). </p>
<p>The real issue is that having http elements inside a https site represents a security issue. There are no completely kosher ways around this security risk so the above are just current work arounds. </p>
<p>Note, that you can disable this security measure in most browsers (yourself, not for others). Also note that these 'hacks' may become obsolete over time. </p>
</div></text><author><a href="/users/3919519/matthew-peters">Matthew Peters</a></author><comments><comment><text><span class="comment-copy">Great answer, thanks. Just to let you know in chrome the JS redirect method does not work just prevents the change (as it does when you try load it normally).</span></text><author><a class="comment-user owner" href="/users/1284770/georgephillips" title="1,114 reputation">georgephillips</a></author></comment><comment><text><span class="comment-copy">To get the "I'm feeling lucky" forwarder method to work, see <a href="http://webapps.stackexchange.com/a/59216/75677">this related answer</a>. It will lead you to the first Google result, so it obviously only works only when your intended target target page is in the Google index already, and you find a query that returns it on top.</span></text><author><a class="comment-user" href="/users/1270008/tanius" title="1,691 reputation">tanius</a></author></comment><comment><text><span class="comment-copy">The I'm feeling lucky with just the API is a workaround in cases where you do not have access to write code and can only put in a uri.</span></text><author><a class="comment-user" href="/users/3919519/matthew-peters" title="1,222 reputation">Matthew Peters</a></author></comment><comment><text><span class="comment-copy"><a href="https://www.google.com/search?q=%http://yourhttpsite.com&amp;btnI=I" rel="nofollow noreferrer">google.com/search?q=%http://yourhttpsite.com&amp;btnI=I</a></span></text><author><a class="comment-user" href="/users/2037335/jude" title="1,053 reputation">Jude</a></author></comment><comment><text><span class="comment-copy">@Jude, what does that link tell us?</span></text><author><a class="comment-user" href="/users/3919519/matthew-peters" title="1,222 reputation">Matthew Peters</a></author></comment><comment><text><span class="comment-copy">@MatthewPeters, Good solution though. I used it with little bit modification <code>https://www.google.com/webhp?#q=http://www.yourhttpsite.com&amp;‌​btnI=I</code>. I suppose <code>btnI=Im+Feeling+Lucky</code> no more working. I thinks that bit was replaced by <code>btnI=I</code>.</span></text><author><a class="comment-user" href="/users/2037335/jude" title="1,053 reputation">Jude</a></author></comment><comment><text><span class="comment-copy">The redirect trick seems to work in Firefox only. Chrome still denies loading the insecure content. Are there any other known workarounds?</span></text><author><a class="comment-user" href="/users/172068/andreas-gohr" title="2,246 reputation">Andreas Gohr</a></author></comment><comment><text><span class="comment-copy">This is not a solution because it only works in Firefox</span></text><author><a class="comment-user" href="/users/2459026/vrijdenker" title="662 reputation">vrijdenker</a></author></comment><comment><text><span class="comment-copy">@vrijdenker, at the time, the proxy by google worked in more browsers. Like I said, over time solutions will become obsolete as these are mere hacks. The question itself is flawed because it assumes there is a permanent solution other than 'no, it cannot be done by design.'</span></text><author><a class="comment-user" href="/users/3919519/matthew-peters" title="1,222 reputation">Matthew Peters</a></author></comment><comment><text><span class="comment-copy">It looks like this is not enforced if the https parent is localhost regardless of the http iframe but I haven't seen this documented anywhere. This is making test results inconsistent - any way to make this always enforced?</span></text><author><a class="comment-user" href="/users/961810/brad-peabody" title="3,513 reputation">Brad Peabody</a></author></comment><comment><text><span class="comment-copy">Just wanted to signal out that the "Create your own redirect script on an https page you control" method no longer works with current versions of Chrom(e|ium) and Firefox, even using JS.</span></text><author><a class="comment-user" href="/users/844972/kako-nawao" title="84 reputation">kako-nawao</a></author></comment><comment><text><span class="comment-copy">I guess this worked when posted, but it doesn't anymore. "Refused to display '<a href="https://www.google.es/search?q=%25http://WHATEVER&amp;btnI=Im+Feeling+Lucky&amp;gws_rd=cr&amp;ei=TLhqWIf3CsH8UtL-p6gI%27" rel="nofollow noreferrer">google.es/search?q=%25http://…</a>; in a frame because it set 'X-Frame-Options' to 'SAMEORIGIN'</span></text><author><a class="comment-user" href="/users/723825/matteo" title="1,015 reputation">matteo</a></author></comment><comment><text><span class="comment-copy">Using Google as the SSL proxy doesn't work for me either</span></text><author><a class="comment-user" href="/users/1898397/tarun-gupta" title="601 reputation">Tarun Gupta</a></author></comment><comment><text><span class="comment-copy">This answer is invalid to date, any other solutions</span></text><author><a class="comment-user" href="/users/5269570/sam-denty" title="1,493 reputation">Sam Denty</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I know this is an old post, but another solution would be to use cURL, for example:</p>
<p>redirect.php:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pun">&lt;?</span><span class="pln">php
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">isset</span><span class="pun">(</span><span class="pln">$_GET</span><span class="pun">[</span><span class="str">'url'</span><span class="pun">]))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    $url </span><span class="pun">=</span><span class="pln"> $_GET</span><span class="pun">[</span><span class="str">'url'</span><span class="pun">];</span><span class="pln">
    $ch </span><span class="pun">=</span><span class="pln"> curl_init</span><span class="pun">();</span><span class="pln">
    $timeout </span><span class="pun">=</span><span class="pln"> </span><span class="lit">5</span><span class="pun">;</span><span class="pln">
    curl_setopt</span><span class="pun">(</span><span class="pln">$ch</span><span class="pun">,</span><span class="pln"> CURLOPT_URL</span><span class="pun">,</span><span class="pln"> $url</span><span class="pun">);</span><span class="pln">
    curl_setopt</span><span class="pun">(</span><span class="pln">$ch</span><span class="pun">,</span><span class="pln"> CURLOPT_RETURNTRANSFER</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">);</span><span class="pln">
    curl_setopt</span><span class="pun">(</span><span class="pln">$ch</span><span class="pun">,</span><span class="pln"> CURLOPT_CONNECTTIMEOUT</span><span class="pun">,</span><span class="pln"> $timeout</span><span class="pun">);</span><span class="pln">
    $data </span><span class="pun">=</span><span class="pln"> curl_exec</span><span class="pun">(</span><span class="pln">$ch</span><span class="pun">);</span><span class="pln">
    curl_close</span><span class="pun">(</span><span class="pln">$ch</span><span class="pun">);</span><span class="pln">
    echo $data</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>then in your iframe tag, something like:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="tag">&lt;iframe</span><span class="pln"> </span><span class="atn">src</span><span class="pun">=</span><span class="atv">"/redirect.php?url=http://www.example.com/"</span><span class="tag">&gt;&lt;/iframe&gt;</span></code></pre>
<p>This is just a MINIMAL example to illustrate the idea -- it doesn't sanitize the URL, nor would it prevent someone else using the redirect.php for their own purposes.  Consider these things in the context of your own site.</p>
<p>The upside, though, is it's more flexible.  For example, you could add some validation of the curl'd $data to make sure it's really what you want before displaying it -- for example, test to make sure it's not a 404, and have alternate content of your own ready if it is.</p>
<p>Plus -- I'm a little weary of relying on Javascript redirects for anything important.</p>
<p>Cheers!</p>
</div></text><author><a href="/users/4475757/david-r">David R.</a></author><comments><comment><text><span class="comment-copy">This is pretty working, but the links inside the site are getting invalid. For example, I have a domain called <code>example.com</code> which has a SSL. I am embedding a iframe with <code>example.net</code> which has no SSL. The <code>example.com</code> has a link like <code>href="/path/file.html"</code> and while clicking it, it is opening as <code>https://example.com/path/file.html</code> instead of <code>http://example.net/path/file.html</code></span></text><author><a class="comment-user" href="/users/3073612/sibidharan" title="760 reputation">Sibidharan</a></author></comment><comment><text><span class="comment-copy">The link cannot be relative if you would like this to work. In other words, specify the full URL within the href. If this is dynamic there are libraries to grab each segment of the URL in Javascript as well as server side.</span></text><author><a class="comment-user" href="/users/1279192/anthony-mason" title="130 reputation">Anthony Mason</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Based on generality of this question, I think, that you'll need to setup your own HTTPS proxy on some server online. Do the following steps:</p>
<ul>
<li>Prepare your proxy server - install IIS, Apache</li>
<li>Get valid SSL certificate to avoid security errors (free from startssl.com for example)</li>
<li>Write a wrapper, which will download insecure content (how to below)</li>
<li>From your site/app get <a href="https://yourproxy.com/?page=http://insecurepage.com">https://yourproxy.com/?page=http://insecurepage.com</a></li>
</ul>
<p>If you simply download remote site content via file_get_contents or similiar, you can still have insecure links to content. You'll have to find them with regex and also replace. Images are hard to solve, but Ï found workaround here: <a href="http://foundationphp.com/tutorials/image_proxy.php">http://foundationphp.com/tutorials/image_proxy.php</a></p>
</div></text><author><a href="/users/3732323/panpernicek">panpernicek</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>You will always get warnings of blocked content in most browser when trying to display non secure content on an https page. This is tricky if you want to embed stuff from other sites that is'nt behind ssl. You can turn the warnings or the blockings of in your browser but for other visitors its a problem.</p>
<p>One way to do it is load the content serverside and save the images and other things to your server and display them from https.</p>
<p>You can also try using a service like embed.ly and get the content through them. They have support for getting the content behind https. </p>
</div></text><author><a href="/users/1741495/addeladde">Addeladde</a></author><comments><comment><text><span class="comment-copy">if you scrape the content and show it on your site their is Always the risk of cross site scripting. So a god solution is to scrape the content on a separate url and present the data in an iframe from that url with https. In that way you prevent crosssite scripting on your mainsite and session hijacking.</span></text><author><a class="comment-user" href="/users/1741495/addeladde" title="311 reputation">Addeladde</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>add <code>&lt;meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests"&gt;</code> in head</p>
<blockquote>
<p>reference: <a href="http://thehackernews.com/2015/04/disable-mixed-content-warning.html" rel="nofollow noreferrer">http://thehackernews.com/2015/04/disable-mixed-content-warning.html</a></p>
<p>browser compatibility: <a href="http://caniuse.com/#feat=upgradeinsecurerequests" rel="nofollow noreferrer">http://caniuse.com/#feat=upgradeinsecurerequests</a></p>
</blockquote>
</div></text><author><a href="/users/2523022/user2523022">user2523022</a></author><comments><comment><text><span class="comment-copy">This solution doesn't allow you to serve http content on a https site. All this does is force http requests as https requests. If the resource doesn't exist on https you'll just get a 404 error instead.</span></text><author><a class="comment-user" href="/users/1240851/felix" title="161 reputation">Felix</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>If it's about a few and rarely changing URLs to embed into the <code>iframe</code>, you could set up a SSL proxy for this on your own server and configure it so that one <code>https</code> URL on your server maps to one <code>http</code> URL on the proxy.</p>
<p>For example, I would look into <a href="https://ngrok.com/usage" rel="nofollow">ngrok</a> and <a href="http://mitmproxy.org/" rel="nofollow">mitmproxy</a> for this, since they are small and simple to configure (though usually meant for slightly different purposes).</p>
</div></text><author><a href="/users/1270008/tanius">tanius</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p><strong>Using Google as the SSL proxy is not working currently,</strong></p>
<h3>Why?</h3>
<p>If you opened any page from google, you will find there is a <code>x-frame-options</code> field in the header.
<a href="https://i.stack.imgur.com/uEYnJ.png" rel="nofollow noreferrer"><img alt="Google response header" src="https://i.stack.imgur.com/uEYnJ.png"/></a></p>
<blockquote>
<p>The X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be allowed to render a page in a ,  or  . Sites can use this to avoid clickjacking attacks, by ensuring 
  that their content is not embedded into other sites.</p>
</blockquote>
<p>(Quote from MDN)   </p>
<h3>One of the solution</h3>
<p>Below is my work around for this problem:  </p>
<p>Upload the content to AWS S3, and it will create a https link for the resource.<br/>
Notice: set the permission to the html file for allowing everyone view it.</p>
<p>After that, we can using it as the <code>src</code> of iframe in the https websites.
<a href="https://i.stack.imgur.com/5oGoh.png" rel="nofollow noreferrer"><img alt="AWS" src="https://i.stack.imgur.com/5oGoh.png"/></a></p>
</div></text><author><a href="/users/5076405/david-guan">David Guan</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>You could try scraping whatever you need with PHP or another server side language, then put the iframe to the scraped content. Here's an example with PHP:</p>
<p>scrapedcontent.php:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pun">&lt;?</span><span class="pln">php
$homepage </span><span class="pun">=</span><span class="pln"> file_get_contents</span><span class="pun">(</span><span class="str">'http://www.example.com/'</span><span class="pun">);</span><span class="pln">
echo $homepage</span><span class="pun">;</span><span class="pln">
</span><span class="pun">?&gt;</span></code></pre>
<p>index.html:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="tag">&lt;iframe</span><span class="pln"> </span><span class="atn">src</span><span class="pun">=</span><span class="atv">"scrapedcontent.php"</span><span class="tag">&gt;&lt;/iframe&gt;</span></code></pre>
</div></text><author><a href="/users/2443486/grant">Grant</a></author><comments><comment><text><span class="comment-copy">How will you handle images, included JS and CSS files, hyperlinks, and AJAX requests?</span></text><author><a class="comment-user" href="/users/343302/dotancohen" title="11,045 reputation">dotancohen</a></author></comment><comment><text><span class="comment-copy">@dotancohen you're right, it isn't a perfect solution, but I think it is the best for this situation. Some sites you won't run into the problems you discussed.</span></text><author><a class="comment-user" href="/users/2443486/grant" title="109 reputation">Grant</a></author></comment><comment><text><span class="comment-copy">This works, but its effectively double loading the content and therefore loading time as your server scrapes and then re-serves the content...</span></text><author><a class="comment-user" href="/users/1168026/christokiwi" title="176 reputation">ChristoKiwi</a></author></comment></comments></answer></answers></post>