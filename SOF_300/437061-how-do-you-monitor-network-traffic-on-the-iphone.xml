<?xml version="1.0" encoding="utf-8"?>
<post><title>security - How do you monitor network traffic on the iPhone? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>We are looking for a Wireshark-like tool to use on the iPhone to test a 3rd party application before partnering with the 3rd party.  Any suggestions?</p>
</div></text><author><a href="/users/1551/chris-ballance">Chris Ballance</a></author><comments><comment><text><span class="comment-copy">Surprised no one has mentioned <code>rvictl</code>; adding an answer.</span></text><author><a class="comment-user" href="/users/77939/mpontillo" title="9,059 reputation">mpontillo</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>You didnt specify the platform you use, so I assume it's a Mac ;-)</p>
<p>What I do is use a proxy. I use <a href="http://squidman.net/squidman/" rel="noreferrer">SquidMan</a>, a standalone implementation of <a href="http://www.squid-cache.org/" rel="noreferrer">Squid</a></p>
<p>I start SquidMan on the Mac, then on the iPhone I enter the Proxy params in the General/Wifi Settings.</p>
<p>Then I can watch the HTTP trafic in the Console App, looking at the squid-access.log</p>
<p>If I need more infos, I switch to tcpdump, but I suppose WireShark should work too.</p>
</div></text><author><a href="/users/53071/stephan-burlot">Stephan Burlot</a></author><comments><comment><text><span class="comment-copy">Great solution. Worked like a charm.</span></text><author><a class="comment-user" href="/users/569195/undeadlegion" title="176 reputation">Undeadlegion</a></author></comment><comment><text><span class="comment-copy">For Windows users, Fiddler is an excellent tool for sniffing HTTP traffic. The one thing you need to know is in Fiddler to select Tools -&gt; Fiddler Options -&gt; Connections and check "Allow remote computers to connect". There you'll also find the port it listens on. On the iPhone, navigate to the WiFi network's properties, and enter your computer's IP Address and Fiddler's port in the HTTP Proxy section (with Manual setup). HTH.</span></text><author><a class="comment-user" href="/users/643554/keith-robertson" title="622 reputation">Keith Robertson</a></author></comment><comment><text><span class="comment-copy">Just to add, the logs will then be in ~/Library/logs/squid</span></text><author><a class="comment-user" href="/users/32140/max" title="3,956 reputation">Max</a></author></comment><comment><text><span class="comment-copy">I am trying to do this but in wireshark, I can only see traffic going from the iphone to the proxy and then from the proxy to the internet. It seems as though squid man uses a tunnel between the iphone and the proxy. Is there any way to disable this?</span></text><author><a class="comment-user" href="/users/852455/joakimb" title="141 reputation">joakimb</a></author></comment><comment><text><span class="comment-copy">I'm a noob using Squid[man] and I had to search a little to realize I need to put my iPhone's ip into Squidman's client tab in Preferences, before my iPhone was able to access the web again. Just leaving this here to others who have the same problem.</span></text><author><a class="comment-user" href="/users/423306/rachel" title="319 reputation">rachel</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>A man-in-the-middle proxy, like suggested by other answers, is a good solution if you only want to see HTTP/HTTPS traffic.</p>
<p>The best solution for packet sniffing (though it only works for <em>actual</em> iOS devices, not the simulator) I've found is to use <code>rvictl</code>. <a href="http://useyourloaf.com/blog/2012/02/07/remote-packet-capture-for-ios-devices.html">This blog post</a> has a nice writeup. Basically you do:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">rvictl </span><span class="pun">-</span><span class="pln">s </span><span class="pun">&lt;</span><span class="pln">iphone</span><span class="pun">-</span><span class="pln">uid</span><span class="pun">-</span><span class="kwd">from</span><span class="pun">-</span><span class="pln">xcode</span><span class="pun">-</span><span class="pln">organizer</span><span class="pun">&gt;</span></code></pre>
<p>Then you sniff the interface it creates with with Wireshark (or your favorite tool), and when you're done shut down the interface with:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">rvictl </span><span class="pun">-</span><span class="pln">x </span><span class="pun">&lt;</span><span class="pln">iphone</span><span class="pun">-</span><span class="pln">uid</span><span class="pun">-</span><span class="kwd">from</span><span class="pun">-</span><span class="pln">xcode</span><span class="pun">-</span><span class="pln">organizer</span><span class="pun">&gt;</span></code></pre>
<p>This is nice because if you want to packet sniff the simulator, you're having to wade through traffic to your local Mac as well, but <code>rvictl</code> creates a virtual interface that just shows you the traffic from the iOS device you've plugged into your USB port.</p>
<p>Note: this only works on a Mac.</p>
</div></text><author><a href="/users/77939/mpontillo">mpontillo</a></author><comments><comment><text><span class="comment-copy">This is the best solution</span></text><author><a class="comment-user" href="/users/364015/jakev" title="2,187 reputation">jakev</a></author></comment><comment><text><span class="comment-copy">Agreed this is a great solution. I would further avoid xcode like this:   <code>system_profiler SPUSBDataType | grep -A 10 iPhone | grep Serial</code> :P</span></text><author><a class="comment-user" href="/users/240004/ranman" title="4,551 reputation">ranman</a></author></comment><comment><text><span class="comment-copy">Thanks for <code>system_profiler</code> solution, which is possible to automate on the command line while XCode solution is not!</span></text><author><a class="comment-user" href="/users/55478/noah-sussman" title="3,828 reputation">Noah Sussman</a></author></comment><comment><text><span class="comment-copy">does this work for https?</span></text><author><a class="comment-user" href="/users/2178809/sibish" title="93 reputation">Sibish</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I use <a href="http://www.charlesproxy.com/">Charles Web Debugging Proxy</a> it costs but they have a trial version.</p>
<p>It is very simple to set up if your iPhone/iPad share the same Wifi network as your Mac.</p>
<ol>
<li>Install Charles on your Mac</li>
<li>Get the IP address for your Mac - use the Mac "Network utility"</li>
<li>On your iPhone/iPad open the Wifi settings and under the "HTTP
Proxy" change to manual and enter the IP from step (2) and then Port
to 8888 (Charles default Port)</li>
<li>Open Charles and under the Proxy Settings dialogmake sure the
“Enable Mac OS X Proxy” and “Use HTTP Proxy” are ticked</li>
<li>You should now see the traffic appearing within Charles</li>
<li>If you want to look at HTTPS traffic you need to do the additional 2 steps download the
<a href="http://www.charlesproxy.com/documentation/using-charles/ssl-certificates/">Charles Certificate Bundle</a> and then email the .crt file to your
iPhone/iPad and install.</li>
<li>In the Proxy Settings Dialog SSL tab, add the specific https top
level domains you want to sniff with port 443.</li>
</ol>
<p>If your Mac and iOS device are not on the same Wifi network you can set up your Mac as a Wifi router using the "Internet Sharing" option under Sharing in the System Preferences. You then connect your device to that "Wifi" network and follow the steps above. </p>
</div></text><author><a href="/users/143318/joneswah">joneswah</a></author><comments><comment><text><span class="comment-copy">Thanks for recommending this. Looks much nicer than the alternatives. Also, you can just navigate to a webpage to download the certs to the iOS device, no email required. (see Charles docs)</span></text><author><a class="comment-user" href="/users/1270148/sandy-chapman" title="6,121 reputation">Sandy Chapman</a></author></comment><comment><text><span class="comment-copy">I'd like to add some quick tips for setting up Android manual proxy settings: 1. Go to Settings; 2. Press and hold on WiFi you're connected; 3. tap Modify Network; 4. scroll down to Show Advanced Options; 5. under Proxy Settings choose Manual; 6. set up IP and port as described in @jonewash answer; 7. Save. (aditional help: <a href="https://attentionshard.wordpress.com/2013/06/13/sniffing-ios-and-android-http-traffic/" rel="nofollow noreferrer">attentionshard.wordpress.com/2013/06/13/…</a>)</span></text><author><a class="comment-user" href="/users/4502544/andrej" title="3,229 reputation">Andrej</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Run it through a proxy and monitor the traffic using <a href="http://www.wireshark.org/download.html" rel="noreferrer">Wireshark</a>.</p>
</div></text><author><a href="/users/1551/chris-ballance">Chris Ballance</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<h2>For Mac OS X</h2>
<ol>
<li>Install <a href="http://www.charlesproxy.com/" rel="nofollow">Charles Proxy</a></li>
<li>In Charles go to Proxy &gt; Proxy Settings. It should display the HTTP proxy port (it's 8888 by default).</li>
</ol>
<hr/>
<h2>For Windows</h2>
<ol>
<li>Install <a href="http://www.telerik.com/fiddler" rel="nofollow">Fiddler2</a></li>
<li>Tools -&gt; Fiddler Options -&gt; Connections and check "Allow remote computers to connect"</li>
</ol>
<hr/>
<h2>General Setup</h2>
<ol>
<li>Go to Settings &gt; Wifi &gt; The <code>i</code> symbol &gt; At the bottom Proxy &gt; Set to manual and then for the server put the computer you are working on IP address, for port put 8888 as that is the default for each of these applications</li>
</ol>
<hr/>
<h3>ARP Spoofing</h3>
<p>General notes for the final section, if you want to sniff all the network traffic would be to use <a href="http://en.wikipedia.org/wiki/ARP_spoofing" rel="nofollow">ARP spoofing</a> to forward all the traffic from your iOS to a laptop/desktop.  There are multiple tools to ARP spoof and research would need to be done on all the specifics.  This allows you to see every ounce of traffic as your router will route all data meant for the iOS device to the laptop/desktop and then you will be forwarding this data to the iOS device (automatically).  </p>
<p><em>Please note I only recommend this as a last resort.</em></p>
</div></text><author><a href="/users/1985032/abc123">abc123</a></author><comments><comment><text><span class="comment-copy">This is exactly what I needed. It is simple and it works. Unfortunately I can only give +1.</span></text><author><a class="comment-user" href="/users/2016386/das-keks" title="1,110 reputation">das Keks</a></author></comment><comment><text><span class="comment-copy">i'll add a plus one for this answer!!  thank you</span></text><author><a class="comment-user" href="/users/382140/pithhelmet" title="776 reputation">pithhelmet</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Without knowing exactly what your requirements are, here's what I did to see packts go by from the iPhone: Connect a mac on ethernet, share its network over airport and connect the iPhone to that wireless network. Run Wireshark or Packet Peeper on the mac.</p>
</div></text><author><a href="/users/62931/roger-nolan">Roger Nolan</a></author><comments><comment><text><span class="comment-copy">Follow up:  Here is a simple guide to monitor the complete traffic by using Wireshark and the Mac OS Internet Sharing:  <a href="http://corecocoa.wordpress.com/2011/11/22/network-sniffing-on-the-iphone/" rel="nofollow noreferrer">corecocoa.wordpress.com/2011/11/22/…</a></span></text><author><a class="comment-user" href="/users/761131/jaltek" title="1,734 reputation">jaltek</a></author></comment><comment><text><span class="comment-copy">You can also connect iphone via usb on your mac and share internet of mac to iPhone.</span></text><author><a class="comment-user" href="/users/1415713/kurtanamo" title="973 reputation">kurtanamo</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>On a jailbroken iPhone/iPod capturing traffic is done nicely by both "tcpdump" and "pirni"- available in the cydia repository. Analysis of these data are done by tranfering the capture over to another machine and using something like wireshark. However, given the active development that seems to be going on with these tools it's possible that soon the iPhone will handle it all.   </p>
</div></text><author><a>NONE</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>The best solution I have found that Works:</p>
<p>Connect your device thru USB</p>
<p>And type these commands:</p>
<ol>
<li><p>rvictl -s UDID - (id of device 20 chars, you can locate 4t in iTunes or organiser in Xcode)</p></li>
<li><p>sudo launchctl list com.apple.rpmuxd</p></li>
<li><p>sudo tcpdump -n -t -i rvi0 -q tcp<br/>
OR   just sudo tcpdump -i rvi0 -n    </p></li>
</ol>
<p>If rvictl is not working install Xcode  </p>
<p>For more info:
<a href="http://developer.apple.com/library/mac/#qa/qa1176/_index.html#//apple_ref/doc/uid/DTS10001707-CH1-SECRVI" rel="nofollow">Remote Virtual Interface</a></p>
<p><a href="http://useyourloaf.com/blog/2012/02/07/remote-packet-capture-for-ios-devices.html" rel="nofollow">http://useyourloaf.com/blog/2012/02/07/remote-packet-capture-for-ios-devices.html</a></p>
</div></text><author><a href="/users/1906325/oleh-kudinov">Oleh Kudinov</a></author><comments><comment><text><span class="comment-copy"><code>rvictl</code> does not seem to be a part of the command line tools for 10.10</span></text><author><a class="comment-user" href="/users/142746/joseph" title="4,118 reputation">Joseph</a></author></comment><comment><text><span class="comment-copy">Please check this out: <a href="http://stackoverflow.com/questions/21559537/bash-rvictl-command-not-found-mac-book-pro-os-x-10-7-5-xcode-4-6" title="bash rvictl command not found mac book pro os x 10 7 5 xcode 4 6">stackoverflow.com/questions/21559537/…</a></span></text><author><a class="comment-user" href="/users/1906325/oleh-kudinov" title="1,424 reputation">Oleh Kudinov</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Here is another way <a href="http://www.tuaw.com/2011/02/21/how-to-inspect-ioss-http-traffic-without-spending-a-dime/">http://www.tuaw.com/2011/02/21/how-to-inspect-ioss-http-traffic-without-spending-a-dime/</a></p>
<p>I didn't see Roger Nolan's reply, the above link is same workflow with a different tool.</p>
</div></text><author><a href="/users/240255/palaniraja">palaniraja</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Depending on what you want to do runnning it via a Proxy is not ideal. A transparent proxy might work ok as long as the packets do not get tampered with.</p>
<p>I am about to reverse the GPS data that gets transferred from the iPhone to the iPad on iOS 4.3.x to get to the the vanilla data the best way to get a clean Network Dump is to use "tcpdump"  and/or "pirni" as already suggested.</p>
<p>In this particular case where we want the Tethered data it needs to be as transparent as possible. Obviously you need your phone to be JailBroken for this to work.</p>
</div></text><author><a href="/users/610224/steve-clement">Steve Clement</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Try <a href="http://www.iwaxx.com/debookee" rel="nofollow">Debookee</a> on Mac OS X which will intercept transparently the traffic of your iPhone without need of a proxy, thanks to MITM, as stated before.
You'll then see in real time the different protocols used by your device.</p>
<p>Disclaimer: I'm part of the development team of Debookee, which is a paid application. The trial version will show you all functionnalities for a limited time.</p>
</div></text><author><a href="/users/1143827/tom">Tom</a></author><comments><comment><text><span class="comment-copy">Debookee is awesome. It would be nice if there was a simple video tutorial on your site so that people can see how easy it is to use.</span></text><author><a class="comment-user" href="/users/235041/sanjiv-jivan" title="1,251 reputation">Sanjiv Jivan</a></author></comment><comment><text><span class="comment-copy">I just discovered that Debookee is unable to display traffic to https URL's and this is mentioned in their FAQ. Unfortunately the Squidman proxy solution mentioned here also doesn't capture the https URL. If anyone has suggestions please let me know.</span></text><author><a class="comment-user" href="/users/235041/sanjiv-jivan" title="1,251 reputation">Sanjiv Jivan</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>A general solution would be to use a linux box (could be in a virtual machine) configured as a transparent proxy to intercept the traffic, and then analyse it using wireshark or tcpdump or whatever you like. Perhaps MacOS can do this also, I haven't tried.</p>
<p>Or if you can run the app in the simulator, you can probably monitor the traffic on your own machine.</p>
</div></text><author><a href="/users/42404/frankodwyer">frankodwyer</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Com'on, no mention of <a href="http://fiddler2.com/" rel="nofollow">Fiddler</a>? Where's the love :)</p>
<p>Fiddler is a very popular HTTP debugger aimed at developers and not network admins (i.e. Wireshark).</p>
<p><a href="http://fiddler2.com/documentation/Configure-Fiddler/Tasks/ConfigureForiOS" rel="nofollow">Setting it up for iOS is fairly simple process</a>. It can decrypt HTTPS traffic too!</p>
<p>Our mobile team is finally reliefed after QA department started using Fiddler to troubleshoot issues. Before fiddler, people fiddled around to know who to blame, mobile team or APIs team, but not anymore.</p>
</div></text><author><a href="/users/80434/korayem">Korayem</a></author><comments/></answer></answers></post>