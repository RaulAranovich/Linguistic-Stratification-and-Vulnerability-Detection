<?xml version="1.0" encoding="utf-8"?>
<post><title>web services - Should Unicode be allowed in usernames? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>Why do most (all?) websites only support usernames in ASCII? Are there any security considerations if an admin decides to start accepting Unicode usernames?</p>
</div></text><author><a href="/users/1048572/bergi">Bergi</a></author><comments><comment><text><span class="comment-copy">I vote this should be community wiki. Sounds like some good discussions are beginning.</span></text><author><a class="comment-user" href="/users/23649/jtbandes" title="75,286 reputation">jtbandes</a></author></comment><comment><text><span class="comment-copy">if you care about security of your code, you shouldn't allow unicode anywhere (unless you're a masochist <b>and</b> a unicode expert <b>and</b> you're the only one who will ever have to maintain your code)</span></text><author><a class="comment-user" href="/users/80243/l%cc%b2%cc%b3o%cc%b2%cc%b3%cc%b3n%cc%b2%cc%b3%cc%b3g%cc%b2%cc%b3%cc%b3p%cc%b2%cc%b3o%cc%b2%cc%b3%cc%b3k%cc%b2%cc%b3%cc%b3e%cc%b2%cc%b3%cc%b3" title="8,609 reputation">L̲̳o̲̳̳n̲̳̳g̲̳̳p̲̳o̲̳̳k̲̳̳e̲̳̳</a></author></comment><comment><text><span class="comment-copy">@L̲̳o̲̳̳n̲̳̳g̲̳̳p̲̳o̲̳̳k̲̳̳e̲̳̳, Actually the last point should be "<b>and</b> maintainers also qualify (1) and (2)."</span></text><author><a class="comment-user" href="/users/632951/pacerier" title="33,795 reputation">Pacerier</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>Homoglyph attacks. User 'cat' and 'сat' are different unicode strings although they look the same. The first letter in the second 'сat' is Russian 'с' - "CYRILLIC SMALL LETTER ES" to be exact. The system can't easily tell that you're spoofing another user's name - to the computer the nicks are different.</p>
<p>Edit: Preventing mixed scripts does not solve the problem. For example 'сосо' is pure Cyryllic and can be used to spoof ascii 'coco'.</p>
<p>Also, left-to-right override (and friends.) Leave them unsanitized and they'll mess up your whole page.</p>
</div></text><author><a href="/users/12166/rafa%c5%82-dowgird">Rafał Dowgird</a></author><comments><comment><text><span class="comment-copy">Well, it <i>can</i> easily tell if you're mixing scripts and disallow those. Web browsers follow a similar rule to revert IDNs to Punycode display.</span></text><author><a class="comment-user" href="/users/73070/joey" title="220,967 reputation">Joey</a></author></comment><comment><text><span class="comment-copy">You don't always need to <i>mix</i> scripts. Some all-ascii words can be recreated using cyrillic-only, for example 'coco'. So you need to deal with that too.</span></text><author><a class="comment-user" href="/users/12166/rafa%c5%82-dowgird" title="25,457 reputation">Rafał Dowgird</a></author></comment><comment><text><span class="comment-copy">Homoglyph attacks are possible in ASCII as well; "0" and "O" are indistinguishable in many fonts, as are "|", "I", "l", and "1"; ".com", ".corn" among others.</span></text><author><a class="comment-user" href="/users/22437/dour-high-arch" title="15,765 reputation">Dour High Arch</a></author></comment><comment><text><span class="comment-copy">If homoglyph attacks need to be minimized, you may then restrict a username to use only one type of script per username (along with numeric characters). For instance, a user cannot mix Chinese and Arabic characters in one single username, or English and Cyrillic and Ethiopic, etc.</span></text><author><a class="comment-user owner" href="/users/400751/banx" title="1,622 reputation">banx</a></author></comment><comment><text><span class="comment-copy">Doesn't OpenID (as used here on SO) make spoofing another user's name quite easy? I got the impression that I could make my name appear as "Jon Skeet" if I wanted. Yet, I don't see that sort of thing being a problem on SO.</span></text><author><a class="comment-user" href="/users/60075/craig-mcqueen" title="21,696 reputation">Craig McQueen</a></author></comment><comment><text><span class="comment-copy">How about allowing single-script names, but putting a little logo next to each username identifying the script?  That way Latin "coco" and Cyrillic "coco" are distinguishable.</span></text><author><a class="comment-user" href="/users/49220/paul-johnson" title="11,830 reputation">Paul Johnson</a></author></comment><comment><text><span class="comment-copy">Using the confusables list at <a href="http://www.unicode.org/Public/security/revision-02/confusables.txt" rel="nofollow noreferrer">unicode.org/Public/security/revision-02/confusables.txt</a>, prevent registration of two usernames that have the same confusable mapping.  Note, that list has lots of examples of single-script confusables.</span></text><author><a class="comment-user" href="/users/8388/joe-hildebrand" title="8,359 reputation">Joe Hildebrand</a></author></comment><comment><text><span class="comment-copy">@JoeHildebrand, The list is <b>incomplete</b>. And it may very well never be complete. If the list is your means of defense, then you are making yourself wide open to attacks.</span></text><author><a class="comment-user" href="/users/632951/pacerier" title="33,795 reputation">Pacerier</a></author></comment><comment><text><span class="comment-copy">@PaulJohnson, Many systems are single-channel only. E.g. if I tell you that coco's profile is at stackoverflow.com/users/coco , clicking that link may well get you to a spoofed user.</span></text><author><a class="comment-user" href="/users/632951/pacerier" title="33,795 reputation">Pacerier</a></author></comment><comment><text><span class="comment-copy">@Pacerier good point.  Not using Unicode ever doesn't seem like a viable option in a world that includes a significant number of people whose names don't fit into ASCII-7, however.  We can either start over from scratch, or try to figure out how to go forward.</span></text><author><a class="comment-user" href="/users/8388/joe-hildebrand" title="8,359 reputation">Joe Hildebrand</a></author></comment><comment><text><span class="comment-copy">So I take we have no consensus yet on how to prevent or mitigate homoglyph attacks best when strict ascii only in user names is not an option?</span></text><author><a class="comment-user" href="/users/1329367/mahn" title="9,516 reputation">Mahn</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>HTTP authentication?
There could be some problems with sending the unicode username (and/or password) over existing protocols.  One case that I have run into before is with Basic authentication.  There is no well defined way to handle sending these unicode usernames/passwords in the basic auth headers.</p>
</div></text><author><a href="/users/399436/mike">Mike</a></author><comments><comment><text><span class="comment-copy"><a href="http://en.wikipedia.org/wiki/UTF-7" rel="nofollow noreferrer">UTF-7</a> allows you to transmit Unicode code-points as ASCII.</span></text><author><a class="comment-user" href="/users/10320/dreamlax" title="70,187 reputation">dreamlax</a></author></comment><comment><text><span class="comment-copy">But with utf-7, or any other encoding, you need to own the client and the server code to make sure that they will properly decode the data.</span></text><author><a class="comment-user" href="/users/399436/mike" title="2,931 reputation">Mike</a></author></comment><comment><text><span class="comment-copy">This was the best answer on the page for me because I was looking for a reason which still applied even if an administrator allocates all usernames in a controlled fashion. We are indeed still using BASIC auth... I guess this gives us a reason to drop it in the future.</span></text><author><a class="comment-user" href="/users/138513/trejkaz" title="4,687 reputation">Trejkaz</a></author></comment><comment><text><span class="comment-copy">Basic auth base64-encodes the username and password, so if you control the client and server you can use utf-8 for the username and password.  However, if you don't control the client and server then it's not a good idea; use another other authentication method (say, JWT, or OAuth, or Hawk) instead.  Basic auth is not recommendable these days.</span></text><author><a class="comment-user" href="/users/399738/dobes-vandermeer" title="3,966 reputation">Dobes Vandermeer</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>While it is at all questionable why there should ever be username and not just a 'password' to identify a user, I think there's no reason to disallow unicode usernames.</p>
<p>What's more important, is that password to be validated as lanuguage-agnostic: it should treat keystokes regardless of user's keyboard setting. This means, "שלום" and "akuo" would be the same password. This is important, because the user often doesn't see the password characters he's typing, and they are getting severely pissed if the CAPSLOCK is on. </p>
</div></text><author><a href="/users/73656/pavel-radzivilovsky">Pavel Radzivilovsky</a></author><comments><comment><text><span class="comment-copy">This sounds pretty awesome but I would like to see a system which can reliably do this... say if your IME is one which can convert things in a non-reversible fashion. For instance, 缶用でシプェrてぃs？</span></text><author><a class="comment-user" href="/users/138513/trejkaz" title="4,687 reputation">Trejkaz</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>While you can go ahead and allow unicode, understand that some usernames will not work as expected thanks to different cultures applying different rules to the same characters.</p>
<p>Consider the basic case for breaking case sensivitity: In Turkish, the usernames "Id1" and "id1" <em>are different</em> (in Turkish there are two different Is, one with a dot and one without, resulting in 2 captial and 2 small letters that do not match the same captialization rules as English). So while any Turkish person can enter their name in their own language, the program will not treat their name as they expect - instead it will undergo a strange transformation into mutant English.</p>
<p>Special latin characters in European languages have similar overlaps, making it seemingly random as to which language they are being entered in. Other regions of the world have similar shared characters where the rules of use differ - in some cases national and cultural hatreds could result in some <em>very</em> angry people when the characters making up their username are treated as if it was written in the language of their hated enemy (due to that being the operating systems default setting for those foreign characters).</p>
</div></text><author><a href="/users/67468/david">David</a></author><comments><comment><text><span class="comment-copy">So, we need PSP (politics sensitive programming). Shame on the Unicode consortium for not sorting all that out for us. ☺</span></text><author><a class="comment-user" href="/users/60075/craig-mcqueen" title="21,696 reputation">Craig McQueen</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Your observation is not always true.  And, the choice of ASCII is largely human factors rather than technical or security issues.</p>
<p>For most of the case, it is just for the ease of programming. A programmer never know that all software, libraries, utilities in website will break or not with some characters. Why risks the website development while ASCII works well?  Also, some packaged web software would hinder the use of Unicode in user name.  This contributes the issue that many websites only support usernames in ASCII.</p>
<p>Theoretically, all current software can handle 8-bit data well.  There is no problem in storage or transmission nowadays.  Even if some protocols not, they can translate in UTF-7 or with other transformation schemes.</p>
<p>There are some issues with Unicode.  It is more on the side of data processing.  It might be display, fonts, readiness of software and software libraries for non-BMP characters, collation, comparison, input methods, writing directions.  Administrators might not knowledgeable enough to handle them.  Depending on the nature of website, it could be a problem, but mostly not.</p>
<p>For admin purpose, it is not easy to type some exotic characters.  It makes admin hard to search for users.  It is also hard for an admin to keep offensive usernames in foreign languages off the website.</p>
<p>However, it is not uncommon that Chinese usernames are used Chinese website.  It might not always in ASCII.  So do other cultures and languages.  Some global projects accept nearlly all kinds of Unicode characters.  Wikipedia is an example.</p>
</div></text><author><a href="/users/326654/omnibus">OmniBus</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Plain ASCII is rare, I'd say. Often it's just that no one thinks of it since in Western Europe Latin 1 suffices and for the US as well. Some databases make distinctions between text in legacy character sets and Unicode (<code>varchar</code> vs. <code>nvarchar</code>) or for other databases a special character set has to be set.</p>
<p>Especially in the US many people never even notice that ASCII won't be enough. Some try to find excuses with »Users have to enter it« or similar which are mostly bogus, though.</p>
<p>To answer your question, I doubt there are security considerations, except maybe for spoofing other people's names using different scripts (a and а look identical, but one is Latin, one is Cyrillic – this has been done with URLs before). Generally I see it as an oversight by developers who probably should know better.</p>
</div></text><author><a href="/users/73070/joey">Joey</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>I would say a big reason is the lack of support for unicode in most PHP installations. It isn't easy to work with, so why allow it when the possibilities in ASCII are sufficient to cover your entire user base?</p>
</div></text><author><a href="/users/92602/scott-m">Scott M.</a></author><comments><comment><text><span class="comment-copy">The question is not about PHP so infirmity of that language shouldn't be an argument.</span></text><author><a class="comment-user" href="/users/252591/crozin" title="30,928 reputation">Crozin</a></author></comment><comment><text><span class="comment-copy">@Crozin: Many web applications are written in PHP, so it may be an argument for those. That particular language has a long, sad history of the crappiest support for Unicode next to only LaTeX.</span></text><author><a class="comment-user" href="/users/73070/joey" title="220,967 reputation">Joey</a></author></comment><comment><text><span class="comment-copy">@Scott_M. @Johannes_Rössel: Following this argument, the web should only be populated with latin characters? To follow-up on your answers, even though you say PHP lack support of unicode, you find many websites with unicode contents, <b>except</b> when they force their users to choose ascii usernames and passwords.</span></text><author><a class="comment-user owner" href="/users/400751/banx" title="1,622 reputation">banx</a></author></comment><comment><text><span class="comment-copy">banx: It's just that PHP can't natively or easily work with Unicode (and MySQL which it's often paired with defaults to Latin 1) which is far from ideal. If you don't pay attention as developer you'll end up with a site that just doesn't support it whereas I'd consider the default to be Unicode a much more sensible choice.</span></text><author><a class="comment-user" href="/users/73070/joey" title="220,967 reputation">Joey</a></author></comment><comment><text><span class="comment-copy">I didn't say it's impossible, I said it's difficult. Many developers are lazy and say "if they want to use my site, they have to use ASCII user names." Lucky for us, when PHP 6 comes out it will have native support for unicode and this difficulty will go away (slowly)</span></text><author><a class="comment-user" href="/users/92602/scott-m" title="6,063 reputation">Scott M.</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Or, we could just stop giving a crap about what a username looks like, and whether WE can pronounce/ remember it. That should be the USERS concern. If no one remembers you, that's your loss. And, as for name spoofing, that is almost unavoidable in any case. And yet, rarely do you ever hear of username spoofs. </p>
<p>Imagine a forum, imagine someone posts with an account that LOOKS identical to yours. You get in trouble, say you didn't do it, post a link to your history, see the post isn't there. Click the profile of the guy who ACTUALLY posted it, and bam, you have his profile. He's now bannable.</p>
<p>Having the same name doesn't mean you have the same user data. Any application that doesn't make it easy for you to differentiate two similar users is piss poor anyway and needs to be rewritten.</p>
</div></text><author><a href="/users/419519/clint">Clint</a></author><comments><comment><text><span class="comment-copy">This does not answer the question. It would be better as a comment under one of the other answers.</span></text><author><a class="comment-user" href="/users/23271/skip-head" title="5,149 reputation">Skip Head</a></author></comment></comments></answer></answers></post>