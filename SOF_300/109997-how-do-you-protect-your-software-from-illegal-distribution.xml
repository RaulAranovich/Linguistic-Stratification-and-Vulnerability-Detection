<?xml version="1.0" encoding="utf-8"?>
<post><title>security - How do you protect your software from illegal distribution? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I am curious about how do you protect your software against cracking, hacking etc.</p>
<p>Do you employ some kind of serial number check? Hardware keys? </p>
<p>Do you use any third-party solutions?</p>
<p>How do you go about solving licensing issues? (e.g. managing floating licenses)</p>
<p>EDIT: I'm not talking any open source, but strictly commercial software distribution...</p>
</div></text><author><a href="/users/449902/rlb-usa">rlb.usa</a></author><comments><comment><text><span class="comment-copy">I'm waiting for the day that someone pirates my software.  That would be AWESOME!</span></text><author><a class="comment-user" href="/users/1228/will" title="100,617 reputation">Will</a></author></comment><comment><text><span class="comment-copy">The thing is, one day someone pirates your software, you probably wouldn't know about that :-)</span></text><author><a class="comment-user owner" href="/users/15497/petr-k" title="5,796 reputation">petr k.</a></author></comment><comment><text><span class="comment-copy">In my opinion Pirates aren't likely to ever pay for your software anyway so I don't worry about them much. Write great software and you will make money.</span></text><author><a class="comment-user" href="/users/14680/mike" title="367 reputation">Mike</a></author></comment><comment><text><span class="comment-copy">No offence, but "Write great software and you'll make money" is just partly true. Consider MS Office. Criticism aside, it is good software. Yet, world average, over 70% of Office copies are illegal. Wouldn't MS earn much more if it wasn't for piracy? Is piracy really directly related to SW quality?</span></text><author><a class="comment-user owner" href="/users/15497/petr-k" title="5,796 reputation">petr k.</a></author></comment><comment><text><span class="comment-copy">@petr k.: I don't agree. One important side effect of piracy is in fact the popularity of MSOffice (MSWindows for that matter). MS will lose if it can curb piracy completely. @Mike: That is a very good point. By putting licensing server, etc. we are only making things difficult for our paid customer</span></text><author><a class="comment-user" href="/users/15139/rpattabi" title="5,193 reputation">rpattabi</a></author></comment><comment><text><span class="comment-copy">@petr - I think it's a safe call that OpenOffice would be much more popular if MS Office had bulletproof copy protection. That said, I've been on the commercial-software side of this -- but our black-box servers phoned home for support, updates and remote backup, so we checked license usage then.</span></text><author><a class="comment-user" href="/users/14122/charles-duffy" title="115,072 reputation">Charles Duffy</a></author></comment><comment><text><span class="comment-copy">@Charles Duffy- You are correct about MS Office losing popularity if it was pirate-proof.  I wish I still had a link to the source, but I remember hearing a Microsoft executive mention that they would rather have their software pirated and maintain a stranglehold on the market than have pirate-proof software that would drive would-be pirates to alternative/competing software packages.</span></text><author><a class="comment-user" href="/users/79566/bta" title="31,080 reputation">bta</a></author></comment><comment><text><span class="comment-copy"><a href="https://www.fsf.org/bulletin/2007/fall/antifeatures/" rel="nofollow noreferrer">fsf.org/bulletin/2007/fall/antifeatures</a> - If people really want to pirate your software you wont stop them, but you can annoy your paying customers significantly.</span></text><author><a class="comment-user" href="/users/168175/flexo" title="58,763 reputation">Flexo<span class="mod-flair" title="moderator">♦</span></a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>There are many, many, many protections available.  The key is:</p>
<ul>
<li>Assessing your target audience, and what they're willing to put up with</li>
<li>Understanding your audience's desire to play with no pay</li>
<li>Assessing the amount someone is willing to put forth to break your protection</li>
<li>Applying just enough protection to prevent most people from avoiding payment, while not annoying those that use your software.</li>
</ul>
<p>Nothing is unbreakable, so it's more important to gauge these things and pick a good protection than to simply slap on the best (worst) protection you are able to afford.</p>
<ul>
<li>Simple registration codes (verified online once).</li>
<li>Simple registration with revokable keys, verified online frequently.</li>
<li>Encrypted key holds portion of program algorithm (can't just skip over the check - it has to be run for the program to work)</li>
<li>Hardware key (public/private key cryptography)</li>
<li>Hardware key (includes portion of program algorithm that runs on the key)</li>
<li>Web service runs critical code (hackers never get to see it)</li>
</ul>
<p>And variations of the above.</p>
<p>-Adam</p>
</div></text><author><a href="/users/2915/adam-davis">Adam Davis</a></author><comments><comment><text><span class="comment-copy">Great answer Adam. Thanks for this, very concise listing.</span></text><author><a class="comment-user" href="/users/61780/stu-andrews" title="612 reputation">Stu Andrews</a></author></comment><comment><text><span class="comment-copy">Any examples of hardware key in use?</span></text><author><a class="comment-user" href="/users/61342/%c5%81ukasz-lew" title="17,695 reputation">Łukasz Lew</a></author></comment><comment><text><span class="comment-copy">@Lukasz - They are also known as dongles - electronic devices that connect to the computer.  Check out <a href="http://en.wikipedia.org/wiki/Dongle" rel="nofollow noreferrer">en.wikipedia.org/wiki/Dongle</a> for more information on this option.</span></text><author><a class="comment-user" href="/users/2915/adam-davis" title="61,551 reputation">Adam Davis</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Whatever route you go, charge a fair price, make it easy to activate, give free minor updates and never deactivate their software. If you treat your users with respect they'll reward you for it. Still, no matter what you do some people are going to end up pirating it.</p>
</div></text><author><a href="/users/4007/rpetrich">rpetrich</a></author><comments><comment><text><span class="comment-copy">Very reasonable answer, thanks, +1</span></text><author><a class="comment-user owner" href="/users/15497/petr-k" title="5,796 reputation">petr k.</a></author></comment><comment><text><span class="comment-copy">Well said. I agree that there is much more about protecting a software than just keys and serials. Technical protections are breakable anyway, we shouldn't strain ourselves too much on those stuff.</span></text><author><a class="comment-user" href="/users/286958/jaya-wijaya" title="179 reputation">Jaya Wijaya</a></author></comment><comment><text><span class="comment-copy">Yep, the main reason that I'd ever pirate software(not the I ever have, of course ;D) is outrageous prices. Then of course, users not paying for it makes you <i>less</i> money in the end. So stick with fair prices, and you'll make a fair amount of money.</span></text><author><a class="comment-user" href="/users/216292/wallacoloo" title="3,541 reputation">Wallacoloo</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Don't.</p>
<p>Pirates will pirate. No matter what solution you come up with, it can and will be cracked.</p>
<p>On the other hand, your actual, paying customers are the ones who are being inconvenienced by the crap.</p>
</div></text><author><a href="/users/18210/asmor">Asmor</a></author><comments><comment><text><span class="comment-copy">Thats not exactly true, there are ignorant users who will just take software because they simply do not think about it.  Normal people will steal if they don't think about it.</span></text><author><a class="comment-user" href="/users/14009/arthur-thomas" title="3,991 reputation">Arthur Thomas</a></author></comment><comment><text><span class="comment-copy">I agree. I always get upset at the FBI "you wouldn't steal a car" intros to DVDs I've actually paid for!</span></text><author><a class="comment-user" href="/users/12534/christian-dav%c3%a9n" title="7,831 reputation">Christian Davén</a></author></comment><comment><text><span class="comment-copy">If done correctly it will be almost invisible to legitimate users. And don't underestimate the impact of casual piracy on the bottom line. There are a lot of markets where demand is fairly inflexible that 'DRM' can make a huge difference in revenue.</span></text><author><a class="comment-user" href="/users/16080/smo" title="757 reputation">smo</a></author></comment><comment><text><span class="comment-copy">I know is hard for you wrap your mind around this, but is true, DRM can be burden for your users. add some basic protection like activation keys (even if you know that it can be broken), but never put in your users way, or they'll simply push your software away.</span></text><author><a class="comment-user" href="/users/7946/levhita" title="1,322 reputation">levhita</a></author></comment><comment><text><span class="comment-copy">Wrong. See <a href="http://kalzumeus.com/2006/09/05/everything-you-need-to-know-about-registration-systems/" rel="nofollow noreferrer">kalzumeus.com/2006/09/05/…</a></span></text><author><a class="comment-user" href="/users/17613/karl" title="2,315 reputation">Karl</a></author></comment><comment><text><span class="comment-copy">@Christian D - How about this? "You wouldn't copy a car, because you can't." Copying is not theft because you're not permanently depriving someone else of ownership of the stolen item.</span></text><author><a class="comment-user" href="/users/37771/guge" title="4,177 reputation">Guge</a></author></comment><comment><text><span class="comment-copy">I really do not understand why this answer, which is really answering nothing, does get this amount of upvotes. -1</span></text><author><a class="comment-user owner" href="/users/15497/petr-k" title="5,796 reputation">petr k.</a></author></comment><comment><text><span class="comment-copy">@petr k.: Because it's thinking outside the box? :) Well, mostly because people are really, really, really, <i>really</i>, pissed of with all the excrement that is called DRM or copy protection software.</span></text><author><a class="comment-user" href="/users/115807/ilari-kajaste" title="1,344 reputation">Ilari Kajaste</a></author></comment><comment><text><span class="comment-copy">@smo: It'll be invisible right until the legitimate user wants to do something weird. Like, say, running the software on a laptop without CD drive to validate the installation. Or running it through emulation in another OS. I think you're confusing <i>legitimate</i> users with <i>normal</i> users. And don't overestimate the impact of casual piracy on the bottom line... In fact, better not to estimate it at all, since there <i>are no</i> reliable estimates.</span></text><author><a class="comment-user" href="/users/115807/ilari-kajaste" title="1,344 reputation">Ilari Kajaste</a></author></comment><comment><text><span class="comment-copy">-1. This is an answer from the <b>customer</b> point of view, the question is looking for the point of view of the <b>code owner</b>.</span></text><author><a class="comment-user" href="/users/15639/markj" title="25,676 reputation">MarkJ</a></author></comment><comment><text><span class="comment-copy">@MarkJ: Actually, any code owner who wishes to keep their customers should frequently <i>adopt</i> the POV of the customer...</span></text><author><a class="comment-user" href="/users/43681/sleske" title="48,426 reputation">sleske</a></author></comment><comment><text><span class="comment-copy">As well as the "ignorant" users that @Authur mentions, there's also the fact that people are often busy and under pressure and if it's too easy to use the software without a licence they might just think "I'll register tomorrow"...but tomorrow never comes. So the copy protection just needs to make unlicensed use <i>slightly</i> more inconvenient than paying and activating the software.</span></text><author><a class="comment-user" href="/users/154770/todd-owen" title="8,590 reputation">Todd Owen</a></author></comment><comment><text><span class="comment-copy">-1 for not answering at all. What about licensing to limit some features just to avoid compiling different versions?</span></text><author><a class="comment-user" href="/users/58791/marc-climent" title="5,667 reputation">Marc Climent</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Make it easier to buy than to steal. If you put mounds of copy protection then it just makes the value of owning the real deal pretty low. </p>
<p>Use a simple activation key and <em>assure</em> customers that they can <em>always</em> get an activation key or re-download the software if they ever lose theirs. </p>
<p>Any copy protection (aside from online-only components like multiplayer games and finance software that connects to your bank, etc.) you can just assume will be defeated. You want downloading your software illegally, at the very least, to be slightly harder than buying it.</p>
<p>I have a PC games that I've never opened, because there is so much copy protection junk on it that it's actually easier to download the fake version.</p>
</div></text><author><a href="/users/30/grant">Grant</a></author><comments><comment><text><span class="comment-copy">++ for "make it easier to buy than to steal".</span></text><author><a class="comment-user" href="/users/402807/alcubierredrive" title="2,653 reputation">AlcubierreDrive</a></author></comment><comment><text><span class="comment-copy">+++ "for make it easier to buy than to steal"!</span></text><author><a class="comment-user" href="/users/331344/denis-shevchenko" title="544 reputation">Denis Shevchenko</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Software protections aren't worth the money -- if your software is in demand it <b>will</b> be defeated, no matter what.</p>
<p>That said, hardware protections can work well.  An example way it can work well is this:  Find a (fairly) simple but necessary component of your software and implement it in Verilog/VHDL.  Generate a public-private keypair and make a webservice that takes a challenge string and encrypts it with the private key.  Then make a USB dongle that contains your public key and generates random challenge strings.  Your software should ask the USB dongle for a challenge string and send it up to the server for encryption.  The software then sends it to the dongle.  The dongle validates the encrypted challenge string with the public key and goes into an 'enabled' mode.  Your software then calls into the dongle any time it needs to do the operation you wrote in HDL.  This way anyone wanting to pirate your software has to figure out what the operation is and reimplement it -- much harder than just defeating a pure software protection.</p>
<p>Edit: Just realized some of the verification stuff is backwards from what it should be, but I'm pretty sure the idea comes across.</p>
</div></text><author><a href="/users/4977/cody-brocious">Cody Brocious</a></author><comments><comment><text><span class="comment-copy">Hey I always wondered how those dongles worked. Thanks!</span></text><author><a class="comment-user" href="/users/10157/jeff" title="4,441 reputation">Jeff</a></author></comment><comment><text><span class="comment-copy">Most of them don't work that way, but just implement part of an algorithm and don't do the public key auth.  For instance, AutoCAD (or was it 3dsmax?) did their matrix rotation on the dongle.  If you didn't have the dongle in, the rotation would be /slightly/ off, which would add up over time.</span></text><author><a class="comment-user" href="/users/4977/cody-brocious" title="25,482 reputation">Cody Brocious</a></author></comment><comment><text><span class="comment-copy">That's a clever trick. Make the software work wrong when it's not registered properly; not totally wrong, but only just such that you don't notice it at first.</span></text><author><a class="comment-user" href="/users/4007/rpetrich" title="29,880 reputation">rpetrich</a></author></comment><comment><text><span class="comment-copy">Also, when deciding to use USB dongles for software protection do bear in mind that a lot of software these days run in virtual environments where access to physical hardware (e.g. USB ports) may be limited. There's also cost for replacement dongles involved (yes, and customer will "lose" dongles).</span></text><author><a class="comment-user" href="/users/14889/poppavein" title="512 reputation">PoppaVein</a></author></comment><comment><text><span class="comment-copy">and there are cracks for these dongles as well - they are defeatable, like using a tabulated response (recorded from a real dongle) for challenge/response types. for algorithm encoded types, it's disassembled, and the algorithm reinserted back into the app's binary.</span></text><author><a class="comment-user" href="/users/17335/chii" title="10,225 reputation">Chii</a></author></comment><comment><text><span class="comment-copy">This type of protection has stopped Cubase/Nuendo (leading DAW software on Windows) being cracked a few years. The last version to be hacked had a little note from the crackers. They claimed it was the hardest crack they'd even undertaken. They also stated that because so many of the program routines hit the dongle that performance of the software was degraded. Their emulated dongle worked much faster. Lots of legit users were very angry and ended up installing the crack anyway just to get better performance.</span></text><author><a class="comment-user" href="/users/56564/alex" title="1,493 reputation">Alex</a></author></comment><comment><text><span class="comment-copy">@rpetrich "Make the software work wrong when it's not registered properly; not totally wrong, but only just such that you don't notice it at first" - this seems like a horrible idea. Users would think it's a problem with your product and that it exists in the legal version too. Lots of people pirate software in order to try it out and make sure it's worth the cash before buying it. Unless you're giving away a free trial version, you might lose a lot of these customers.</span></text><author><a class="comment-user" href="/users/216292/wallacoloo" title="3,541 reputation">Wallacoloo</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>The Microsoft Software License scheme is crazy expensive for a small business.  The server cost is around $12,000 if you want to set it up yourself.  I don't recommend it for the feint of heart.</p>
<p>We actually just implemented <a href="http://www.eziriz.com/intellilock.htm" rel="nofollow noreferrer">Intellilock</a> in our product.  It lets you have all of the decisions for how strict you want your license to be, and it is very cost effective as well.  In addition it does obfuscation, compiler prevention, etc.</p>
<p>Another good solution I have seen small/med businesses use is <a href="http://www.softwarekey.com/swk_products/solo/server/" rel="nofollow noreferrer">SoloServer</a>.  It is much more of an ecommerce and license control system.  It is very configurable to the point of maybe a little too complex.  But it does a very good job from what I have heard.</p>
<p>I have also used the <a href="http://www.desaware.com/support/faq/licensing/index.aspx" rel="nofollow noreferrer">Desaware license</a> system for dot net in the past.  It is a pretty lightweight system compared to the two above.  It is a very good license control system in terms of cryptographically sound.  But it is a very low level API in which you have to implement almost everything your app will actually use.</p>
</div></text><author><a href="/users/19974/jason-short">Jason Short</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Digital "Rights" Management is the single biggest software snake-oil product in the industry. To borrow a page from classic cryptography, the typical scenario is that Alice wants to get a message to Bob without Charlie being able to read it. DRM doesn't work because in its application, Bob and Charlie are the same person!</p>
<p>You would be better off asking the inverse question, which is "How do I get people to buy my software instead of stealing it?" And that is a very broad question. But it generally starts by doing research. You figure out who buys the type of software you wish to sell, and then produce software that appeals to those people.</p>
<p>The additional prong to this is to limit updates/add-ons to legit copies only. This can be something as simple as an order code received during the purchase transaction.</p>
<p>Check out Stardock software, makers of WindowBlinds and games such as Sins of a Solar Empire, the latter has no DRM and turned a sizable profit off a $2M budget.</p>
</div></text><author><a href="/users/9780/nathan-strong">Nathan Strong</a></author><comments><comment><text><span class="comment-copy">+1 for the well-phrased inverse question!</span></text><author><a class="comment-user" href="/users/115807/ilari-kajaste" title="1,344 reputation">Ilari Kajaste</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>There are several methods, such as using the processor ID to generate an "activation key."</p>
<p>The bottom line is that if someone wants it bad enough -- they'll reverse engineer any protection you have.</p>
<p>The most failsafe methods are to use online verification at runtime or a hardware hasp.</p>
<p>Good luck!</p>
</div></text><author><a href="/users/10853/ian-p">Ian P</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Online-only games like World of Warcraft (WoW) have it made, everyone has to connect to the server every time and thus accounts can be constantly verified. No other method works for beans.</p>
</div></text><author><a href="/users/10157/jeff">Jeff</a></author><comments><comment><text><span class="comment-copy">Well, I do not think this is a realistic solution for, say, 90% of software. I should have made it more clear in the post - the software we're building is not an online game. Although the question was meant to be general, so your answer is still pretty valid of course.</span></text><author><a class="comment-user owner" href="/users/15497/petr-k" title="5,796 reputation">petr k.</a></author></comment><comment><text><span class="comment-copy">Well, there are private servers available for which no payment is needed.</span></text><author><a class="comment-user" href="/users/1114/jeremy-banks" title="59,154 reputation">Jeremy Banks<span class="mod-flair" title="moderator">♦</span></a></author></comment><comment><text><span class="comment-copy">Well sure Petr, is isn't realistic for everyone, but it is still the truth: no other method works. Inconvient, sure, but true.</span></text><author><a class="comment-user" href="/users/10157/jeff" title="4,441 reputation">Jeff</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Is not exactly the answer you are looking for, but is a great resource on piracy from a game developer who actively asked their <em>pirates</em> about why they do that. And is related to the first part of the answer you choose.</p>
<p>Readi it at  <a href="http://www.positech.co.uk/talkingtopirates.html" rel="nofollow noreferrer">Talking to Pirates</a>.</p>
</div></text><author><a href="/users/2274/fernando-barrocal">Fernando Barrocal</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Generally there are two systems that often get confused -</p>
<ul>
<li>Licensing or activation tracking, legal legitimate usage</li>
<li>Security preventing illegal usage</li>
</ul>
<p>For licensing use a commercial package, <a href="http://en.wikipedia.org/wiki/FLEXlm" rel="nofollow noreferrer">FlexLM</a> many companies invest huge sums of money into licensing think they also get security, this is a common mistake key generators for these commercial packages are prolifically abundant.</p>
<p>I would only recommend licensing if your selling to corporations who will legitimately pay based on usage, otherwise its probably more effort than its worth.</p>
<p>Remember that as your products become successful, all and every licensing and security measure will be breached eventually. So decide now if it is really worth the effort.</p>
<p>We implemented a clean room clone of FlexLM a number of years ago, we also had to enhance our applications against binary attacks, its long process, you have to revisit it every release. It also really depends on which global markets you sell too, or where your major customer base is as to what you need to do.</p>
<p>Check out another of my answers on <a href="http://stackoverflow.com/questions/106347/secure-dll-with-license-file#107503">securing a DLL</a>.</p>
</div></text><author><a href="/users/2387/titanae">titanae</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Given a little time your software will always be cracked. You can search for cracked versions of any well known piece of software in order to confirm this. But it is still well worth adding some form of protection to your software. </p>
<p>Remember that dishonest people will never pay for your software and always find/use a cracked version. Very honest people will always stick to the rules even without a licensing scheme just because that is the kind of person they are. But the majority of people are between these two extremes. </p>
<p>Adding some simple protection scheme is a good way of making that bulk of people in the middle act in an honest way. It is a way to nudge them into remembering that the software is not free and they should be paying for the appropriate number of licenses. Many people do actually respond to this. Businesses are especially good at sticking to the rules because the manager is not spending his/her own money. Consumers are less likely to stick to the rules because it is their own money.</p>
<p>But recent experience with releases such as <em>Spore</em> from <em>Electronic Arts</em> shows that you can go to far in licensing. If you make even legit people feel like criminals because they are constantly being validated then they start to rebel. So add some simple licensing to remind people if they are being dishonest but anything more than that is unlikely to boost sales.</p>
</div></text><author><a href="/users/6276/phil-wright">Phil Wright</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>DRM this, DRM that - publishers who force DRM on their projects are doing it because it's profitable.  Their economists are concluding this on data which none of us will ever see.  The "DRM is evil" trolls are going a little too far.</p>
<p>For a low-visibility product, a simple internet activation is going to stop casual copying.  Any other copying is likely negligible to your bottom line.</p>
</div></text><author><a href="/users/20003/dustin-getz">Dustin Getz</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>The trouble with this idea of just let the pirates use it they wont buy it anyway and will show their friends who might buy it is twofold.</p>
<ol>
<li><p>With software that uses 3rd party services, the pirated copies are using up valuable bandwidth/resource which gives legit users a worse experience, make my sw look more popular then it is and has the 3rd party services asking me to pay more for their services because of the bandwidth being used.  </p></li>
<li><p>Many casual wouldn't dream of cracking the sw themselves but if there is an easy assessible crack on a site like piratebay they will use it, if there wasn't they might buy it.</p></li>
</ol>
<p>This concept of not disabling pirated software once discovered also seems crazy, I don't understand why I should let someone continue to use software they shouldn't be using, I guess this is just the view/hope of the pirates. </p>
<p>Also, its worth noting that making a program hard to crack is one thing, but you also need to prevent legit copies being shared, otherwise somebody could simply buy one copy and then<br/>
share it with thousands of others via a torrent site. The fact of having their name/email address embedded in the license isn't going to be enough to disuade everyone from doing this, and it only really takes one for there to be a problem. </p>
<p>The only way I can see to prevent this is to either:</p>
<ol>
<li><p>Have server check and lock license on program startup every time, and release license on program exit. If another client starts with same license whilst the first client has license then it is rejected. This way doesn't prevent the license being used by more than one user, but does prevent it being used concurrently by more than one user - which is good enough. It also allows a legitimate user to transfer the license on any of their computers which provides a better experience.</p></li>
<li><p>On first client startup client sends license to server and server verifies it, causing some flag to be set within the client software. Further requests from other clients with the same license are rejected. The trouble with this approach is the original client would have problems if they reinstalled the software or wanted to use a different computer. </p></li>
</ol>
</div></text><author><a href="/users/1480018/paul-taylor">Paul Taylor</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Even if you used some kind of biometric fingerprint authentication, someone would find a way to crack it.  There's really no practical way around that.  Instead of trying to make your software hack-proof, think about how much extra revenue will be brought in by adding additional copy protection vs. the amount of time and money it will take to implement it.  At some point, it gets to be cheaper to go with a less rigorous copy protection scheme.</p>
<p>It depends on what exactly your software product is, but one possibility is to move the "valuable" part of the program out of the software and keep it under your exclusive control.  You would charge a modest fee for the software (mostly to cover print and distribution costs) and would generate your revenue from the external component.  For example, an anti-virus program that is sold for cheap (or bundled for free with other products) but sells subscriptions to its virus definitions update service.  With that model, a pirated copy that subscribes to your update service wouldn't represent much of a financial loss.  With the increasing popularity of applications "in the cloud", this method is becoming easier to implement; host the application on your cloud, and charge users for cloud access.  This doesn't stop someone from re-implementing their own cloud to eliminate the need for your service, but the time and effort involved in doing so would most likely outweigh the benefits (if you keep your pricing model reasonable).</p>
</div></text><author><a href="/users/79566/bta">bta</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>As has been pointed out, software protection is never guaranteed to be foolproof. What you intend to use depends largely on your target audience. A game, for instance, is not something you are going to be able to protect forever. A server software, on the other hand, is something far less likely to be distributed on the Internet, for a number of reasons (product penetration and liability come to mind; a large corporation does not want to be held liable for bootleg software, and the pirates only bother with things in large-enough demand). In all honesty, for a high-profile game, the best solution is probably to seed the torrent yourself (clandestinely!) and modify it in some way (for instance, so that after two weeks of play it pops up with messages telling you to please consider supporting the developers by purchasing a legitimate copy).</p>
<p>If you put protection in place, bear two things in mind. First, a lower price will supplement any copy protection by making people more inclined to pay the purchase price. Secondly, the protection must not get in the way of users - see Spore for a recent example.</p>
</div></text><author><a href="/users/16855/coppro">coppro</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>The simple, and best solution, is just to charge them up front. Set a price that works for you and them.</p>
<p>Asking paying customers to prove that they are paying customers after they've already paid just pisses them off. Implementing the code to make your software not run wastes your time and money, and introduces bugs and annoyances for legitimate customers. You'd be better off spending that time making a better product.</p>
<p>Lots of games/etc will "protect" the first version, then drop the protections in the first patch due to compatibility problems with real customers. It's not an unreasonable strategy if you insist on a modicum of protection.</p>
</div></text><author><a href="/users/4777/davenpcj">davenpcj</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Almost all copy-protection is both ineffective, and a usability nightmare.  Some of it, such as putting root-kits on your customers' machines becomes downright unethical</p>
</div></text><author><a href="/users/15464/wnoise">wnoise</a></author><comments><comment><text><span class="comment-copy">Why the downvote?</span></text><author><a class="comment-user" href="/users/95183/lm" title="705 reputation">LM.</a></author></comment><comment><text><span class="comment-copy">I down vote - You are assuming everyone with a anti scheme is performing illegal activities like root kits.</span></text><author><a class="comment-user" href="/users/19974/jason-short" title="4,555 reputation">Jason Short</a></author></comment><comment><text><span class="comment-copy">No, I don't assume that.  I explicitly said <i>some</i>.  And there are well-documented cases of rootkits for DRM.</span></text><author><a class="comment-user" href="/users/15464/wnoise" title="7,895 reputation">wnoise</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Illegal distribution is practically impossible to prevent; just ask the RIAA.  Digital content can just be copied; analog content can be digitised, and then copied.</p>
<p>You should focus your efforts on preventing unauthorised <em>execution</em>.  It's never possible to completely prevent the execution of code on someone else's machine, but you can take certain steps to raise the bar sufficiently high that it becomes easier to purchase your software than to pirate it.</p>
<p>Take a look at the article <a href="http://www.offbyzero.com/resources/software_protection_licensing" rel="nofollow noreferrer">Developing for Software Protection and Licensing</a> that explains how best to go about developing your application with licensing in mind.</p>
<p>Obligatory disclaimer &amp; plug: the company I co-founded produces the <a href="https://cobalt.offbyzero.com/" rel="nofollow noreferrer">OffByZero Cobalt software licensing solution for .NET</a>.</p>
</div></text><author><a href="/users/181452/duncan-bayne">Duncan Bayne</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Make part of your product an online component which requires connection and authentication. Here are some examples:</p>
<ul>
<li>Online Games</li>
<li>Virus Protection</li>
<li>Spam Protection</li>
<li>Laptop tracking software</li>
</ul>
<p>This paradigm only goes so far though and can turn some consumers off.</p>
</div></text><author><a href="/users/7819/pdavis">pdavis</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>If your interested in protecting software that you intend to sell to consumers I would recommend any of a variety of license key generating libraries (Google search on license key generation). Usually the user has to give you some sort of seed like their email address or name and they get back the registration code.</p>
<p>Several companies will either host and distribute your software or provide a complete installation/purchase application that you can integrate with and do this automatically probably at no additional cost to you.</p>
<p>I have sold software to consumers and I find this the right balance of cost/ease of use/protection.</p>
</div></text><author><a href="/users/14680/mike">Mike</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>I agree with a lot of posters that no software-based copy protection scheme will deter against a skilled software pirate. For commercial .NET based software Microsoft Software License Protection (SLP) is a very reasonably priced solution. It supports time-limited and floating licenses. Their pricing starts at $10/month + $5 per activation and the protection components seem to work as advertised. It's a fairly new offering, though, so buyer beware.</p>
</div></text><author><a href="/users/14889/poppavein">PoppaVein</a></author><comments><comment><text><span class="comment-copy">And in 2011 the price for SLP has grown to €145/month for the smallest package.</span></text><author><a class="comment-user" href="/users/397007/michael-olesen" title="438 reputation">Michael Olesen</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I suggest simple activation key (even if you know that it can be broken), you really don't want your software to get in your users way, or they'll simply push it away.</p>
<p>Make sure that they can re-download the software, I suggest a web page where they can logging and download your software only after they paid (and yes they should be able to download as many times they wish it, directly, without a single question about why on your part).</p>
<p>Thrust your paid users above all, there is nothing more irritating that being accused from being a criminal when you are a legit users (DVD's anti-piracy warnings anyone).</p>
<p>You can add a service that checks the key against a server when online, and in case of two different IPs are using the same key, popup a suggestion to buy another license.</p>
<p>But please don't inactivate it, it might be a happy user showing your software to a friend!!!!</p>
</div></text><author><a href="/users/7946/levhita">levhita</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>If you are a software developer, one of the possible solutions is to embed a meta data direct into your product. Check out for an instance Destruction Security tool from theredsunrise.</p>
</div></text><author><a>NONE</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>We license our commercial software using our own licensing system - which is what we are selling (license management tools). We generally sell subscription licenses, but can also sell based on usage if we wish. It has been secure for us so far: www.agilis-sw.com</p>
</div></text><author><a>NONE</a></author><comments/></answer></answers></post>