<?xml version="1.0" encoding="utf-8"?>
<post><title>.net - Override Authorize Attribute in ASP.NET MVC - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I have an MVC controller base class on which I applied the Authorize attribute since I want almost all of the controllers (and their actions along) to be authorized. </p>
<p>However I need to have a controller and an action of another controller unauthorized. I wanted to be able to decorate them with the <code>[Authorize(false)]</code> or something but this is not available.</p>
<p>Any ideas?</p>
</div></text><author><a href="/users/275567/pb2q">pb2q</a></author><comments/></question><answers><answer><text><div class="post-text" itemprop="text">
<p>Edit: Since ASP.NET MVC 4 the best approach is simply to use the built-in <a href="http://msdn.microsoft.com/en-us/library/system.web.http.allowanonymousattribute%28v=vs.108%29.aspx" rel="noreferrer">AllowAnonymous</a> attribute.</p>
<p>The answer below refers to earlier versions of ASP.NET MVC</p>
<p>You could create a custom authorisation attribute inheriting from the standard AuthorizeAttribute with an optional bool parameter to specify whether authorisation is required or not.</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">OptionalAuthorizeAttribute</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">AuthorizeAttribute</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">readonly</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> _authorize</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">OptionalAuthorizeAttribute</span><span class="pun">()</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        _authorize </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">OptionalAuthorizeAttribute</span><span class="pun">(</span><span class="kwd">bool</span><span class="pln"> authorize</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        _authorize </span><span class="pun">=</span><span class="pln"> authorize</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">AuthorizeCore</span><span class="pun">(</span><span class="typ">HttpContextBase</span><span class="pln"> httpContext</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pun">(!</span><span class="pln">_authorize</span><span class="pun">)</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">

                    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">base</span><span class="pun">.</span><span class="typ">AuthorizeCore</span><span class="pun">(</span><span class="pln">httpContext</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Then you can decorate your base controller with that attribute:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pun">[</span><span class="typ">OptionalAuthorize</span><span class="pun">]</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ControllerBase</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">Controller</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>and for any controllers you don't want authorisation simply use the override with a 'false' - e.g.</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pun">[</span><span class="typ">OptionalAuthorize</span><span class="pun">(</span><span class="kwd">false</span><span class="pun">)]</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">TestController</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">ControllerBase</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">ActionResult</span><span class="pln"> </span><span class="typ">Index</span><span class="pun">()</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">View</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/89628/steve-willcock">Steve Willcock</a></author><comments><comment><text><span class="comment-copy">I have thought of this but I was hoping for a simpler solution. However if "they" didn't provide one then your solution is the best one.</span></text><author><a class="comment-user owner" href="/users/1796/andrei-r%c3%aenea" title="10,855 reputation">Andrei Rînea</a></author></comment><comment><text><span class="comment-copy">It is better to use <code>[AllowAnonymous]</code> attribute.</span></text><author><a class="comment-user" href="/users/480700/jaider" title="6,721 reputation">Jaider</a></author></comment><comment><text><span class="comment-copy">Wait... so the controller honors only the top-level class's attribute of a particular type?</span></text><author><a class="comment-user" href="/users/88409/triynko" title="8,997 reputation">Triynko</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>It seems ASP.NET MVC 4 'fixed' this by adding an <a href="http://msdn.microsoft.com/en-us/library/system.web.http.allowanonymousattribute%28v=vs.108%29.aspx" rel="nofollow noreferrer">AllowAnonymous</a> attribute.</p>
<p><a href="http://www.davidhayden.me/blog/asp.net-mvc-4-allowanonymous-attribute-and-authorize-attribute" rel="nofollow noreferrer">David Hayden wrote about this</a> :</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pun">[</span><span class="typ">Authorize</span><span class="pun">]</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">AccountController</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">Controller</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="pun">[</span><span class="typ">AllowAnonymous</span><span class="pun">]</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">ActionResult</span><span class="pln"> </span><span class="typ">Login</span><span class="pun">()</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="com">// ...</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="com">// ...</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/1796/andrei-r%c3%aenea">Andrei Rînea</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>My personal take on this would be to split the controller. Just create another controller For the actions you don't need authentication.</p>
<p>Or you could have :</p>
<ul>
<li><p><code>BaseController</code><br/>
doesn't require authentication - here you have all your "base stuff" :).</p></li>
<li><p><code>BaseAuthController : BaseController</code><br/>
all actions here require authentication.</p></li>
</ul>
<p>That way you can have authentication when you want , just by deriving from a specific class.</p>
</div></text><author><a href="/users/5246/sirrocco">sirrocco</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>If you just want one action to be unauthorized on an otherwise authorized controller you can do something like this:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">RequiresAuthorizationAttribute</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">ActionFilterAttribute</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">readonly</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> _authorize</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">RequiresAuthorizationAttribute</span><span class="pun">()</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        _authorize </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">RequiresAuthorizationAttribute</span><span class="pun">(</span><span class="kwd">bool</span><span class="pln"> authorize</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        _authorize </span><span class="pun">=</span><span class="pln"> authorize</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">OnActionExecuting</span><span class="pun">(</span><span class="typ">ActionExecutingContext</span><span class="pln"> filterContext</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">var</span><span class="pln"> overridingAttributes </span><span class="pun">=</span><span class="pln"> filterContext</span><span class="pun">.</span><span class="typ">ActionDescriptor</span><span class="pun">.</span><span class="typ">GetCustomAttributes</span><span class="pun">(</span><span class="kwd">typeof</span><span class="pln"> </span><span class="pun">(</span><span class="typ">RequiresAuthorizationAttribute</span><span class="pun">),</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span><span class="pln">

        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">overridingAttributes</span><span class="pun">.</span><span class="typ">Length</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> overridingAttributes</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="kwd">as</span><span class="pln"> </span><span class="typ">RequiresAuthorizationAttribute</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">!((</span><span class="typ">RequiresAuthorizationAttribute</span><span class="pun">)</span><span class="pln">overridingAttributes</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]).</span><span class="pln">_authorize</span><span class="pun">)</span><span class="pln">
            </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">

        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">_authorize</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="com">//redirect if not authenticated</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">filterContext</span><span class="pun">.</span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">User</span><span class="pun">.</span><span class="typ">Identity</span><span class="pun">.</span><span class="typ">IsAuthenticated</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="com">//use the current url for the redirect</span><span class="pln">
                </span><span class="kwd">var</span><span class="pln"> redirectOnSuccess </span><span class="pun">=</span><span class="pln"> filterContext</span><span class="pun">.</span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Request</span><span class="pun">.</span><span class="typ">Url</span><span class="pun">.</span><span class="typ">AbsolutePath</span><span class="pun">;</span><span class="pln">

                </span><span class="com">//send them off to the login page</span><span class="pln">
                </span><span class="com">//var redirectUrl = string.Format("?RedirectUrl={0}", redirectOnSuccess);</span><span class="pln">
                </span><span class="kwd">var</span><span class="pln"> loginUrl </span><span class="pun">=</span><span class="pln"> </span><span class="typ">LinkBuilder</span><span class="pun">.</span><span class="typ">BuildUrlFromExpression</span><span class="pun">&lt;</span><span class="typ">HomeController</span><span class="pun">&gt;(</span><span class="pln">filterContext</span><span class="pun">.</span><span class="typ">RequestContext</span><span class="pun">,</span><span class="pln"> </span><span class="typ">RouteTable</span><span class="pun">.</span><span class="typ">Routes</span><span class="pun">,</span><span class="pln">
                                                                                  x </span><span class="pun">=&gt;</span><span class="pln"> x</span><span class="pun">.</span><span class="typ">Login</span><span class="pun">(</span><span class="pln">redirectOnSuccess</span><span class="pun">));</span><span class="pln">
                filterContext</span><span class="pun">.</span><span class="typ">HttpContext</span><span class="pun">.</span><span class="typ">Response</span><span class="pun">.</span><span class="typ">Redirect</span><span class="pun">(</span><span class="pln">loginUrl</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/43836/pondermatic">pondermatic</a></author><comments/></answer></answers></post>