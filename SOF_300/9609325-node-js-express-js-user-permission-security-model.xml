<?xml version="1.0" encoding="utf-8"?>
<post><title>Node.js + Express.js User Permission Security Model - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>We have an application that has two types of users. Depending on how the user logs in, we want them to have access to different parts of the application.</p>
<p>How do we implement a security model for preventing users from seeing things they do not have access to?</p>
<p>Do we make security part of each routes implementation? The problem being that we will have some duplicate logic across requests. We could move this into helper functions, but we'd still need to remember to call it.</p>
<p>Do we make security part of a global app.all() route handler? The problem being that we have to inspect each route and do different logic based on a multitude of rules. At least all the code is in one place,  but then... all the code is in one place.</p>
</div></text><author><a href="/users/984335/travis-parks">Travis Parks</a></author><comments/></question><answers><answer><text><div class="post-text" itemprop="text">
<p>Having it per-route usually works for me. This is what I typically do:</p>
<pre class="lang-js prettyprint prettyprinted" style=""><code><span class="kwd">function</span><span class="pln"> requireRole</span><span class="pun">(</span><span class="pln">role</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">req</span><span class="pun">,</span><span class="pln"> res</span><span class="pun">,</span><span class="pln"> next</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">req</span><span class="pun">.</span><span class="pln">session</span><span class="pun">.</span><span class="pln">user </span><span class="pun">&amp;&amp;</span><span class="pln"> req</span><span class="pun">.</span><span class="pln">session</span><span class="pun">.</span><span class="pln">user</span><span class="pun">.</span><span class="pln">role </span><span class="pun">===</span><span class="pln"> role</span><span class="pun">)</span><span class="pln">
            next</span><span class="pun">();</span><span class="pln">
        </span><span class="kwd">else</span><span class="pln">
            res</span><span class="pun">.</span><span class="pln">send</span><span class="pun">(</span><span class="lit">403</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

app</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">"/foo"</span><span class="pun">,</span><span class="pln"> foo</span><span class="pun">.</span><span class="pln">index</span><span class="pun">);</span><span class="pln">
app</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">"/foo/:id"</span><span class="pun">,</span><span class="pln"> requireRole</span><span class="pun">(</span><span class="str">"user"</span><span class="pun">),</span><span class="pln"> foo</span><span class="pun">.</span><span class="pln">show</span><span class="pun">);</span><span class="pln">
app</span><span class="pun">.</span><span class="pln">post</span><span class="pun">(</span><span class="str">"/foo"</span><span class="pun">,</span><span class="pln"> requireRole</span><span class="pun">(</span><span class="str">"admin"</span><span class="pun">),</span><span class="pln"> foo</span><span class="pun">.</span><span class="pln">create</span><span class="pun">);</span><span class="pln">

</span><span class="com">// All bars are protected</span><span class="pln">
app</span><span class="pun">.</span><span class="pln">all</span><span class="pun">(</span><span class="str">"/foo/bar"</span><span class="pun">,</span><span class="pln"> requireRole</span><span class="pun">(</span><span class="str">"admin"</span><span class="pun">));</span></code></pre>
</div></text><author><a href="/users/295262/linus-gustav-larsson-thiel">Linus Gustav Larsson Thiel</a></author><comments><comment><text><span class="comment-copy">But what if just 2 roles can access to route?</span></text><author><a class="comment-user" href="/users/2158982/vladimir-djukic" title="801 reputation">Vladimir Djukic</a></author></comment><comment><text><span class="comment-copy">You could make <code>requireRole</code> take an array instead? And check with <code>indexOf</code>.</span></text><author><a class="comment-user" href="/users/295262/linus-gustav-larsson-thiel" title="28,907 reputation">Linus Gustav Larsson Thiel</a></author></comment><comment><text><span class="comment-copy">Could you add example? Is this last route protect all routes that start with /foo/bar ?</span></text><author><a class="comment-user" href="/users/2158982/vladimir-djukic" title="801 reputation">Vladimir Djukic</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>You can use ability-js with everyauth, which is quite similar to CanCan for Rails <a href="https://github.com/scottkf/ability-js">https://github.com/scottkf/ability-js</a></p>
</div></text><author><a href="/users/887594/cl%c3%a9ment-renaud">Cl√©ment Renaud</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Take a look at <a href="https://gist.github.com/facultymatt/6370903" rel="noreferrer">this list</a> for NodeJS ACL/Permission systems. IMHO <a href="https://github.com/OptimalBits/node_acl" rel="noreferrer">OptimalBits node_acl</a> looks best.</p>
</div></text><author><a href="/users/1595783/mcmeep">McMeep</a></author><comments><comment><text><span class="comment-copy">Is there a more recent list of Node.js ACL modules? We are considering how to implement ACL in a Meteor.js app.</span></text><author><a class="comment-user" href="/users/1191545/brylie-christopher-oxley" title="167 reputation">Brylie Christopher Oxley</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>There is now Node module <a href="https://www.npmjs.com/package/permission" rel="nofollow">permission</a> for this. It's very easy to use, very similar to accepted answer, but still some features are added.</p>
</div></text><author><a href="/users/2102437/tommz">Tommz</a></author><comments/></answer></answers></post>