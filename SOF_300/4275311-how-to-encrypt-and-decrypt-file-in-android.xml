<?xml version="1.0" encoding="utf-8"?>
<post><title>security - How to encrypt and decrypt file in Android? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I want to encrypt file and store it in SD card. I want to decrypt that encrypted file and store it in SD card again. I have tried to encrypt file by opening as file stream and encrypt is but it is not working. I want some idea on how to do this.</p>
</div></text><author><a href="/users/2360535/twlkyao">twlkyao</a></author><comments/></question><answers><answer><text><div class="post-text" itemprop="text">
<p>Use a <a href="http://docs.oracle.com/javase/7/docs/api/javax/crypto/CipherOutputStream.html"><code>CipherOutputStream</code></a> or <a href="http://docs.oracle.com/javase/7/docs/api/javax/crypto/CipherInputStream.html"><code>CipherInputStream</code></a> with a <code>Cipher</code> and your <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileInputStream.html"><code>FileInputStream</code></a> / <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileOutputStream.html"><code>FileOutputStream</code></a>.</p>
<p>I would suggest something like <code>Cipher.getInstance("AES/CBC/PKCS5Padding")</code> for creating the <code>Cipher</code> class. CBC mode is secure and does not have the <a href="http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Electronic_codebook_.28ECB.29">vulnerabilities of ECB mode for non-random plaintexts</a>. It should be present in any generic cryptographic library, ensuring high compatibility.</p>
<p>Don't forget to use a <a href="http://docs.oracle.com/javase/7/docs/api/javax/crypto/spec/IvParameterSpec.html">Initialization Vector</a> (IV) generated by a <a href="http://docs.oracle.com/javase/7/docs/api/java/security/SecureRandom.html">secure random generator</a> if you want to encrypt multiple files with the same key.  You can prefix the plain IV at the start of the ciphertext. It is always exactly one block (16 bytes) in size.</p>
<p>If you want to use a password, please make sure you do use a good key derivation mechanism (look up password based encryption or password based key derivation). PBKDF2 is the most commonly used Password Based Key Derivation scheme and it is <a href="http://stackoverflow.com/questions/2375541/password-verification-with-pbkdf2-in-java">present in most Java runtimes</a>, including Android. Note that SHA-1 is a bit outdated hash function, but it should be fine in PBKDF2, and does currently present the most compatible option. </p>
<p>Always specify the character encoding when encoding/decoding strings, or you'll be in trouble when the platform encoding differs from the previous one. In other words, don't use <code>String.getBytes()</code> but use <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#getBytes%28java.nio.charset.Charset%29"><code>String.getBytes(Charset.forName("UTF-8"))</code></a>.</p>
<p>To make it more secure, please add cryptographic integrity and authenticity by adding a secure checksum (MAC or HMAC) over the ciphertext and IV, preferably using a different key. Without an authentication tag the ciphertext may be changed in such a way that the change cannot be detected.</p>
<p><em>Be warned that <code>CipherInputStream</code></em> <strong><em>may</em></strong> <em>not report <code>BadPaddingException</code>, this includes <code>BadPaddingException</code> generated for authenticated ciphers!</em> </p>
</div></text><author><a href="/users/589259/maarten-bodewes">Maarten Bodewes</a></author><comments><comment><text><span class="comment-copy">+1 for "Always specify the character encoding when encoding/decoding strings" :)</span></text><author><a class="comment-user" href="/users/457714/iabhi" title="899 reputation">iabhi</a></author></comment><comment><text><span class="comment-copy">@abhy From Java 7 onward you can use the <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/StandardCharsets.html" rel="nofollow noreferrer"><code>StandardCharsets</code></a> feature for your convenience. Obviously a <code>static import</code> of <code>StandardCharsets</code> may be useful as well.</span></text><author><a class="comment-user" href="/users/589259/maarten-bodewes" title="47,652 reputation">Maarten Bodewes</a></author></comment><comment><text><span class="comment-copy">Thanks for updating. I really appreciate.</span></text><author><a class="comment-user" href="/users/457714/iabhi" title="899 reputation">iabhi</a></author></comment><comment><text><span class="comment-copy">I'm assuming "IV" stands for "Initialisation Vector", you should say so at least once, perhaps the first time it's mentioned, for those who don't know. Also, it'd be nice to have links explaining why that particular configuration of Cipher is desirable.</span></text><author><a class="comment-user" href="/users/353674/hamid" title="2,034 reputation">Hamid</a></author></comment><comment><text><span class="comment-copy">@Hamid OK, changed the text a bit, I did not expect this rather general advice to get so popular :)</span></text><author><a class="comment-user" href="/users/589259/maarten-bodewes" title="47,652 reputation">Maarten Bodewes</a></author></comment><comment><text><span class="comment-copy">@owlstead Thanks for the tweaks, looks good now. I'm surprised you only have 7 upvotes considering 28k+ views right now. Just to clarify for those who arent sure, use a different, random IV for EACH message, never re-use the same IV for multiple messages. Patterns == Vulnerabilities.</span></text><author><a class="comment-user" href="/users/353674/hamid" title="2,034 reputation">Hamid</a></author></comment><comment><text><span class="comment-copy">Great post. It might be a good idea to explain why the checksum would be important.</span></text><author><a class="comment-user" href="/users/977026/schiavini" title="2,008 reputation">Schiavini</a></author></comment><comment><text><span class="comment-copy">@Schiavini thanks, update the question a bit more.</span></text><author><a class="comment-user" href="/users/589259/maarten-bodewes" title="47,652 reputation">Maarten Bodewes</a></author></comment><comment><text><span class="comment-copy">Use this solution instead of mine. This is the correct answer and should be markt.</span></text><author><a class="comment-user" href="/users/1786723/zerotek" title="694 reputation">ZeroTek</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I had a similar problem and for encrypt/decrypt i came up with this solution:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> generateKey</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> password</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> keyStart </span><span class="pun">=</span><span class="pln"> password</span><span class="pun">.</span><span class="pln">getBytes</span><span class="pun">(</span><span class="str">"UTF-8"</span><span class="pun">);</span><span class="pln">

    </span><span class="typ">KeyGenerator</span><span class="pln"> kgen </span><span class="pun">=</span><span class="pln"> </span><span class="typ">KeyGenerator</span><span class="pun">.</span><span class="pln">getInstance</span><span class="pun">(</span><span class="str">"AES"</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">SecureRandom</span><span class="pln"> sr </span><span class="pun">=</span><span class="pln"> </span><span class="typ">SecureRandom</span><span class="pun">.</span><span class="pln">getInstance</span><span class="pun">(</span><span class="str">"SHA1PRNG"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Crypto"</span><span class="pun">);</span><span class="pln">
    sr</span><span class="pun">.</span><span class="pln">setSeed</span><span class="pun">(</span><span class="pln">keyStart</span><span class="pun">);</span><span class="pln">
    kgen</span><span class="pun">.</span><span class="pln">init</span><span class="pun">(</span><span class="lit">128</span><span class="pun">,</span><span class="pln"> sr</span><span class="pun">);</span><span class="pln">
    </span><span class="typ">SecretKey</span><span class="pln"> skey </span><span class="pun">=</span><span class="pln"> kgen</span><span class="pun">.</span><span class="pln">generateKey</span><span class="pun">();</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> skey</span><span class="pun">.</span><span class="pln">getEncoded</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> encodeFile</span><span class="pun">(</span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> fileData</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">

        </span><span class="typ">SecretKeySpec</span><span class="pln"> skeySpec </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">SecretKeySpec</span><span class="pun">(</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> </span><span class="str">"AES"</span><span class="pun">);</span><span class="pln">
        </span><span class="typ">Cipher</span><span class="pln"> cipher </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Cipher</span><span class="pun">.</span><span class="pln">getInstance</span><span class="pun">(</span><span class="str">"AES"</span><span class="pun">);</span><span class="pln">
        cipher</span><span class="pun">.</span><span class="pln">init</span><span class="pun">(</span><span class="typ">Cipher</span><span class="pun">.</span><span class="pln">ENCRYPT_MODE</span><span class="pun">,</span><span class="pln"> skeySpec</span><span class="pun">);</span><span class="pln">

        </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> encrypted </span><span class="pun">=</span><span class="pln"> cipher</span><span class="pun">.</span><span class="pln">doFinal</span><span class="pun">(</span><span class="pln">fileData</span><span class="pun">);</span><span class="pln">

        </span><span class="kwd">return</span><span class="pln"> encrypted</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> decodeFile</span><span class="pun">(</span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> fileData</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">SecretKeySpec</span><span class="pln"> skeySpec </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">SecretKeySpec</span><span class="pun">(</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> </span><span class="str">"AES"</span><span class="pun">);</span><span class="pln">
        </span><span class="typ">Cipher</span><span class="pln"> cipher </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Cipher</span><span class="pun">.</span><span class="pln">getInstance</span><span class="pun">(</span><span class="str">"AES"</span><span class="pun">);</span><span class="pln">
        cipher</span><span class="pun">.</span><span class="pln">init</span><span class="pun">(</span><span class="typ">Cipher</span><span class="pun">.</span><span class="pln">DECRYPT_MODE</span><span class="pun">,</span><span class="pln"> skeySpec</span><span class="pun">);</span><span class="pln">

        </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> decrypted </span><span class="pun">=</span><span class="pln"> cipher</span><span class="pun">.</span><span class="pln">doFinal</span><span class="pun">(</span><span class="pln">fileData</span><span class="pun">);</span><span class="pln">

        </span><span class="kwd">return</span><span class="pln"> decrypted</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span></code></pre>
<p>To save a encrypted file to sd do:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="typ">File</span><span class="pln"> file </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">File</span><span class="pun">(</span><span class="typ">Environment</span><span class="pun">.</span><span class="pln">getExternalStorageDirectory</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="typ">File</span><span class="pun">.</span><span class="pln">separator </span><span class="pun">+</span><span class="pln"> </span><span class="str">"your_folder_on_sd"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"file_name"</span><span class="pun">);</span><span class="pln">
</span><span class="typ">BufferedOutputStream</span><span class="pln"> bos </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BufferedOutputStream</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileOutputStream</span><span class="pun">(</span><span class="pln">file</span><span class="pun">));</span><span class="pln">
</span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> yourKey </span><span class="pun">=</span><span class="pln"> generateKey</span><span class="pun">(</span><span class="str">"password"</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> filesBytes </span><span class="pun">=</span><span class="pln"> encodeFile</span><span class="pun">(</span><span class="pln">yourKey</span><span class="pun">,</span><span class="pln"> yourByteArrayContainigDataToEncrypt</span><span class="pun">);</span><span class="pln">
bos</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">fileBytes</span><span class="pun">);</span><span class="pln">
bos</span><span class="pun">.</span><span class="pln">flush</span><span class="pun">();</span><span class="pln">
bos</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span></code></pre>
<p>To decode a file use:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> yourKey </span><span class="pun">=</span><span class="pln"> generateKey</span><span class="pun">(</span><span class="str">"password"</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> decodedData </span><span class="pun">=</span><span class="pln"> decodeFile</span><span class="pun">(</span><span class="pln">yourKey</span><span class="pun">,</span><span class="pln"> bytesOfYourFile</span><span class="pun">);</span></code></pre>
<p>For reading in a file to a byte Array there a different way out there. A Example: <a href="http://examples.javacodegeeks.com/core-java/io/fileinputstream/read-file-in-byte-array-with-fileinputstream/">http://examples.javacodegeeks.com/core-java/io/fileinputstream/read-file-in-byte-array-with-fileinputstream/</a></p>
</div></text><author><a href="/users/1786723/zerotek">ZeroTek</a></author><comments><comment><text><span class="comment-copy">I attempted to use this solution, but if I encrypt the file from the Android device I am unable to decrypt the file from my computer. It seems that the key that is generated isn't consistent. Do you know of a solution to that?</span></text><author><a class="comment-user" href="/users/1566189/minhaz1" title="525 reputation">minhaz1</a></author></comment><comment><text><span class="comment-copy">I already experienced some issus with this solution myself. It seems that different devices, android versions (and a computer of course) are creating different keys due to different versions of the underlying algorithm. My solution was to add the Charset and the Provider for SecureRandom. This solved my problems and should now work on all devices. I edited my Answer.</span></text><author><a class="comment-user" href="/users/1786723/zerotek" title="694 reputation">ZeroTek</a></author></comment><comment><text><span class="comment-copy">Further reading on <code>SecureRandom</code> not working among different devices: <a href="http://stackoverflow.com/questions/13433529/android-4-2-broke-my-encrypt-decrypt-code-and-the-provided-solutions-dont-work" title="android 4 2 broke my encrypt decrypt code and the provided solutions dont work">stackoverflow.com/questions/13433529/…</a></span></text><author><a class="comment-user" href="/users/2241463/piovezan" title="2,080 reputation">Piovezan</a></author></comment><comment><text><span class="comment-copy">what is <code>yourByteArrayContainigDataToEncrypt</code> in the code above</span></text><author><a class="comment-user" href="/users/1885639/kartheek-s" title="2,086 reputation">Kartheek s</a></author></comment><comment><text><span class="comment-copy">This is a copy of Android snippets, and it uses the same, <b>incorrect</b> method of deriving the key. Use this and you may loose your data.</span></text><author><a class="comment-user" href="/users/589259/maarten-bodewes" title="47,652 reputation">Maarten Bodewes</a></author></comment><comment><text><span class="comment-copy">yourByteArrayContainigDataToEncrypt is the Data of your file you want to encrypt sored in an byte[] array. Refer to the link inside my post on how to read a file into a byte array. But: owlstead is right this solution can cause some trouble. Use ChiperOutputStream instead as mentioned above.</span></text><author><a class="comment-user" href="/users/1786723/zerotek" title="694 reputation">ZeroTek</a></author></comment><comment><text><span class="comment-copy">@MaartenBodewes I'm almost new on concpets of cyphering to decrypt or encyprt a file. Could you point us to the right direction of how to cypher a file.  were I can find good lectures about it?</span></text><author><a class="comment-user" href="/users/1200059/pedro-teran" title="793 reputation">Pedro Teran</a></author></comment><comment><text><span class="comment-copy">@MaartenBodewes, please argument your statement, why do you think it is incorrect method of deriving the key? How can it be improved?</span></text><author><a class="comment-user" href="/users/1808829/sa-qada" title="1,591 reputation">Sa Qada</a></author></comment><comment><text><span class="comment-copy">This uses a random number generator to derive keys. This RNG does not need  to rely only on the seed and the exact algorithm isn't specified. Instead lookup correct use of PBKDF2 or similar.</span></text><author><a class="comment-user" href="/users/589259/maarten-bodewes" title="47,652 reputation">Maarten Bodewes</a></author></comment><comment><text><span class="comment-copy">Crypto has now been depreciated in android N - <a href="https://android-developers.googleblog.com/2016/06/security-crypto-provider-deprecated-in.html" rel="nofollow noreferrer">android-developers.googleblog.com/2016/06/…</a></span></text><author><a class="comment-user" href="/users/1592783/jackdh" title="707 reputation">jackdh</a></author></comment><comment><text><span class="comment-copy">This answer is 4 years old now and wasn't even working very well at that time..</span></text><author><a class="comment-user" href="/users/1786723/zerotek" title="694 reputation">ZeroTek</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I had the same problem, i got the solution from this code.</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> ALGO </span><span class="pun">=</span><span class="pln"> </span><span class="str">"AES"</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> keyValue </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="str">'o'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'n'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'e'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'n'</span><span class="pun">,</span><span class="str">'e'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'t'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'e'</span><span class="pun">,</span><span class="str">'d'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'o'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'c'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'e'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'i'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'r'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'s'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'r'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'p'</span><span class="pln"> </span><span class="pun">};</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> decrypt</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> encryptedData</span><span class="pun">){</span><span class="pln">
        </span><span class="typ">String</span><span class="pln"> decryptedValue </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">try</span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Key</span><span class="pln"> key </span><span class="pun">=</span><span class="pln"> generateKey</span><span class="pun">();</span><span class="pln">
        </span><span class="typ">Cipher</span><span class="pln"> c </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Cipher</span><span class="pun">.</span><span class="pln">getInstance</span><span class="pun">(</span><span class="pln">ALGO</span><span class="pun">);</span><span class="pln">
        c</span><span class="pun">.</span><span class="pln">init</span><span class="pun">(</span><span class="typ">Cipher</span><span class="pun">.</span><span class="pln">DECRYPT_MODE</span><span class="pun">,</span><span class="pln"> key</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> decordedValue </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> BASE64Decoder</span><span class="pun">().</span><span class="pln">decodeBuffer</span><span class="pun">(</span><span class="pln">encryptedData</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> decValue </span><span class="pun">=</span><span class="pln"> c</span><span class="pun">.</span><span class="pln">doFinal</span><span class="pun">(</span><span class="pln">decordedValue</span><span class="pun">);</span><span class="pln">
        decryptedValue </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">String</span><span class="pun">(</span><span class="pln">decValue</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">Exception</span><span class="pln"> e</span><span class="pun">){</span><span class="pln">
        </span><span class="com">//LOGGER.error("In TD:" + e);</span><span class="pln">
        </span><span class="com">//Teneno_StartupService.loadForConnectionFailed();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> decryptedValue</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">Key</span><span class="pln"> generateKey</span><span class="pun">(){</span><span class="pln">
    </span><span class="typ">Key</span><span class="pln"> key </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">SecretKeySpec</span><span class="pun">(</span><span class="pln">keyValue</span><span class="pun">,</span><span class="pln"> ALGO</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> key</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/3373658/ankit-chaudhary">Ankit Chaudhary</a></author><comments><comment><text><span class="comment-copy">Answers on this site should not just consist of source code, please explain why this is a good solution (-1 because it isn't, it uses ECB encoding for starters).</span></text><author><a class="comment-user" href="/users/589259/maarten-bodewes" title="47,652 reputation">Maarten Bodewes</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Use a CipherOutputStream or CipherInputStream with a Cipher and your FileOutputStream / FileInputStream.</p>
</div></text><author><a href="/users/1429149/shadab-shah">shadab shah</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>We have a same problem, and its solved by someone in my question thread.
You should just take a look at: CipherInputStream and CipherOutputStream. They are used to encrypt and decrypt byte streams.
for the detailed source code check out Kiril answer in this link : <a href="http://stackoverflow.com/questions/10782187/how-to-encrypt-file-from-sd-card-using-aes-in-android">How to encrypt file from sd card using AES in Android?</a></p>
</div></text><author><a href="/users/1421273/user1421273">user1421273</a></author><comments><comment><text><span class="comment-copy">@user142173 can u pls respond how u resolve ur issue the code in ur link is not working</span></text><author><a class="comment-user" href="/users/1427037/erum" title="380 reputation">Erum</a></author></comment></comments></answer></answers></post>