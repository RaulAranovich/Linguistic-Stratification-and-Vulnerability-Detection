<?xml version="1.0" encoding="utf-8"?>
<post><title>security - How to validate uploaded file in ASP.NET MVC? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I have a Create action that takes an entity object and a HttpPostedFileBase image. The image does not belong to the entity model.</p>
<p>I can save the entity object in the database and the file in disk, but I am not sure how to validate these business rules:</p>
<ul>
<li>Image is required</li>
<li>Content type must be "image/png"</li>
<li>Must not exceed 1MB</li>
</ul>
</div></text><author><a href="/users/638990/serdar">Serdar</a></author><comments/></question><answers><answer><text><div class="post-text" itemprop="text">
<p>A custom validation attribute is one way to go:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ValidateFileAttribute</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">RequiredAttribute</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsValid</span><span class="pun">(</span><span class="kwd">object</span><span class="pln"> value</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">var</span><span class="pln"> file </span><span class="pun">=</span><span class="pln"> value </span><span class="kwd">as</span><span class="pln"> </span><span class="typ">HttpPostedFileBase</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">file </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">file</span><span class="pun">.</span><span class="typ">ContentLength</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="lit">1024</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="lit">1024</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">try</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">using</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> img </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Image</span><span class="pun">.</span><span class="typ">FromStream</span><span class="pun">(</span><span class="pln">file</span><span class="pun">.</span><span class="typ">InputStream</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">return</span><span class="pln"> img</span><span class="pun">.</span><span class="typ">RawFormat</span><span class="pun">.</span><span class="typ">Equals</span><span class="pun">(</span><span class="typ">ImageFormat</span><span class="pun">.</span><span class="typ">Png</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>and then apply on your model:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyViewModel</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="pun">[</span><span class="typ">ValidateFile</span><span class="pun">(</span><span class="typ">ErrorMessage</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Please select a PNG image smaller than 1MB"</span><span class="pun">)]</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">HttpPostedFileBase</span><span class="pln"> </span><span class="typ">File</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>The controller might look like this:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HomeController</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">Controller</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">ActionResult</span><span class="pln"> </span><span class="typ">Index</span><span class="pun">()</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">var</span><span class="pln"> model </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">MyViewModel</span><span class="pun">();</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">View</span><span class="pun">(</span><span class="pln">model</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="pun">[</span><span class="typ">HttpPost</span><span class="pun">]</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">ActionResult</span><span class="pln"> </span><span class="typ">Index</span><span class="pun">(</span><span class="typ">MyViewModel</span><span class="pln"> model</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="typ">ModelState</span><span class="pun">.</span><span class="typ">IsValid</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">View</span><span class="pun">(</span><span class="pln">model</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="com">// The uploaded image corresponds to our business rules =&gt; process it</span><span class="pln">

        </span><span class="kwd">var</span><span class="pln"> fileName </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Path</span><span class="pun">.</span><span class="typ">GetFileName</span><span class="pun">(</span><span class="pln">model</span><span class="pun">.</span><span class="typ">File</span><span class="pun">.</span><span class="typ">FileName</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">var</span><span class="pln"> path </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Path</span><span class="pun">.</span><span class="typ">Combine</span><span class="pun">(</span><span class="typ">Server</span><span class="pun">.</span><span class="typ">MapPath</span><span class="pun">(</span><span class="str">"~/App_Data"</span><span class="pun">),</span><span class="pln"> fileName</span><span class="pun">);</span><span class="pln">
        model</span><span class="pun">.</span><span class="typ">File</span><span class="pun">.</span><span class="typ">SaveAs</span><span class="pun">(</span><span class="pln">path</span><span class="pun">);</span><span class="pln">

        </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">Content</span><span class="pun">(</span><span class="str">"Thanks for uploading"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"text/plain"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>and the view:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="lit">@model</span><span class="pln"> </span><span class="typ">MyViewModel</span><span class="pln">

</span><span class="lit">@using</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Html</span><span class="pun">.</span><span class="typ">BeginForm</span><span class="pun">(</span><span class="str">"Index"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"Home"</span><span class="pun">,</span><span class="pln"> </span><span class="typ">FormMethod</span><span class="pun">.</span><span class="typ">Post</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> enctype </span><span class="pun">=</span><span class="pln"> </span><span class="str">"multipart/form-data"</span><span class="pln"> </span><span class="pun">}))</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="lit">@Html</span><span class="pun">.</span><span class="typ">LabelFor</span><span class="pun">(</span><span class="pln">x </span><span class="pun">=&gt;</span><span class="pln"> x</span><span class="pun">.</span><span class="typ">File</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">&lt;</span><span class="pln">input type</span><span class="pun">=</span><span class="str">"file"</span><span class="pln"> name</span><span class="pun">=</span><span class="str">"@Html.NameFor(x =&gt; x.File)"</span><span class="pln"> id</span><span class="pun">=</span><span class="str">"@Html.IdFor(x =&gt; x.File)"</span><span class="pln"> </span><span class="pun">/&gt;</span><span class="pln">
    </span><span class="lit">@Html</span><span class="pun">.</span><span class="typ">ValidationMessageFor</span><span class="pun">(</span><span class="pln">x </span><span class="pun">=&gt;</span><span class="pln"> x</span><span class="pun">.</span><span class="typ">File</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">&lt;</span><span class="pln">input type</span><span class="pun">=</span><span class="str">"submit"</span><span class="pln"> value</span><span class="pun">=</span><span class="str">"upload"</span><span class="pln"> </span><span class="pun">/&gt;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/29407/darin-dimitrov">Darin Dimitrov</a></author><comments><comment><text><span class="comment-copy">+1 for the ImageFormat stuff - SOlves a problem I hadn't even thought about yet!</span></text><author><a class="comment-user" href="/users/571117/bonyt" title="8,199 reputation">BonyT</a></author></comment><comment><text><span class="comment-copy">thank you so much, really appreciate it.</span></text><author><span class="comment-user">user386167</span></author></comment><comment><text><span class="comment-copy">Awesome stuff.  Just saved me a lot of time.</span></text><author><a class="comment-user" href="/users/399584/major-productions-llc" title="3,936 reputation">Major Productions LLC</a></author></comment><comment><text><span class="comment-copy">What would be the equivalent of <code>Image.FromStream</code> for PDFs?</span></text><author><a class="comment-user" href="/users/1242061/escist" title="437 reputation">escist</a></author></comment><comment><text><span class="comment-copy">@escist, there isn't. The .NET framework doesn't support the PDF format. You will have to use a third party library if you want to manipulate PDF files. <code>iTextSharp</code> is a popular open source library. There are also many other commercial libraries. If you don't want to use a third party library you could look at the first bytes of the stream to determine whether it is a valid PDF. Bear in mind though that there are different versions of the PDF format and if you want an universal solution you have to take into account them.</span></text><author><a class="comment-user" href="/users/29407/darin-dimitrov" title="730,876 reputation">Darin Dimitrov</a></author></comment><comment><text><span class="comment-copy">Thank you @DarinDimitrov</span></text><author><a class="comment-user" href="/users/1242061/escist" title="437 reputation">escist</a></author></comment><comment><text><span class="comment-copy">@DarinDimitrov is this the most paranoid validation? can any more checks being added?</span></text><author><a class="comment-user" href="/users/638990/serdar" title="783 reputation">Serdar</a></author></comment><comment><text><span class="comment-copy">The only problem with this approach is that it only fires if your uploaded file doesn't exist (as it inherits from RequiredAttribute.)  You need to then inherit from ValidationAttribute instead of RequiredAttribute</span></text><author><a class="comment-user" href="/users/2247506/evonet" title="1,091 reputation">Evonet</a></author></comment><comment><text><span class="comment-copy">When is the file ever valid? It doesn't return true at any point as far as I can see.</span></text><author><a class="comment-user" href="/users/221683/ian-warburton" title="4,111 reputation">Ian Warburton</a></author></comment><comment><text><span class="comment-copy">@IanWarburton, didn't you see the following line: <code>return img.RawFormat.Equals(ImageFormat.Png);</code>?</span></text><author><a class="comment-user" href="/users/29407/darin-dimitrov" title="730,876 reputation">Darin Dimitrov</a></author></comment><comment><text><span class="comment-copy">I do now!!!!!!!</span></text><author><a class="comment-user" href="/users/221683/ian-warburton" title="4,111 reputation">Ian Warburton</a></author></comment><comment><text><span class="comment-copy">...have an up vote.</span></text><author><a class="comment-user" href="/users/221683/ian-warburton" title="4,111 reputation">Ian Warburton</a></author></comment><comment><text><span class="comment-copy">This will not work since the line 'var file = value as HttpPostedFileBase;' in method isValid will return false as value is of type array HttpPostedFileBase[]; @Darin Dimitrov</span></text><author><a class="comment-user" href="/users/2083526/gotalovecode" title="597 reputation">GotaloveCode</a></author></comment><comment><text><span class="comment-copy">There are several things wrong with this answer, but people want to knee-jerk reject edits which fix the problems, so hopefully everyone reading this answer figures them out.</span></text><author><a class="comment-user" href="/users/2619157/jakotheshadows" title="1,040 reputation">Jakotheshadows</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Based on Darin Dimitrov's answer which I have found very helpful, I have an adapted version which allows checks for multiple file types, which is what I was initially looking for. </p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">override</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsValid</span><span class="pun">(</span><span class="kwd">object</span><span class="pln"> value</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">bool</span><span class="pln"> isValid </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">var</span><span class="pln"> file </span><span class="pun">=</span><span class="pln"> value </span><span class="kwd">as</span><span class="pln"> </span><span class="typ">HttpPostedFileBase</span><span class="pun">;</span><span class="pln">

        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">file </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> file</span><span class="pun">.</span><span class="typ">ContentLength</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="lit">1024</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="lit">1024</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> isValid</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IsFileTypeValid</span><span class="pun">(</span><span class="pln">file</span><span class="pun">))</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            isValid </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">

        </span><span class="kwd">return</span><span class="pln"> isValid</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsFileTypeValid</span><span class="pun">(</span><span class="typ">HttpPostedFileBase</span><span class="pln"> file</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">bool</span><span class="pln"> isValid </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">

        </span><span class="kwd">try</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">using</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> img </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Image</span><span class="pun">.</span><span class="typ">FromStream</span><span class="pun">(</span><span class="pln">file</span><span class="pun">.</span><span class="typ">InputStream</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IsOneOfValidFormats</span><span class="pun">(</span><span class="pln">img</span><span class="pun">.</span><span class="typ">RawFormat</span><span class="pun">))</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    isValid </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
                </span><span class="pun">}</span><span class="pln"> 
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">catch</span><span class="pln"> 
        </span><span class="pun">{</span><span class="pln">
            </span><span class="com">//Image is invalid</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> isValid</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsOneOfValidFormats</span><span class="pun">(</span><span class="typ">ImageFormat</span><span class="pln"> rawFormat</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">ImageFormat</span><span class="pun">&gt;</span><span class="pln"> formats </span><span class="pun">=</span><span class="pln"> getValidFormats</span><span class="pun">();</span><span class="pln">

        </span><span class="kwd">foreach</span><span class="pln"> </span><span class="pun">(</span><span class="typ">ImageFormat</span><span class="pln"> format </span><span class="kwd">in</span><span class="pln"> formats</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">rawFormat</span><span class="pun">.</span><span class="typ">Equals</span><span class="pun">(</span><span class="pln">format</span><span class="pun">))</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">ImageFormat</span><span class="pun">&gt;</span><span class="pln"> getValidFormats</span><span class="pun">()</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">ImageFormat</span><span class="pun">&gt;</span><span class="pln"> formats </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">ImageFormat</span><span class="pun">&gt;();</span><span class="pln">
        formats</span><span class="pun">.</span><span class="typ">Add</span><span class="pun">(</span><span class="typ">ImageFormat</span><span class="pun">.</span><span class="typ">Png</span><span class="pun">);</span><span class="pln">
        formats</span><span class="pun">.</span><span class="typ">Add</span><span class="pun">(</span><span class="typ">ImageFormat</span><span class="pun">.</span><span class="typ">Jpeg</span><span class="pun">);</span><span class="pln">
        formats</span><span class="pun">.</span><span class="typ">Add</span><span class="pun">(</span><span class="typ">ImageFormat</span><span class="pun">.</span><span class="typ">Gif</span><span class="pun">);</span><span class="pln">
        </span><span class="com">//add types here</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> formats</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/1168821/elizabeth-hamlet">Elizabeth Hamlet</a></author><comments><comment><text><span class="comment-copy">This will not work since the line 'var file = value as HttpPostedFileBase;' in method isValid will return false as value is of type array HttpPostedFileBase[]; @Elizabeth Hamlet</span></text><author><a class="comment-user" href="/users/2083526/gotalovecode" title="597 reputation">GotaloveCode</a></author></comment><comment><text><span class="comment-copy">Help please. In IsValid function, I get null for value and thus null for file as well. Following lines are from my ViewModel: [ValidateFile(ErrorMessage = "Please select an image file")] [DataType(DataType.Upload)] [DisplayName("File")] public HttpPostedFileBase FileAttachment { get; set; } Thanks.</span></text><author><a class="comment-user" href="/users/1472691/corix010" title="145 reputation">corix010</a></author></comment><comment><text><span class="comment-copy">Never mind got it working. I don't have the FileAttachment property in [Bind(Include = "...")] in my controller.</span></text><author><a class="comment-user" href="/users/1472691/corix010" title="145 reputation">corix010</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>You may want to consider saving the image to database also:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln">  </span><span class="kwd">using</span><span class="pln"> </span><span class="pun">(</span><span class="typ">MemoryStream</span><span class="pln"> mstream </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">MemoryStream</span><span class="pun">())</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">context</span><span class="pun">.</span><span class="typ">Request</span><span class="pun">.</span><span class="typ">Browser</span><span class="pun">.</span><span class="typ">Browser</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="str">"IE"</span><span class="pun">)</span><span class="pln">
                        context</span><span class="pun">.</span><span class="typ">Request</span><span class="pun">.</span><span class="typ">Files</span><span class="pun">[</span><span class="lit">0</span><span class="pun">].</span><span class="typ">InputStream</span><span class="pun">.</span><span class="typ">CopyTo</span><span class="pun">(</span><span class="pln">mstream</span><span class="pun">);</span><span class="pln">
                    </span><span class="kwd">else</span><span class="pln">
                        context</span><span class="pun">.</span><span class="typ">Request</span><span class="pun">.</span><span class="typ">InputStream</span><span class="pun">.</span><span class="typ">CopyTo</span><span class="pun">(</span><span class="pln">mstream</span><span class="pun">);</span><span class="pln">

                    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="typ">ValidateIcon</span><span class="pun">(</span><span class="pln">mstream</span><span class="pun">))</span><span class="pln">
                    </span><span class="pun">{</span><span class="pln">
                        </span><span class="typ">Icon</span><span class="pln"> icon </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Icon</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">ImageData</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> mstream</span><span class="pun">.</span><span class="typ">ToArray</span><span class="pun">(),</span><span class="pln"> </span><span class="typ">MimeType</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> context</span><span class="pun">.</span><span class="typ">Request</span><span class="pun">.</span><span class="typ">ContentType</span><span class="pln"> </span><span class="pun">};</span><span class="pln">
                        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">iconRepository</span><span class="pun">.</span><span class="typ">SaveOrUpdate</span><span class="pun">(</span><span class="pln">icon</span><span class="pun">);</span><span class="pln">
                    </span><span class="pun">}</span><span class="pln">
                </span><span class="pun">}</span></code></pre>
<p>I use this with NHibernate - entity defined:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln"> </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Icon</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> id</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> imageData</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> mimeType</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">this</span><span class="pun">.</span><span class="typ">Id</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> id</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">this</span><span class="pun">.</span><span class="typ">ImageData</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> imageData</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">this</span><span class="pun">.</span><span class="typ">MimeType</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> mimeType</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">virtual</span><span class="pln"> </span><span class="kwd">byte</span><span class="pun">[]</span><span class="pln"> </span><span class="typ">ImageData</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">virtual</span><span class="pln"> </span><span class="kwd">string</span><span class="pln"> </span><span class="typ">MimeType</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span></code></pre>
<p>Then you can return the image as a FileContentResult:</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="pln"> </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">FileContentResult</span><span class="pln"> </span><span class="typ">GetIcon</span><span class="pun">(</span><span class="kwd">int</span><span class="pun">?</span><span class="pln"> iconId</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">try</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">iconId</span><span class="pun">.</span><span class="typ">HasValue</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">

            </span><span class="typ">Icon</span><span class="pln"> icon </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">iconRepository</span><span class="pun">.</span><span class="typ">Get</span><span class="pun">(</span><span class="pln">iconId</span><span class="pun">.</span><span class="typ">Value</span><span class="pun">);</span><span class="pln">

            </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">File</span><span class="pun">(</span><span class="pln">icon</span><span class="pun">.</span><span class="typ">ImageData</span><span class="pun">,</span><span class="pln"> icon</span><span class="pun">.</span><span class="typ">MimeType</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Exception</span><span class="pln"> ex</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">Log</span><span class="pun">.</span><span class="typ">ErrorFormat</span><span class="pun">(</span><span class="str">"ImageController: GetIcon Critical Error: {0}"</span><span class="pun">,</span><span class="pln"> ex</span><span class="pun">);</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span></code></pre>
<p>Note that this is using ajax submit. Easier to access the data stream otherwise.</p>
</div></text><author><a href="/users/571117/bonyt">BonyT</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>Here is a way to do it using viewmodel, take a look at whole code here</p>
<p><a href="http://codeanalyze.com/Articles/Details/6/MVC-5-Validate-Posted-Files-view-models-viewmodels" rel="nofollow noreferrer">Asp.Net MVC file validation for size and type</a>
Create a viewmodel as shown below with FileSize and FileTypes </p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ValidateFiles</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="pun">[</span><span class="typ">FileSize</span><span class="pun">(</span><span class="lit">10240</span><span class="pun">)]</span><span class="pln">
    </span><span class="pun">[</span><span class="typ">FileTypes</span><span class="pun">(</span><span class="str">"doc,docx,xlsx"</span><span class="pun">)]</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">HttpPostedFileBase</span><span class="pln"> </span><span class="typ">File</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">get</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">set</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Create custom attributes</p>
<pre class="default prettyprint prettyprinted" style=""><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FileSizeAttribute</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">ValidationAttribute</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">readonly</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> _maxSize</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">FileSizeAttribute</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> maxSize</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        _maxSize </span><span class="pun">=</span><span class="pln"> maxSize</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="com">//.....</span><span class="pln">
    </span><span class="com">//.....</span><span class="pln">
</span><span class="pun">}</span><span class="pln">



</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FileTypesAttribute</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">ValidationAttribute</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">readonly</span><span class="pln"> </span><span class="typ">List</span><span class="str">&lt;string&gt;</span><span class="pln"> _types</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">FileTypesAttribute</span><span class="pun">(</span><span class="kwd">string</span><span class="pln"> types</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        _types </span><span class="pun">=</span><span class="pln"> types</span><span class="pun">.</span><span class="typ">Split</span><span class="pun">(</span><span class="str">','</span><span class="pun">).</span><span class="typ">ToList</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> 
    </span><span class="com">//....</span><span class="pln">
    </span><span class="com">//...</span><span class="pln">
</span><span class="pun">}</span></code></pre>
</div></text><author><a href="/users/7015584/jeff-d">Jeff D</a></author><comments/></answer></answers></post>