<?xml version="1.0" encoding="utf-8"?>
<post><title>windows - How to create .pfx file from certificate and private key? - Stack Overflow</title><question><text><div class="post-text" itemprop="text">
<p>I need .pfx file to install https on website on IIS. </p>
<p>I have two separate files: certificate (.cer or pem) and private key (.crt) but IIS accepts only .pfx files.</p>
<p>I obviously installed certificate and it is available in certificate manager (mmc) but when I select Certificate Export Wizard I cannot select PFX format (it's greyed out)</p>
<p>Are there any tools to do that or C# examples of doing that programtically?</p>
</div></text><author><a href="/users/608639/jww">jww</a></author><comments><comment><text><span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/808669/convert-a-cert-pem-certificate-to-a-pfx-certificate">Convert a CERT/PEM certificate to a PFX certificate</a></span></text><author><a class="comment-user" href="/users/9453/daniel-dipaolo" title="36,035 reputation">Daniel DiPaolo</a></author></comment><comment><text><span class="comment-copy">true, but its answer is not clear and doesn't fix anything in my case</span></text><author><a class="comment-user owner" href="/users/159057/jlp" title="2,560 reputation">jlp</a></author></comment><comment><text><span class="comment-copy">openssl is the tool you need</span></text><author><a class="comment-user" href="/users/72562/alexl" title="5,822 reputation">alexl</a></author></comment><comment><text><span class="comment-copy">@alexl is there windows version?</span></text><author><a class="comment-user owner" href="/users/159057/jlp" title="2,560 reputation">jlp</a></author></comment><comment><text><span class="comment-copy"><a href="http://www.slproweb.com/products/Win32OpenSSL.html" rel="nofollow noreferrer">slproweb.com/products/Win32OpenSSL.html</a></span></text><author><a class="comment-user" href="/users/72562/alexl" title="5,822 reputation">alexl</a></author></comment><comment><text><span class="comment-copy">Openssl is entirely unnecessary in nearly all cases. Just added my answer (which I create a blog entry to provide). The irony is that when you generate the CSR as intended, you likely won't even need the PFX.</span></text><author><a class="comment-user" href="/users/901899/rainabba" title="1,205 reputation">rainabba</a></author></comment></comments></question><answers><answer><text><div class="post-text" itemprop="text">
<p>You will need to use openssl.</p>
<p><code>openssl pkcs12 -export -out domain.name.pfx -inkey domain.name.key -in domain.name.crt</code></p>
<p>The key file is just a text file with your private key in it.</p>
<p>You can install openssl from here: <a href="https://wiki.openssl.org/index.php/Binaries">openssl</a></p>
</div></text><author><a href="/users/1059026/jdehlin">jdehlin</a></author><comments><comment><text><span class="comment-copy">"The key file is just a text file with your private key in it."  True, except when it isn't.</span></text><author><a class="comment-user" href="/users/2056448/casey" title="2,172 reputation">Casey</a></author></comment><comment><text><span class="comment-copy">Thanks, this helped me a lot. I had to login to a Ubuntu server for this to actually work, but I was able to do it there and then SCP the file down. I also needed to use a combined certificate (my certificate is chained) but I had already concatenated the appropriate files to work with Nginx, on tht server so I just used that. Really helpful!</span></text><author><a class="comment-user" href="/users/1352644/j-t-mcguigan" title="491 reputation">J.T. McGuigan</a></author></comment><comment><text><span class="comment-copy">Thanks, I'll also add if you have a root CA or intermiediate cert you can append it by supplying multiple <b>-in</b> parameter: <code>openssl pkcs12 -export -out domain.name.pfx -inkey domain.name.key -in domain.name.crt -in intermediate.crt -in rootca.crt</code></span></text><author><a class="comment-user" href="/users/179630/gerrytan" title="24,573 reputation">gerrytan</a></author></comment><comment><text><span class="comment-copy">Did the job for me. As a minor note, running this on a Windows machine requires you to run openssl in an Administrator command prompt.</span></text><author><a class="comment-user" href="/users/1064169/martin-costello" title="3,534 reputation">Martin Costello</a></author></comment><comment><text><span class="comment-copy">Where do you get the key file from? I got an SSL cert issued, but I don't see a keyfile anywhere. Just got a p7b file and a bunch of *.crt files.</span></text><author><a class="comment-user" href="/users/1746803/knelis" title="3,443 reputation">Knelis</a></author></comment><comment><text><span class="comment-copy">There's a comprehensive blog on this process here: <a href="http://elgwhoppo.com/2013/04/18/combine-crt-and-key-files-into-a-pfx-with-openssl/" rel="nofollow noreferrer">elgwhoppo.com/2013/04/18/…</a></span></text><author><a class="comment-user" href="/users/361842/johnlbevan" title="9,489 reputation">JohnLBevan</a></author></comment><comment><text><span class="comment-copy">The openssl link is broken as the site no longer offers compiles binaries - try this: <a href="https://wiki.openssl.org/index.php/Binaries" rel="nofollow noreferrer">wiki.openssl.org/index.php/Binaries</a></span></text><author><a class="comment-user" href="/users/279255/marc" title="3,976 reputation">Marc</a></author></comment><comment><text><span class="comment-copy">Thanks, Marc. I've gone ahead and updated the link in the answer.</span></text><author><a class="comment-user" href="/users/1059026/jdehlin" title="3,378 reputation">jdehlin</a></author></comment><comment><text><span class="comment-copy">What about pkcs7? What is its command?</span></text><author><a class="comment-user" href="/users/811785/saeed-neamati" title="18,778 reputation">Saeed Neamati</a></author></comment><comment><text><span class="comment-copy">@JohnLBevan Thanks, that blog was useful</span></text><author><a class="comment-user" href="/users/883644/hofnarwillie" title="1,782 reputation">hofnarwillie</a></author></comment><comment><text><span class="comment-copy">@gerrytan, For combining intermediate certs I had to use <code>-certfile</code> option.</span></text><author><a class="comment-user" href="/users/1705521/santosh" title="509 reputation">Santosh</a></author></comment><comment><text><span class="comment-copy">Add <code>-name friendly.domain.name</code> to specify the "friendly name" used by IIS.</span></text><author><a class="comment-user" href="/users/184910/murraybiscuit" title="603 reputation">murraybiscuit</a></author></comment><comment><text><span class="comment-copy">Where I get the .key file? I generate the CSR with DigiCertUtil.exe, and I get .crt and .p7b files from GoDaddy...</span></text><author><a class="comment-user" href="/users/334963/gabrielizalo" title="139 reputation">Gabrielizalo</a></author></comment><comment><text><span class="comment-copy">I fixed it with the portable certificate converter from DigiCert: <a href="https://www.digicert.com/util/pfx-certificate-management-utility-import-export-instructions.htm" rel="nofollow noreferrer">digicert.com/util/…</a></span></text><author><a class="comment-user" href="/users/334963/gabrielizalo" title="139 reputation">Gabrielizalo</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>The Microsoft Pvk2Pfx command line utility seems to have the functionality you need:  </p>
<p>Pvk2Pfx (Pvk2Pfx.exe) is a command-line tool copies public key and private key information contained in .spc, .cer, and .pvk files to a Personal Information Exchange (.pfx) file.<br/>
<a href="http://msdn.microsoft.com/en-us/library/windows/hardware/ff550672%28v=vs.85%29.aspx">http://msdn.microsoft.com/en-us/library/windows/hardware/ff550672(v=vs.85).aspx</a> </p>
<p>Note: if you need/want/prefer a C# solution, then you may want to consider using the <a href="http://www.bouncycastle.org/">http://www.bouncycastle.org/</a> api.  </p>
</div></text><author><a href="/users/2686133/seymour">Seymour</a></author><comments><comment><text><span class="comment-copy">-spc argument for the .cer file</span></text><author><a class="comment-user" href="/users/38461/bozojoe" title="2,499 reputation">BozoJoe</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>If you're looking for a Windows GUI, check out DigiCert. I just used this and it was fairly simple.</p>
<p>Under the SSL tab, I first Imported the Certificate. Then once I selected the Certificate I was able to export as a PFX, both with and without a keyfile.</p>
<p><a href="https://www.digicert.com/util" rel="noreferrer">https://www.digicert.com/util</a></p>
</div></text><author><a href="/users/504836/joelnet">joelnet</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>You do NOT need openssl or makecert or any of that. You also don't need the personal key given to you by your CA. I can almost guarantee that the problem is that you expect to be able to use the key and cer files provided by your CA but they aren't based on "the IIS way". I'm so tired of seeing bad and difficult info out here that I decided to blog the subject and the solution. When you realize what's going on and see how easy it is, you will want to hug me :)</p>
<p>SSL Certs for IIS with PFX once and for all - SSL and IIS Explained - <a href="http://rainabba.blogspot.com/2014/03/ssl-certs-for-iis-with-pfx-once-and-for.html" rel="nofollow noreferrer">http://rainabba.blogspot.com/2014/03/ssl-certs-for-iis-with-pfx-once-and-for.html</a></p>
<p>Use IIS "Server Certificates" UI to "Generate Certificate Request" (the details of this request are out of the scope of this article but those details are critical). This will give you a CSR prepped for IIS. You then give that CSR to your CA and ask for a certificate. Then you take the CER/CRT file they give you, go back to IIS, "Complete Certificate Request" in the same place you generated the request. It may ask for a .CER and you might have a .CRT. They are the same thing. Just change the extension or use the <em>.</em> extension drop-down to select your .CRT. Now provide a proper "friendly name" (*.yourdomain.com, yourdomain.com, foo.yourdomain.com, etc..) THIS IS IMPORTANT! This MUST match what you setup the CSR for and what your CA provided you. If you asked for a wildcard, your CA must have approved and generated a wildcard and you must use the same. If your CSR was generated for foo.yourdomain.com, you MUST provide the same at this step.</p>
</div></text><author><a href="/users/901899/rainabba">rainabba</a></author><comments><comment><text><span class="comment-copy">PFX's aren't just for IIS though, can be used for code signing.  Unless I'm mistaken, signtool.exe and signcode.exe only accept a .pfx</span></text><author><a class="comment-user" href="/users/895744/eionrobb" title="402 reputation">EionRobb</a></author></comment><comment><text><span class="comment-copy">The question opened with: "I need .pfx file to install https on website on IIS."</span></text><author><a class="comment-user" href="/users/901899/rainabba" title="1,205 reputation">rainabba</a></author></comment><comment><text><span class="comment-copy">thanks a lot! for people doing this on IIS this is the best way :)</span></text><author><a class="comment-user" href="/users/608159/fozylet" title="912 reputation">fozylet</a></author></comment><comment><text><span class="comment-copy">Can you please put relevant content of your post in your answer please? That way, the answer is still relevant even if your blog disappears. You can still link to your blog. As it is, there is 0 useful information in the content of the answer.</span></text><author><a class="comment-user" href="/users/588306/deanna" title="18,956 reputation">Deanna</a></author></comment><comment><text><span class="comment-copy">@rainabba DUDE YOU ROCK I wanted to export a Godaddy SSL EV certificate I bought and this way I dont have to request a Code Signing certificate code!</span></text><author><a class="comment-user" href="/users/1136416/oscar-ortiz" title="512 reputation">Oscar Ortiz</a></author></comment><comment><text><span class="comment-copy">This is the simplest way if you're requesting a new certificate, however it won't work if you already have a certificate and/or private key (e.g. one you previously used with apache) because IIS's certificate signing request will generate a new private key.I find this aspect of IIS really annoying since all the "complete request" is doing is combining the private key with the public certificate to produce a pfx, why it couldn't just accept them as separate PEM formatted files who knows.</span></text><author><a class="comment-user" href="/users/35233/chris-chilvers" title="5,029 reputation">Chris Chilvers</a></author></comment><comment><text><span class="comment-copy">While I appreciate that your solution is most likely "the right way to do" things, I think it's more effort than meddling around with openssl - one tool, one commandline call, one password, done. Also I don't know if all ssl companies support this approach.</span></text><author><a class="comment-user" href="/users/3849229/jack-jackson" title="134 reputation">Jack Jackson</a></author></comment><comment><text><span class="comment-copy">@Deanna I've edited the post to include the part that I found most helpful. If other content would be needed please let me (or someone) know. Thanks!</span></text><author><a class="comment-user" href="/users/97964/jocull" title="7,627 reputation">jocull</a></author></comment><comment><text><span class="comment-copy">I'm afraid your answer doesn't help if the certificate was generated elsewhere. Okay, IIS expects to generate and hang on to the private key itself - sometimes that's just not an option.</span></text><author><a class="comment-user" href="/users/28832/staticsan" title="21,152 reputation">staticsan</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>I got a link with your requirement.<a href="http://elgwhoppo.com/2013/04/18/combine-crt-and-key-files-into-a-pfx-with-openssl/" rel="nofollow">Combine CRT and KEY Files into a PFX with OpenSSL</a></p>
<p><strong>Extracts from the above link:</strong></p>
<blockquote>
<p>First we need to extract the root CA certificate from the existing
  .crt file, because we need this later. So open up the .crt and click
  on the Certification Path tab.</p>
<p>Click the topmost certificate (In this case VeriSign) and hit View
  Certificate. Select the Details tab and hit Copy to File…</p>
<p>Select Base-64 encoded X.509 (.CER) certificate Save it as rootca.cer
  or something similar. Place it in the same folder as the other files.</p>
<p>Rename it from rootca.cer to rootca.crt Now we should have 3 files in
  our folder from which we can create a PFX file.</p>
<p>Here is where we need OpenSSL. We can either <a href="http://www.openssl.org/related/binaries.html" rel="nofollow">download and install it
  on Windows</a>, or simply open terminal on OSX.</p>
</blockquote>
<p><strong>EDIT:</strong></p>
<ol>
<li><p>There is a <a href="http://support.godaddy.com/help/article/4801/installing-an-ssl-certificate-in-microsoft-iis-7" rel="nofollow"><strong><em>support link with step by step information on how to do install the certificate.</em></strong></a></p></li>
<li><p>After successfully install, export the certificate, choose <code>.pfx</code> format, include private key.</p>
<p><a href="http://stackoverflow.com/questions/14651599/certificate-issue-key-or-pfx-from-p7b-and-crt/19374946#19374946"><strong>Important Note:</strong> : To export the certificate in .pfx format you need to follow the steps on the same machine from which you have requested the certificate</a>.</p></li>
<li><p>The imported file can be uploaded to server.</p></li>
</ol>
</div></text><author><a href="/users/1395266/sudhansu63">sudhAnsu63</a></author><comments><comment><text><span class="comment-copy">Can you please explain? how exactly you created the PFX file from CERT file? Where or how did you made the KEY file please all are confusing.</span></text><author><a class="comment-user" href="/users/285594/yumyumyum" title="6,978 reputation">YumYumYum</a></author></comment><comment><text><span class="comment-copy">Can you kindly explaine from here how they KEY file you got? e.g: <code>openssl pkcs12 -inkey example.com.key -in example.com.crt -export -out example.com.pfx</code></span></text><author><a class="comment-user" href="/users/285594/yumyumyum" title="6,978 reputation">YumYumYum</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>You need to use the makecert tool. </p>
<p>Open a command prompt as admin and type the following: </p>
<pre><code>makecert -sky exchange -r -n "CN=&lt;CertificateName&gt;" -pe -a sha1 -len 2048 -ss My "&lt;CertificateName&gt;.cer"
</code></pre>
<p>Where <code>&lt;CertifcateName&gt;</code> = the name of your cert to create. </p>
<p>Then you can open the Certificate Manager snap-in for the management console by typing certmgr.msc in the Start menu, click personal &gt; certificates &gt; and your cert should be available. </p>
<p>Here is an article. </p>
<p><a href="https://azure.microsoft.com/documentation/articles/cloud-services-certs-create/" rel="nofollow noreferrer">https://azure.microsoft.com/documentation/articles/cloud-services-certs-create/</a></p>
</div></text><author><a href="/users/473625/bentoncoding">BentOnCoding</a></author><comments><comment><text><span class="comment-copy">I can't. In export wizard pfx option is grayed out</span></text><author><a class="comment-user owner" href="/users/159057/jlp" title="2,560 reputation">jlp</a></author></comment><comment><text><span class="comment-copy">You should include a screenshot and include this information in the original post.</span></text><author><a class="comment-user" href="/users/473625/bentoncoding" title="12,918 reputation">BentOnCoding</a></author></comment><comment><text><span class="comment-copy">updated my posted. You should be able to follow these instructions to success. Good luck =D</span></text><author><a class="comment-user" href="/users/473625/bentoncoding" title="12,918 reputation">BentOnCoding</a></author></comment><comment><text><span class="comment-copy">my cert is available in certifacate manager. What I cannot do is to export if to pfx format. What does your command line instruction do?</span></text><author><a class="comment-user owner" href="/users/159057/jlp" title="2,560 reputation">jlp</a></author></comment><comment><text><span class="comment-copy">Try creating the cert as advised and let me know if it works. It'll probably take 5 minutes. The article linked gives a full explanation of whats going on.</span></text><author><a class="comment-user" href="/users/473625/bentoncoding" title="12,918 reputation">BentOnCoding</a></author></comment><comment><text><span class="comment-copy">It's not what i'm looking for. I don't want to make cert. myself. I bought cert from cert authority in 2 files. I'd rather use OpenSSL tool</span></text><author><a class="comment-user owner" href="/users/159057/jlp" title="2,560 reputation">jlp</a></author></comment><comment><text><span class="comment-copy">FYI, link is dead</span></text><author><a class="comment-user" href="/users/545657/pqsk" title="839 reputation">pqsk</a></author></comment><comment><text><span class="comment-copy">The link is updated, but i covered the important bits here. The link is just for source checking</span></text><author><a class="comment-user" href="/users/473625/bentoncoding" title="12,918 reputation">BentOnCoding</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>When you say the certificate is available in MMC, is it available under "Current User" or "Local Computer"? I've found that I can only export the private key if it is under Local Computer. </p>
<p>You can add the snap in for Certificates to MMC and choose which account it should manage certificates for. Choose Local Computer. If your certificate is not there, import it by right clicking the store and choosing All Tasks &gt; Import. </p>
<p>Now navigate to your imported certificate under the Local Computer version of the certificate snap in. Right click the certificate and choose All Tasks &gt; Export. The second page of the export wizard should ask if you want to export the private key. Select Yes. The PFX option will now be the only one available (it is grayed out if you select no and the option to export the private key isn't available under the Current User account). </p>
<p>You'll be asked to set a password for the PFX file and then to set the certificate name.</p>
</div></text><author><a href="/users/180516/ryan-elkins">Ryan Elkins</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>This is BY FAR the easiest way to convert *.cer to *.pfx files:</p>
<p>Just download the portable certificate converter from DigiCert:
<a href="https://www.digicert.com/util/pfx-certificate-management-utility-import-export-instructions.htm" rel="nofollow">https://www.digicert.com/util/pfx-certificate-management-utility-import-export-instructions.htm</a></p>
<p>Execute it, select a file and get your *.pfx!!</p>
</div></text><author><a href="/users/1613797/user1613797">user1613797</a></author><comments><comment><text><span class="comment-copy">Great! This worked. I had the .p7b file. I imported that to my IIS using the instructions provided by GoDaddy. Then generated the .cer file (key file) and then used this utility to get the pfx.</span></text><author><a class="comment-user" href="/users/955688/dot-netter" title="59 reputation">dot netter</a></author></comment><comment><text><span class="comment-copy">The Digicert tool is bar far the best.</span></text><author><a class="comment-user" href="/users/443550/l-7337" title="1,733 reputation">L_7337</a></author></comment><comment><text><span class="comment-copy">I can't see any way of doing what the OP wants to do using this tool. It seems to only allow you to export certificates - not create them from key and cer files.</span></text><author><a class="comment-user" href="/users/229587/nickg" title="3,313 reputation">NickG</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p><a href="https://msdn.microsoft.com/en-us/library/ff699202.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/ff699202.aspx</a></p>
<p>(( relevant quotes from the article are below ))</p>
<p>Next, you have to create the .pfx file that you will use to sign your deployments. Open a Command Prompt window, and type the following command:</p>
<pre><code>PVK2PFX –pvk yourprivatekeyfile.pvk –spc yourcertfile.cer –pfx yourpfxfile.pfx –po yourpfxpassword
</code></pre>
<p>where:</p>
<pre><code>-pvk yourprivatekeyfile.pvk is the private key file that you created in step 4.
-spc yourcertfile.cer is the certificate file you created in step 4.
-pfx yourpfxfile.pfx is the name of the .pfx file that will be created.
-po yourpfxpassword is the password that you want to assign to the .pfx file. You will be prompted for this password when you add the .pfx file to a project in Visual Studio for the first time. 
</code></pre>
<p>(Optionally (and not for the OP, but for future readers), you can create the .cer and .pvk file from scratch) (you would do this BEFORE the above).  note the mm/dd/yyyy are placeholders for start and end dates.  see msdn article for full documentation.</p>
<pre><code>makecert -sv yourprivatekeyfile.pvk -n "CN=My Certificate Name" yourcertfile.cer -b mm/dd/yyyy -e mm/dd/yyyy -r
</code></pre>
</div></text><author><a href="/users/214977/granadacoder">granadaCoder</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>I was having the same issue.  My problem was that the computer that generated the initial certificate request had crashed before the extended ssl validation process was completed.  I needed to generate a new private key and then import the updated certificate from the certificate provider.  If the private key doesn't exist on your computer then you can't export the certificate as pfx.  They option is greyed out.</p>
</div></text><author><a href="/users/5484/bill-mahoney">Bill Mahoney</a></author><comments/></answer><answer><text><div class="post-text" itemprop="text">
<p>I created .pfx file from .key and .pem files.</p>
<p>Like this <code>openssl pkcs12 -inkey rootCA.key -in rootCA.pem -export -out rootCA.pfx</code></p>
</div></text><author><a href="/users/2160044/siim-nelis">Siim Nelis</a></author><comments><comment><text><span class="comment-copy">This is basically the same command I used, but I needed to add winpty before openssl (eg, winpty openssl pkcs12....) while using Git bash, which is a common solution for openssl on windows.</span></text><author><a class="comment-user" href="/users/2064745/sqldba" title="1,537 reputation">SQLDBA</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>In most of the cases, if you are unable to export the certificate as a PFX (including the private key) is because MMC/IIS cannot find/don't have access to the private key (used to generate the CSR). These are the steps I followed to fix this issue:</p>
<ul>
<li>Run MMC as Admin

<ul>
<li>Generate the CSR using MMC. Follow <a href="https://wiki.cac.washington.edu/pages/viewpage.action?pageId=62554187" rel="nofollow">this instructions</a> to make the certificate exportable. </li>
</ul></li>
<li>Once you get the certificate from the CA (crt + p7b), import them (Personal\Certificates, and Intermediate Certification Authority\Certificates) </li>
<li>IMPORTANT: Right-click your new certificate (Personal\Certificates) All Tasks..Manage Private Key, and assign permissions to your account or Everyone (risky!). You can go back to previous permissions once you have finished.</li>
<li>Now, right-click the certificate and select All Tasks..Export, and you should be able to export the certificate including the private key as a PFX file, and you can upload it to Azure!</li>
</ul>
<p>Hope this helps!</p>
</div></text><author><a href="/users/2461574/jose-parra">Jose Parra</a></author><comments><comment><text><span class="comment-copy">I already have my certificadte in Personal\Certificates, but with Right Click dont appears "Manage Private Key". The options I get are: "Request Certificate with New key...", "Renew Certificate with New key..." and "Export"... Do you have any idea what I'm missing?</span></text><author><a class="comment-user" href="/users/334963/gabrielizalo" title="139 reputation">Gabrielizalo</a></author></comment><comment><text><span class="comment-copy">I fixed it with the portable certificate converter from DigiCert: <a href="https://www.digicert.com/util/pfx-certificate-management-utility-import-export-instructions.htm" rel="nofollow noreferrer">digicert.com/util/…</a></span></text><author><a class="comment-user" href="/users/334963/gabrielizalo" title="139 reputation">Gabrielizalo</a></author></comment><comment><text><span class="comment-copy">You failed at "generate CSR". If you already have the private key, you don't need to generate a CSR. Please read the original question.</span></text><author><a class="comment-user" href="/users/229587/nickg" title="3,313 reputation">NickG</a></author></comment></comments></answer><answer><text><div class="post-text" itemprop="text">
<p>Although it is probably easiest to generate a new CSR using IIS (like @rainabba said), assuming you have the intermediate certificates there are some online converters out there - for instance:
<a href="https://www.sslshopper.com/ssl-converter.html" rel="nofollow noreferrer">https://www.sslshopper.com/ssl-converter.html</a></p>
<p>This will allow you to create a PFX from your certificate and private key without having to install another program.</p>
</div></text><author><a href="/users/907734/william">William</a></author><comments/></answer></answers></post>